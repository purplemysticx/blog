<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Some repos in aliyun</title>
    <url>/aliyun-repo.html</url>
    <content><![CDATA[<h1 id="aliyun-repo"><a href="#aliyun-repo" class="headerlink" title="aliyun repo"></a>aliyun repo</h1><h2 id="pip-Repo"><a href="#pip-Repo" class="headerlink" title="pip Repo"></a>pip Repo</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ====== linux ======</span></span><br><span class="line">mkdir ~/.pip</span><br><span class="line">cat &gt; ~/.pip/pip.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[global]</span></span><br><span class="line"><span class="string">index-url=https://mirrors.aliyun.com/pypi/simple/</span></span><br><span class="line"><span class="string">extra-index-url=https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[list]</span></span><br><span class="line"><span class="string">format=columns</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="comment"># ====== windows ======</span></span><br><span class="line">mkdir <span class="variable">$APPDATA</span>/pip</span><br><span class="line">touch <span class="variable">$APPDATA</span>/pip/pip.ini</span><br><span class="line"><span class="comment"># or (This is a legacy configuration)</span></span><br><span class="line">mkdir <span class="variable">$HOME</span>/pip</span><br><span class="line">touch <span class="variable">$HOME</span>/pip/pip.ini</span><br></pre></td></tr></table></figure>

<h2 id="centos8-Repo"><a href="#centos8-Repo" class="headerlink" title="centos8 Repo"></a>centos8 Repo</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[AppStream]</span><br><span class="line">name=CentOS-$releasever - aliyun - AppStream</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/AppStream/$basearch/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[BaseOS]</span><br><span class="line">name=CentOS-$releasever - aliyun - Base</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/BaseOS/$basearch/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - aliyun - extras</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - aliyun - centosplus</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[HighAvailability]</span><br><span class="line">name=CentOS-$releasever - aliyun - HighAvailability</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/HighAvailability/$basearch/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[PowerTools]</span><br><span class="line">name=CentOS-$releasever - aliyun - PowerTools</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/PowerTools/$basearch/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[epel]</span><br><span class="line">name=CentOS-$releasever - aliyun - epel</span><br><span class="line">baseurl=https://mirrors.aliyun.com/epel/$releasever/Everything/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>

<h2 id="ubuntu18-04-Repo"><a href="#ubuntu18-04-Repo" class="headerlink" title="ubuntu18.04 Repo"></a>ubuntu18.04 Repo</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>repo</tag>
        <tag>pip</tag>
        <tag>centos</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible install software from source</title>
    <url>/ansible-install-from-source.html</url>
    <content><![CDATA[<h1 id="install-lldpd-from-source-by-ansible"><a href="#install-lldpd-from-source-by-ansible" class="headerlink" title="install lldpd from source by ansible"></a>install lldpd from source by ansible</h1><h2 id="show-the-content"><a href="#show-the-content" class="headerlink" title="show the content"></a>show the content</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat lldpd.yml</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">lldpd</span> <span class="string">installation</span></span><br><span class="line">    <span class="attr">vars:</span></span><br><span class="line">        <span class="attr">lldpd_version:</span> <span class="number">1.0</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Retrieve</span> <span class="string">lldpd</span> <span class="string">source</span> <span class="string">code</span></span><br><span class="line">            <span class="attr">get_url:</span></span><br><span class="line">                <span class="comment"># TODO replace it</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Extract</span> <span class="string">archive</span></span><br><span class="line">            <span class="attr">unarchive:</span></span><br><span class="line">                <span class="comment"># if configured like as the following, &#x27;Retrieve lldpd source code&#x27; task can be removed</span></span><br><span class="line">                <span class="comment"># src: https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123; lldpd_version &#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">src:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">install</span></span><br><span class="line">            <span class="attr">command:</span> <span class="string">./configure</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">                <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;/configure.status.log</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Build</span> <span class="string">lldpd</span></span><br><span class="line">            <span class="attr">command:</span> <span class="string">make</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">                <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;/make.status.log</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Install</span> <span class="string">lldpd</span></span><br><span class="line">            <span class="attr">become:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">command:</span> <span class="string">make</span> <span class="string">install</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">                <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;/make_install.status.log</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">chroot</span> <span class="string">for</span> <span class="string">lldpd</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/usr/local/var/run/lldpd</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">group</span></span><br><span class="line">            <span class="attr">group:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">user</span></span><br><span class="line">            <span class="attr">user:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">                <span class="attr">group:</span> <span class="string">_lldpd</span></span><br><span class="line">                <span class="attr">comment:</span> <span class="string">lldpd</span> <span class="string">user</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">build</span> <span class="string">directory</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">archive</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">lldpd_version</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">            <span class="attr">systemd:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">                <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">                <span class="attr">masked:</span> <span class="literal">false</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Start</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">            <span class="attr">systemd:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook lldpd.yml</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>automation</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Run a specified role in ansible</title>
    <url>/ansible-role-tags.html</url>
    <content><![CDATA[<h1 id="install-lldpd-by-ansible-roles"><a href="#install-lldpd-by-ansible-roles" class="headerlink" title="install lldpd by ansible roles"></a>install lldpd by ansible roles</h1><h2 id="ansible-layout"><a href="#ansible-layout" class="headerlink" title="ansible layout"></a>ansible layout</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@03e6e45a7f92 cc]<span class="comment"># tree ansible</span></span><br><span class="line">ansible</span><br><span class="line">├── roles</span><br><span class="line">│   └── lldp</span><br><span class="line">│       ├── defaults</span><br><span class="line">│       │   └── main.yml</span><br><span class="line">│       ├── files</span><br><span class="line">│       └── tasks</span><br><span class="line">│           ├── disable_lldp.yml</span><br><span class="line">│           ├── enable_lldp.yml</span><br><span class="line">│           └── main.yml</span><br><span class="line">└── site.yml</span><br><span class="line"></span><br><span class="line">5 directories, 5 files</span><br></pre></td></tr></table></figure>

<h2 id="show-the-content"><a href="#show-the-content" class="headerlink" title="show the content"></a>show the content</h2><h3 id="site-yml"><a href="#site-yml" class="headerlink" title="site.yml"></a>site.yml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">lldpd</span> <span class="string">installation</span></span><br><span class="line">    <span class="attr">roles:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">role:</span> <span class="string">lldp</span></span><br><span class="line">            <span class="attr">tags:</span> <span class="string">lldp</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<p>Or like this</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">lldpd</span> <span class="string">installation</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">import_role:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">lldp</span></span><br><span class="line">            <span class="attr">tags:</span> <span class="string">lldp</span></span><br></pre></td></tr></table></figure>

<h3 id="defaults-main-yml"><a href="#defaults-main-yml" class="headerlink" title="defaults/main.yml"></a>defaults/main.yml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">LLDPD_VERSION:</span> <span class="number">1.0</span><span class="number">.5</span></span><br></pre></td></tr></table></figure>

<h3 id="tasks-main-yml"><a href="#tasks-main-yml" class="headerlink" title="tasks/main.yml"></a>tasks/main.yml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">include:</span> <span class="string">enable_lldp.yml</span></span><br></pre></td></tr></table></figure>

<h3 id="tasks-enable-lldp-yml"><a href="#tasks-enable-lldp-yml" class="headerlink" title="tasks/enable_lldp.yml"></a>tasks/enable_lldp.yml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Retrieve</span> <span class="string">lldpd</span> <span class="string">source</span> <span class="string">code</span></span><br><span class="line">    <span class="attr">get_url:</span></span><br><span class="line">        <span class="comment"># TODO replace it</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Extract</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">unarchive:</span></span><br><span class="line">        <span class="comment"># if configured like as the following, &#x27;Retrieve lldpd source code&#x27; task can be removed</span></span><br><span class="line">        <span class="comment"># src: https://media.luffy.cx/files/lldpd/lldpd-&#123;&#123; LLDPD_VERSION &#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/tmp</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">install</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">./configure</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;/configure.status.log</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Build</span> <span class="string">lldpd</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">make</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;/make.status.log</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Install</span> <span class="string">lldpd</span></span><br><span class="line">    <span class="attr">become:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">make</span> <span class="string">install</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">creates:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;/make_install.status.log</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">chroot</span> <span class="string">for</span> <span class="string">lldpd</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/usr/local/var/run/lldpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">group</span></span><br><span class="line">    <span class="attr">group:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">_lldpd</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">_lldpd</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">_lldpd</span></span><br><span class="line">        <span class="attr">comment:</span> <span class="string">lldpd</span> <span class="string">user</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">build</span> <span class="string">directory</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/tmp/lldpd-&#123;&#123;</span> <span class="string">LLDPD_VERSION</span> <span class="string">&#125;&#125;.tar.gz</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Create</span> <span class="string">lldpd.conf</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/etc/lldpd.conf</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">touch</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">lldpd.conf</span></span><br><span class="line">    <span class="attr">blockinfile:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/etc/lldpd.conf</span></span><br><span class="line">        <span class="attr">block:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            # Reference from https://vincentbernat.github.io/lldpd/usage.html</span></span><br><span class="line"><span class="string">            configure system chassisid &lt;chassisid&gt;</span></span><br><span class="line"><span class="string">            configure system hostname &lt;hostname&gt;</span></span><br><span class="line"><span class="string">            configure system description &lt;description&gt;</span></span><br><span class="line"><span class="string">            configure system platform &lt;platform&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">interface</span> <span class="string">pattern</span> <span class="string">eth0,eth1</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">system</span> <span class="string">interface</span> <span class="string">permanent</span> <span class="string">eth0,eth1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># rx-and-tx: receive and transmit LLDP frames</span></span><br><span class="line">            <span class="comment"># tx-only:</span></span><br><span class="line">            <span class="comment"># rx-only:</span></span><br><span class="line">            <span class="comment"># disabled:</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">ports</span> <span class="string">eth0,eth1</span> <span class="string">lldp</span> <span class="string">status</span> <span class="string">tx-only</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># TTL is tx-interval * tx-hold, i.e. 120 seconds</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">lldp</span> <span class="string">tx-interval</span> <span class="string">&lt;number,</span> <span class="string">default</span> <span class="string">is</span> <span class="number">30</span> <span class="string">seconds&gt;</span></span><br><span class="line">            <span class="string">configure</span> <span class="string">lldp</span> <span class="string">tx-hold</span> <span class="string">&lt;number,</span> <span class="string">default</span> <span class="string">is</span> <span class="number">4</span><span class="string">&gt;</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">    <span class="attr">systemd:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">masked:</span> <span class="literal">false</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Start</span> <span class="string">lldpd</span> <span class="string">service</span></span><br><span class="line">    <span class="attr">systemd:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">lldpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook site.yml</span><br><span class="line"><span class="comment"># or only run role: lldp</span></span><br><span class="line">ansible-playbook site.yml -t lldp</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>automation</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible</title>
    <url>/ansible.html</url>
    <content><![CDATA[<h1 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h1><blockquote>
<p>  <a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html#directory-layout">Directory Layout</a></p>
</blockquote>
<h2 id="Directory-Layout"><a href="#Directory-Layout" class="headerlink" title="Directory Layout"></a>Directory Layout</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">production                # inventory file for production servers</span><br><span class="line">staging                   # inventory file for staging environment</span><br><span class="line"></span><br><span class="line">group_vars/</span><br><span class="line">   group1.yml             # here we assign variables to particular groups</span><br><span class="line">   group2.yml</span><br><span class="line">host_vars/</span><br><span class="line">   hostname1.yml          # here we assign variables to particular systems</span><br><span class="line">   hostname2.yml</span><br><span class="line"></span><br><span class="line">library/                  # if any custom modules, put them here (optional)</span><br><span class="line">module_utils/             # if any custom module_utils to support modules, put them here (optional)</span><br><span class="line">filter_plugins/           # if any custom filter plugins, put them here (optional)</span><br><span class="line"></span><br><span class="line">site.yml                  # master playbook</span><br><span class="line">webservers.yml            # playbook for webserver tier</span><br><span class="line">dbservers.yml             # playbook for dbserver tier</span><br><span class="line"></span><br><span class="line">roles/</span><br><span class="line">    common/               # this hierarchy represents a &quot;role&quot;</span><br><span class="line">        tasks/            #</span><br><span class="line">            main.yml      #  &lt;-- tasks file can include smaller files if warranted</span><br><span class="line">        handlers/         #</span><br><span class="line">            main.yml      #  &lt;-- handlers file</span><br><span class="line">        templates/        #  &lt;-- files for use with the template resource</span><br><span class="line">            ntp.conf.j2   #  &lt;------- templates end in .j2</span><br><span class="line">        files/            #</span><br><span class="line">            bar.txt       #  &lt;-- files for use with the copy resource</span><br><span class="line">            foo.sh        #  &lt;-- script files for use with the script resource</span><br><span class="line">        vars/             #</span><br><span class="line">            main.yml      #  &lt;-- variables associated with this role</span><br><span class="line">        defaults/         #</span><br><span class="line">            main.yml      #  &lt;-- default lower priority variables for this role</span><br><span class="line">        meta/             #</span><br><span class="line">            main.yml      #  &lt;-- role dependencies</span><br><span class="line">        library/          # roles can also include custom modules</span><br><span class="line">        module_utils/     # roles can also include custom module_utils</span><br><span class="line">        lookup_plugins/   # or other types of plugins, like lookup in this case</span><br><span class="line"></span><br><span class="line">    webtier/              # same kind of structure as &quot;common&quot; was above, done for the webtier role</span><br><span class="line">    monitoring/           # &quot;&quot;</span><br><span class="line">    fooapp/               # &quot;&quot;</span><br></pre></td></tr></table></figure>

<p>roles下的目录含义:</p>
<p><code>files</code>：用来存放由copy模块或script模块调用的文件。<br><code>templates</code>：用来存放jinjia2模板，template模块会自动在此目录中寻找jinjia2模板文件。<br><code>tasks</code>：此目录应当包含一个main.yml文件，用于定义此角色的任务列表，此文件可以使用include包含其它的位于此目录的task文件。<br><code>handlers</code>：此目录应当包含一个main.yml文件，用于定义此角色中触发条件时执行的动作。<br><code>vars</code>：此目录应当包含一个main.yml文件，用于定义此角色用到的变量。<br><code>defaults</code>：此目录应当包含一个main.yml文件，用于为当前角色设定默认变量。<br><code>meta</code>：此目录应当包含一个main.yml文件，用于定义此角色的特殊设定及其依赖关系。</p>
<h2 id="Alternative-Directory-Layout"><a href="#Alternative-Directory-Layout" class="headerlink" title="Alternative Directory Layout"></a>Alternative Directory Layout</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inventories/</span><br><span class="line">   production/</span><br><span class="line">      hosts               # inventory file for production servers</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         hostname1.yml    # here we assign variables to particular systems</span><br><span class="line">         hostname2.yml</span><br><span class="line"></span><br><span class="line">   staging/</span><br><span class="line">      hosts               # inventory file for staging environment</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         stagehost1.yml   # here we assign variables to particular systems</span><br><span class="line">         stagehost2.yml</span><br><span class="line"></span><br><span class="line">library/</span><br><span class="line">module_utils/</span><br><span class="line">filter_plugins/</span><br><span class="line"></span><br><span class="line">site.yml</span><br><span class="line">webservers.yml</span><br><span class="line">dbservers.yml</span><br><span class="line"></span><br><span class="line">roles/</span><br><span class="line">    common/</span><br><span class="line">    webtier/</span><br><span class="line">    monitoring/</span><br><span class="line">    fooapp/</span><br><span class="line">   </span><br></pre></td></tr></table></figure>

<h1 id="env"><a href="#env" class="headerlink" title="env"></a>env</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./</span><br><span class="line">├── filter_plugins</span><br><span class="line">├── group_vars</span><br><span class="line">├── host_vars</span><br><span class="line">│   └── hosts</span><br><span class="line">├── library</span><br><span class="line">├── module_utils</span><br><span class="line">├── roles</span><br><span class="line">└── site.yaml</span><br><span class="line"></span><br><span class="line">6 directories, 2 files</span><br></pre></td></tr></table></figure>

<h1 id="ansible-cli"><a href="#ansible-cli" class="headerlink" title="ansible cli"></a>ansible cli</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># find system serial</span></span><br><span class="line"><span class="comment"># --module-name or -m    --args or -a</span></span><br><span class="line">ansible localhost --module-name setup --args <span class="string">&#x27;filter=ansible_product_serial&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list groups</span></span><br><span class="line">ansible localhost -m debug -a <span class="string">&#x27;var=groups&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list groups keys</span></span><br><span class="line">ansible localhost -m debug -a <span class="string">&#x27;var=groups.keys()&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list groups(or this command)</span></span><br><span class="line">ansible-inventory -i inventory/prod.yml --list</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span> <span class="string">hello-world</span> <span class="string">example</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">set_fact:</span></span><br><span class="line">                <span class="attr">hello:</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Create</span> <span class="string">a</span> <span class="string">file</span> <span class="string">called</span> <span class="string">&#x27;/tmp/testfile.txt&#x27;</span> <span class="string">with</span> <span class="string">the</span> <span class="string">content</span> <span class="string">&#x27;hello world&#x27;</span><span class="string">.</span></span><br><span class="line">            <span class="attr">copy:</span></span><br><span class="line">            	<span class="comment"># get variable from hostvars</span></span><br><span class="line">                <span class="attr">content:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; hostvars[inventory_hostname][&quot;hello&quot;] &#125;&#125;</span>&#x27;</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/testfile.txt</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="append-some-lines-to-a-test-file"><a href="#append-some-lines-to-a-test-file" class="headerlink" title="append some lines to a test file"></a>append some lines to a test file</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span> <span class="string">hello-world</span> <span class="string">example</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">vars:</span></span><br><span class="line">        <span class="attr">device_by_pci_address:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;</span></span></span><br><span class="line"><span class="template-variable"><span class="string">            ansible_facts | json_query(&#x27;@.* | [?pciid].&#123;key: pciid, value: device&#125;&#x27;) | items2dict</span></span></span><br><span class="line"><span class="template-variable"><span class="string">        &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">set</span> <span class="string">some</span> <span class="string">variables</span> <span class="string">to</span> <span class="string">hostvars</span></span><br><span class="line">            <span class="attr">set_fact:</span></span><br><span class="line">                <span class="attr">classmates:</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">&#x27;male&#x27;</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">&#x27;AA&#x27;</span></span><br><span class="line">                        <span class="attr">age:</span> <span class="number">15</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">&#x27;female&#x27;</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">&#x27;BB&#x27;</span></span><br><span class="line">                        <span class="attr">age:</span> <span class="number">16</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">&#x27;male&#x27;</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">&#x27;CC&#x27;</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">&#x27;female&#x27;</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">&#x27;DD&#x27;</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">&#x27;male&#x27;</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">&#x27;lo&#x27;</span></span><br><span class="line">                    <span class="bullet">-</span></span><br><span class="line">                        <span class="attr">sex:</span> <span class="string">&#x27;female&#x27;</span></span><br><span class="line">                        <span class="attr">name:</span> <span class="string">&#x27;enp0s3&#x27;</span></span><br><span class="line">                <span class="attr">pci_bus_addr2nic:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; ansible_facts | json_query(&#x27;@.* | [?pciid].&#123;key: pciid, value: device&#125;&#x27;) | items2dict &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Get</span> <span class="string">system</span> <span class="string">serial</span></span><br><span class="line">            <span class="attr">become:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">shell:</span> <span class="string">cat</span> <span class="string">/sys/devices/virtual/dmi/id/product_serial</span></span><br><span class="line">            <span class="attr">register:</span> <span class="string">system_serial</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">create</span> <span class="string">a</span> <span class="string">test</span> <span class="string">file</span></span><br><span class="line">            <span class="attr">file:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/tmp/testfile.txt</span></span><br><span class="line">                <span class="attr">state:</span> <span class="string">touch</span></span><br><span class="line">                <span class="attr">owner:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">group:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">mode:</span> <span class="number">0777</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">append</span> <span class="string">some</span> <span class="string">lines</span> <span class="string">to</span> <span class="string">the</span> <span class="string">test</span> <span class="string">file</span></span><br><span class="line">            <span class="attr">lineinfile:</span></span><br><span class="line">                <span class="comment"># test: get the mac address of a nic</span></span><br><span class="line">                <span class="attr">line:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; item.name &#125;&#125;</span>: <span class="template-variable">&#123;&#123; item.sex &#125;&#125;</span> ==&gt; <span class="template-variable">&#123;&#123; ansible_facts[item.name].macaddress &#125;&#125;</span> &#x27;</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/testfile.txt</span></span><br><span class="line">            <span class="attr">loop:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; hostvars[inventory_hostname][&quot;classmates&quot;] &#125;&#125;</span>&#x27;</span></span><br><span class="line">            <span class="attr">when:</span> <span class="string">inventory_hostname</span> <span class="string">not</span> <span class="string">in</span> [<span class="string">&#x27;host1&#x27;</span>, <span class="string">&#x27;host2&#x27;</span>] <span class="string">and</span> <span class="string">item.name</span> <span class="string">in</span> [<span class="string">&#x27;enp0s3&#x27;</span>]</span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">To</span> <span class="string">add</span> <span class="string">a</span> <span class="string">block</span> <span class="string">to</span> <span class="string">a</span> <span class="string">file</span></span><br><span class="line">            <span class="attr">blockinfile:</span></span><br><span class="line">                <span class="attr">dest:</span> <span class="string">/tmp/testfile.txt</span></span><br><span class="line">                <span class="attr">block:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    hello world</span></span><br><span class="line"><span class="string">                    Java is the best.</span></span><br><span class="line"><span class="string">                    system_serial.stdout: &#123;&#123; system_serial.stdout &#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">                    &#123;&#123; <span class="string">hostvars</span>[<span class="string">inventory_hostname</span>]<span class="string">.system_serial.stdout</span> &#125;&#125;</span><br><span class="line">                    <span class="comment">#########</span></span><br><span class="line">                    <span class="attr">pci_bus_addr2nic:</span> &#123;&#123; <span class="string">pci_bus_addr2nic</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">                    &#123;&#123; <span class="string">hostvars</span>[<span class="string">inventory_hostname</span>][<span class="string">&quot;pci_bus_addr2nic&quot;</span>] &#125;&#125;</span><br><span class="line">                    <span class="comment">###########</span></span><br><span class="line">                    <span class="attr">device_by_pci_address:</span> &#123;&#123; <span class="string">device_by_pci_address</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">                    <span class="attr">Must not Get from this way:</span> <span class="string">hostvars[inventory_hostname][&quot;device_by_pci_address&quot;]</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">pci_bus_addr2nic</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">device_by_pci_address</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="comment"># this variable is from ansible_facts</span></span><br><span class="line">                <span class="comment"># you can get some info by this command (ansible localhost --module-name setup --args &#x27;filter=ansible_product_serial&#x27;)</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">ansible_product_serial</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">debug:</span></span><br><span class="line">                <span class="attr">var:</span> <span class="string">system_serial.stdout</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="install-a-package-on-RHEL"><a href="#install-a-package-on-RHEL" class="headerlink" title="install a package on RHEL"></a>install a package on RHEL</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">install</span> <span class="string">Apache</span> <span class="string">webserver</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">install</span> <span class="string">httpd</span></span><br><span class="line">            <span class="attr">dnf:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">                <span class="attr">State:</span> <span class="string">latest</span></span><br></pre></td></tr></table></figure>

<h2 id="install-a-package-on-Debian"><a href="#install-a-package-on-Debian" class="headerlink" title="install a package on Debian"></a>install a package on Debian</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">install</span> <span class="string">Apache</span> <span class="string">webserver</span></span><br><span class="line">    <span class="attr">hosts:</span> <span class="string">databases</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">install</span> <span class="string">Apache</span> <span class="string">webserver</span></span><br><span class="line">            <span class="attr">apt:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">apache2</span></span><br><span class="line">                <span class="attr">State:</span> <span class="string">latest</span></span><br></pre></td></tr></table></figure>

<h2 id="operate-a-service"><a href="#operate-a-service" class="headerlink" title="operate a service"></a>operate a service</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># https://medium.com/bigpanda-engineering/using-ansible-to-compile-nginx-from-sources-with-custom-modules-f6e6c6a42493</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Start</span> <span class="string">service</span> <span class="string">httpd,</span> <span class="string">if</span> <span class="string">not</span> <span class="string">started</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Stop</span> <span class="string">service</span> <span class="string">httpd</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">stopped</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Restart</span> <span class="string">network</span> <span class="string">service</span> <span class="string">for</span> <span class="string">interface</span> <span class="string">eth0</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">network</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line">        <span class="attr">args:</span> <span class="string">enp2s0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>automation</category>
      </categories>
      <tags>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Asciidoc with Spring Restdocs</title>
    <url>/asciidoc-restdocs.html</url>
    <content><![CDATA[<h1 id="Integrate-Asciidoc-with-Spring-Restdocs"><a href="#Integrate-Asciidoc-with-Spring-Restdocs" class="headerlink" title="Integrate Asciidoc with Spring Restdocs"></a>Integrate Asciidoc with Spring Restdocs</h1><h2 id="Preconditon"><a href="#Preconditon" class="headerlink" title="Preconditon"></a>Preconditon</h2><p><strong>The following is based on Webflux</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">asciidoctor version: 3.2.0</span><br><span class="line">spring restdocs version: 2.0.4.RELEASE</span><br><span class="line">dependency management: gradle</span><br></pre></td></tr></table></figure>

<p>Some asciidoctor knowledge:</p>
<p>sourceDir: <code>src/docs/asciidoc</code></p>
<p>outputDir: <code>$&#123;buildDir&#125;/docs/asciidoc</code></p>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="common-config"><a href="#common-config" class="headerlink" title="common config"></a>common config</h3><p>The following config is not a complete configuration.</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// plugins</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;org.springframework.boot&#x27;</span> version <span class="string">&#x27;2.3.0.M4&#x27;</span></span><br><span class="line">    id <span class="string">&#x27;io.spring.dependency-management&#x27;</span> version <span class="string">&#x27;1.0.9.RELEASE&#x27;</span></span><br><span class="line">    id <span class="string">&#x27;java&#x27;</span></span><br><span class="line">    <span class="comment">/* for rest docs */</span></span><br><span class="line">    id <span class="string">&#x27;org.asciidoctor.jvm.convert&#x27;</span> version <span class="string">&#x27;3.2.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configurations &#123;</span><br><span class="line">    asciidoctorExtensions</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ext &#123;</span><br><span class="line">    set(<span class="string">&#x27;snippetsDir&#x27;</span>, file(<span class="string">&#x27;build/generated-snippets&#x27;</span>))</span><br><span class="line">    set(<span class="string">&#x27;springRestdocsVersion&#x27;</span>, <span class="string">&#x27;2.0.4.RELEASE&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    testImplementation(<span class="string">&#x27;org.springframework.boot:spring-boot-starter-test&#x27;</span>) &#123;</span><br><span class="line">        exclude <span class="attr">group:</span> <span class="string">&#x27;org.junit.vintage&#x27;</span>, <span class="attr">module:</span> <span class="string">&#x27;junit-vintage-engine&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    testImplementation <span class="string">&#x27;io.projectreactor:reactor-test&#x27;</span></span><br><span class="line">    <span class="comment">/* for rest docs */</span></span><br><span class="line">    testImplementation <span class="string">&quot;org.springframework.restdocs:spring-restdocs-webtestclient:$&#123;springRestdocsVersion&#125;&quot;</span></span><br><span class="line">    asciidoctorExtensions <span class="string">&quot;org.springframework.restdocs:spring-restdocs-asciidoctor:$&#123;springRestdocsVersion&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test &#123;</span><br><span class="line">    outputs.dir snippetsDir</span><br><span class="line">    useJUnitPlatform()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">asciidoctor &#123;</span><br><span class="line">    configurations <span class="string">&#x27;asciidoctorExtensions&#x27;</span></span><br><span class="line">    dependsOn test</span><br><span class="line">    attributes <span class="string">&#x27;snippets&#x27;</span>: snippetsDir</span><br><span class="line">    inputs.dir snippetsDir</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bootJar &#123;</span><br><span class="line">    dependsOn asciidoctor</span><br><span class="line">    from(<span class="string">&quot;$&#123;asciidoctor.outputDir&#125;&quot;</span>) &#123;</span><br><span class="line">        into <span class="string">&#x27;static/docs&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="create-docs-asciidoc-directory"><a href="#create-docs-asciidoc-directory" class="headerlink" title="create docs/asciidoc/ directory"></a>create docs/asciidoc/ directory</h3><p>like this</p>
<p><img src="assets/20200427131513411.png" alt="directory_layout"></p>
<h3 id="index-adoc-amp-updateUser-adoc-e-g"><a href="#index-adoc-amp-updateUser-adoc-e-g" class="headerlink" title="index.adoc &amp; updateUser.adoc(e.g.)"></a>index.adoc &amp; updateUser.adoc(e.g.)</h3><p>index.adoc</p>
<figure class="highlight adoc"><table><tr><td class="code"><pre><span class="line"><span class="section">= Blog Restful API</span></span><br><span class="line">Purple Mystic;</span><br><span class="line"><span class="meta">:toc:</span> left</span><br><span class="line"><span class="meta">:toc-title:</span> Chapter</span><br><span class="line"><span class="meta">:doctype:</span> book</span><br><span class="line"><span class="meta">:icons:</span> font</span><br><span class="line"><span class="meta">:source-highlighter:</span> highlightjs</span><br><span class="line"><span class="meta">:sourcedir:</span> &#123;sourcedir&#125;/user</span><br><span class="line"></span><br><span class="line">include::createUser.adoc[]</span><br><span class="line">include::updateUser.adoc[]</span><br><span class="line">include::findUserById.adoc[]</span><br><span class="line">include::findAllUsers.adoc[]</span><br></pre></td></tr></table></figure>

<p>updateUser.adoc</p>
<figure class="highlight adoc"><table><tr><td class="code"><pre><span class="line"><span class="section">== *Backend: updateUser:*</span></span><br><span class="line"></span><br><span class="line"><span class="section">=== Curl request:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/curl-request.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== HTTP request:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/http-request.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== HTTP response:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/http-response.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== Request using HTTPie:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/httpie-request.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== Request body:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/request-body.adoc[]</span><br><span class="line"></span><br><span class="line"><span class="section">=== Response body:</span></span><br><span class="line"></span><br><span class="line">include::&#123;snippets&#125;/updateUser/response-body.adoc[]</span><br></pre></td></tr></table></figure>

<h3 id="Other-solution"><a href="#Other-solution" class="headerlink" title="Other solution"></a>Other solution</h3><ul>
<li>  remove <code>:sourcedir: &#123;sourcedir&#125;/user</code> from index.adoc</li>
<li>  reconfigure asciidoctor task in build.gradle, like this</li>
</ul>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">asciidoctor &#123;</span><br><span class="line">    configurations <span class="string">&#x27;asciidoctorExtensions&#x27;</span></span><br><span class="line">    dependsOn test</span><br><span class="line">    attributes <span class="string">&#x27;snippets&#x27;</span>: snippetsDir</span><br><span class="line">    inputs.dir snippetsDir</span><br><span class="line">    sources &#123;</span><br><span class="line">        include <span class="string">&#x27;**/index.adoc&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    baseDirFollowsSourceFile()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Unit-Tests"><a href="#Unit-Tests" class="headerlink" title="Unit Tests"></a>Unit Tests</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> team.star.blog.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeEach;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.extension.ExtendWith;</span><br><span class="line"><span class="keyword">import</span> org.mockito.Mockito;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.autoconfigure.web.reactive.WebFluxTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.mock.mockito.MockBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.restdocs.RestDocumentationContextProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.restdocs.RestDocumentationExtension;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.reactive.server.WebTestClient;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Flux;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"><span class="keyword">import</span> team.star.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> team.star.blog.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.mockito.Mockito.when;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.operation.preprocess.Preprocessors.prettyPrint;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.request.RequestDocumentation.parameterWithName;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.request.RequestDocumentation.pathParameters;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.document;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.documentationConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFluxTest(UserController.class)</span></span><br><span class="line"><span class="meta">@ExtendWith(RestDocumentationExtension.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserControllerTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext context;</span><br><span class="line">    <span class="keyword">private</span> WebTestClient client;</span><br><span class="line">    <span class="meta">@MockBean</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeEach</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setUp</span><span class="params">(RestDocumentationContextProvider provider)</span> </span>&#123;</span><br><span class="line">        client = WebTestClient.bindToApplicationContext(context)</span><br><span class="line">                .configureClient()</span><br><span class="line">                .filter(</span><br><span class="line">                        documentationConfiguration(provider)</span><br><span class="line">                                .operationPreprocessors()</span><br><span class="line">                                .withRequestDefaults(prettyPrint())</span><br><span class="line">                                .withResponseDefaults(prettyPrint())</span><br><span class="line">                )</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        User u1 = User.builder().id(<span class="number">1</span>).name(<span class="string">&quot;Mystic&quot;</span>).build();</span><br><span class="line">        User u2 = User.builder().id(<span class="number">2</span>).name(<span class="string">&quot;Ran&quot;</span>).build();</span><br><span class="line"></span><br><span class="line">        when(userService.findAll()).thenReturn(Flux.fromIterable(List.of(u1, u2)));</span><br><span class="line">        when(userService.findById(Mockito.anyInt())).thenReturn(Mono.just(u1));</span><br><span class="line">        when(userService.save(Mockito.any(User.class))).thenReturn(Mono.just(u2));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">findUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        client.get().uri(<span class="string">&quot;/user/&#123;id&#125;&quot;</span>, <span class="number">1</span>)</span><br><span class="line">                .exchange()</span><br><span class="line">                .expectStatus().isOk()</span><br><span class="line">                .expectBody(User.class)</span><br><span class="line">                .consumeWith(document(<span class="string">&quot;findUserById&quot;</span>,</span><br><span class="line">                        pathParameters(parameterWithName(<span class="string">&quot;id&quot;</span>).description(<span class="string">&quot;User ID&quot;</span>))</span><br><span class="line">                ));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">findAllUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        client.get().uri(<span class="string">&quot;/user&quot;</span>).exchange()</span><br><span class="line">                .expectStatus().isOk()</span><br><span class="line">                .expectBodyList(User.class)</span><br><span class="line">                .consumeWith(document(<span class="string">&quot;findAllUsers&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">createUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User u3 = User.builder().name(<span class="string">&quot;cc&quot;</span>).build();</span><br><span class="line">        client.post().uri(<span class="string">&quot;/user&quot;</span>)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON)</span><br><span class="line">                .accept(MediaType.APPLICATION_JSON)</span><br><span class="line">                .body(Mono.just(u3), User.class)</span><br><span class="line">                .exchange()</span><br><span class="line">                .expectStatus().isCreated()</span><br><span class="line">                .expectBody()</span><br><span class="line">                .jsonPath(<span class="string">&quot;$.id&quot;</span>).isEqualTo(<span class="number">2</span>)</span><br><span class="line">                .consumeWith(document(<span class="string">&quot;createUser&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User u2 = User.builder().id(<span class="number">2</span>).name(<span class="string">&quot;cc&quot;</span>).build();</span><br><span class="line">        client.patch().uri(<span class="string">&quot;/user&quot;</span>)</span><br><span class="line">                .contentType(MediaType.APPLICATION_JSON)</span><br><span class="line">                .accept(MediaType.APPLICATION_JSON)</span><br><span class="line">                .body(Mono.just(u2), User.class)</span><br><span class="line">                .exchange()</span><br><span class="line">                .expectStatus().isOk()</span><br><span class="line">                .expectBody()</span><br><span class="line">                .jsonPath(<span class="string">&quot;$.name&quot;</span>).isEqualTo(<span class="string">&quot;Ran&quot;</span>)</span><br><span class="line">                .consumeWith(document(<span class="string">&quot;updateUser&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><p><a href="https://github.com/PurpleMystic-star/blog-backend">https://github.com/PurpleMystic-star/blog-backend</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA对@Autowired的使用提示警告</title>
    <url>/autowired-and-resource.html</url>
    <content><![CDATA[<h1 id="idea警告信息"><a href="#idea警告信息" class="headerlink" title="idea警告信息"></a>idea警告信息</h1><pre><code>Spring Team recommends: &quot;Always use constructor based dependency injection in your beans. Always use assertions for mandatory dependencies&quot;.
Spring Team建议：“在你的bean中,使用基于构造函数的依赖注入;并且使用强制依赖关系的断言”。
</code></pre>
<h1 id="被警告的代码"><a href="#被警告的代码" class="headerlink" title="被警告的代码"></a>被警告的代码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h1 id="Spring-Team推荐的写法"><a href="#Spring-Team推荐的写法" class="headerlink" title="Spring Team推荐的写法"></a>Spring Team推荐的写法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserController</span><span class="params">(UserService userService)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.userService = userService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>Spring Team推荐使用构造器注入,我猜测是java变量初始化顺序的原因
Java变量的初始化顺序为：静态变量或静态代码块–&gt;实例变量或初始化代码块–&gt;构造方法 - &gt;@Autowired
</code></pre>
<h1 id="或者使用-Resource"><a href="#或者使用-Resource" class="headerlink" title="或者使用@Resource"></a>或者使用@Resource</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure>
<h1 id="简析-Resource和-Autowired"><a href="#简析-Resource和-Autowired" class="headerlink" title="简析@Resource和@Autowired"></a>简析@Resource和@Autowired</h1><h2 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h2><pre><code>默认按照byName自动注入,由J2EE提供,需要导入javax.annotation.Resource
它有两个重要的属性name和type,而Spring将@Resource注解的name属性解析为bean的名字,而type属性则解析为bean的类型
所以,如果使用name属性,则使用byName的自动注入策略,而使用type属性时则使用byType自动注入策略
如果name和type属性都未指定,则默认byName注入,byName未找到时,会继续采用byType注入
</code></pre>
<h2 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a>@Autowired</h2><pre><code>采用byType自动注入,由Spring提供,需要导入org.springframework.beans.factory.annotation.Autowired
默认情况要求对象必须存在,如果需要为null,可以设置它的required=true
如果接口存在多个实现类,我们依然可以byName自动注入:通过与@Qualifier搭配使用
即先byType,byType匹配到多个时,再通过byName
</code></pre>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(&quot;userServiceForXXX&quot;)</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>BP神经网络算法(python实现)</title>
    <url>/bpnn.html</url>
    <content><![CDATA[<h1 id="BPNN"><a href="#BPNN" class="headerlink" title="BPNN"></a>BPNN</h1><pre><code>神经网络是一种运算模型，由大量的节点（或称神经元）之间相互联接构成。
每个节点代表一种特定的输出函数，称为激励函数（activation function）。
每两个节点间的连接都代表一个对于通过该连接信号的加权值，称之为权重，这相当于人工神经网络的记忆。
网络的输出则依网络的连接方式，权重值和激励函数的不同而不同。
而网络自身通常都是对自然界某种算法或者函数的逼近，也可能是对一种逻辑策略的表达。

神经网络主要有以下几种类型: 前向型、反馈型、随机型和竞争型。
BPNN,Back Propagation Neural Network,属于前向型。
前向型:
    前馈神经网络是指神经元分层排列，由输入层，隐藏层和输出层构成，其中隐藏层可能会有多层。
    这种神经网络的每一层的神经元只接受前一层神经元的输入，后面的层对于前面的层没有信号反馈。
    每一层对于输入数据进行一定的转换，然后将输出结果作为下一层的输入，直到最后输出结果。
</code></pre>
<span id="more"></span>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/23 8:41</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rand</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        生成[a,b)区间内的随机数</span></span><br><span class="line"><span class="string">    :param a:</span></span><br><span class="line"><span class="string">    :param b:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (b - a) * random.random() + a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_matrix</span>(<span class="params">m, n, fill=<span class="number">0.</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        生成m*n的矩阵,默认是零矩阵</span></span><br><span class="line"><span class="string">    :param m:</span></span><br><span class="line"><span class="string">    :param n:</span></span><br><span class="line"><span class="string">    :param fill:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    matrix = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        matrix.append([fill] * n)</span><br><span class="line">    <span class="keyword">return</span> matrix</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        S型函数:Log-sigmoid和Tan-sigmoid[这里采用Log-sigmoid]</span></span><br><span class="line"><span class="string">    :param x:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1.0</span> + math.exp(-x))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid_derivative</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        S型函数Log-sigmoid的导数</span></span><br><span class="line"><span class="string">    :param x:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> x * (<span class="number">1</span> - x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BPNeuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.input_node = <span class="number">0</span></span><br><span class="line">        self.hidden_node = <span class="number">0</span></span><br><span class="line">        self.output_node = <span class="number">0</span></span><br><span class="line">        self.input_cells = []</span><br><span class="line">        self.hidden_cells = []</span><br><span class="line">        self.output_cells = []</span><br><span class="line">        self.input_weights = []</span><br><span class="line">        self.output_weights = []</span><br><span class="line">        self.input_correction = []</span><br><span class="line">        self.output_correction = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setup</span>(<span class="params">self, ni, nh, no</span>):</span></span><br><span class="line">        <span class="comment"># 输入层、隐藏层、输出层的节点(数)</span></span><br><span class="line">        self.input_node = ni + <span class="number">1</span>  <span class="comment"># 增加一个偏差节点</span></span><br><span class="line">        self.hidden_node = nh</span><br><span class="line">        self.output_node = no</span><br><span class="line">        <span class="comment"># init cells 激活神经网络的所有节点</span></span><br><span class="line">        self.input_cells = [<span class="number">1.0</span>] * self.input_node</span><br><span class="line">        self.hidden_cells = [<span class="number">1.0</span>] * self.hidden_node</span><br><span class="line">        self.output_cells = [<span class="number">1.0</span>] * self.output_node</span><br><span class="line">        <span class="comment"># init weights 建立输入层到隐含层权重和隐含层到输出层的权重</span></span><br><span class="line">        self.input_weights = make_matrix(self.input_node, self.hidden_node)</span><br><span class="line">        self.output_weights = make_matrix(self.hidden_node, self.output_node)</span><br><span class="line">        <span class="comment"># random activate</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.input_node):</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(self.hidden_node):</span><br><span class="line">                self.input_weights[i][h] = rand(-<span class="number">0.2</span>, <span class="number">0.2</span>)</span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(self.hidden_node):</span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(self.output_node):</span><br><span class="line">                self.output_weights[h][o] = rand(-<span class="number">2.0</span>, <span class="number">2.0</span>)</span><br><span class="line">        <span class="comment"># init correction matrix 建立动量因子</span></span><br><span class="line">        self.input_correction = make_matrix(self.input_node, self.hidden_node)</span><br><span class="line">        self.output_correction = make_matrix(self.hidden_node, self.output_node)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span>(<span class="params">self, inputs</span>):</span></span><br><span class="line">        <span class="comment"># activate input layer</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.input_node - <span class="number">1</span>):</span><br><span class="line">            self.input_cells[i] = inputs[i]</span><br><span class="line">        <span class="comment"># activate hidden layer</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(self.hidden_node):</span><br><span class="line">            total = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.input_node):</span><br><span class="line">                total += self.input_cells[i] * self.input_weights[i][j]</span><br><span class="line">            self.hidden_cells[j] = sigmoid(total)</span><br><span class="line">        <span class="comment"># activate output layer</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(self.output_node):</span><br><span class="line">            total = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(self.hidden_node):</span><br><span class="line">                total += self.hidden_cells[j] * self.output_weights[j][k]</span><br><span class="line">            self.output_cells[k] = sigmoid(total)</span><br><span class="line">        <span class="keyword">return</span> self.output_cells[:]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">back_propagation</span>(<span class="params">self, case, label, learn, correct</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">            反向传播</span></span><br><span class="line"><span class="string">        :param case: 样本</span></span><br><span class="line"><span class="string">        :param label: 期望样本输出值</span></span><br><span class="line"><span class="string">        :param learn: 学习速率</span></span><br><span class="line"><span class="string">        :param correct: 动量因子</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># feed forward</span></span><br><span class="line">        self.predict(case)</span><br><span class="line">        <span class="comment"># get output layer error</span></span><br><span class="line">        output_deltas = [<span class="number">0.0</span>] * self.output_node</span><br><span class="line">        <span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(self.output_node):</span><br><span class="line">            error = label[o] - self.output_cells[o]</span><br><span class="line">            output_deltas[o] = sigmoid_derivative(self.output_cells[o]) * error</span><br><span class="line">        <span class="comment"># get hidden layer error</span></span><br><span class="line">        hidden_deltas = [<span class="number">0.0</span>] * self.hidden_node</span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(self.hidden_node):</span><br><span class="line">            error = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(self.output_node):</span><br><span class="line">                error += output_deltas[o] * self.output_weights[h][o]</span><br><span class="line">            hidden_deltas[h] = sigmoid_derivative(self.hidden_cells[h]) * error</span><br><span class="line">        <span class="comment"># update output weights</span></span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(self.hidden_node):</span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(self.output_node):</span><br><span class="line">                change = output_deltas[o] * self.hidden_cells[h]</span><br><span class="line">                self.output_weights[h][o] += learn * change + correct * self.output_correction[h][o]</span><br><span class="line">                self.output_correction[h][o] = change</span><br><span class="line">        <span class="comment"># update input weights</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.input_node):</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(self.hidden_node):</span><br><span class="line">                change = hidden_deltas[h] * self.input_cells[i]</span><br><span class="line">                self.input_weights[i][h] += learn * change + correct * self.input_correction[i][h]</span><br><span class="line">                self.input_correction[i][h] = change</span><br><span class="line">        <span class="comment"># get global error</span></span><br><span class="line">        error = <span class="number">0.0</span></span><br><span class="line">        <span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(label)):</span><br><span class="line">            error += <span class="number">0.5</span> * (label[o] - self.output_cells[o]) ** <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> error</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train</span>(<span class="params">self, cases, labels, limit=<span class="number">10000</span>, learn=<span class="number">0.05</span>, correct=<span class="number">0.1</span></span>):</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(limit):</span><br><span class="line">            error = <span class="number">0.0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cases)):</span><br><span class="line">                label = labels[i]</span><br><span class="line">                case = cases[i]</span><br><span class="line">                error += self.back_propagation(case, label, learn, correct)</span><br><span class="line">        <span class="comment"># 返回训练好的权重、动量因子等信息，便于BP网络的保存</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dict</span>(input_node=self.input_node, hidden_node=self.hidden_node, output_node=self.output_node,</span><br><span class="line">                    input_cells=self.input_cells, hidden_cells=self.hidden_cells, output_cells=self.output_cells,</span><br><span class="line">                    input_weights=self.input_weights, output_weights=self.output_weights,</span><br><span class="line">                    input_correction=self.input_correction, output_correction=self.output_correction)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">self</span>):</span></span><br><span class="line">        cases = [</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.321</span>, <span class="number">0</span>, <span class="number">0.54</span>, <span class="number">0.337</span>, <span class="number">0.43</span>, <span class="number">0.64</span>, <span class="number">0</span>, <span class="number">0.618</span>, <span class="number">0.25</span>, <span class="number">0.36</span>, <span class="number">0.321</span>, <span class="number">0</span>, <span class="number">0.54</span>, <span class="number">0.337</span>, <span class="number">0.43</span>, <span class="number">0.64</span>, <span class="number">0</span>, <span class="number">0.618</span>,</span><br><span class="line">             <span class="number">0.25</span>, <span class="number">0.374</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.39</span>, <span class="number">0.43</span>, <span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.55</span>, <span class="number">0.61</span>, <span class="number">0.21</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.39</span>, <span class="number">0.43</span>, <span class="number">0</span>, <span class="number">0.43</span>, <span class="number">0.55</span>, <span class="number">0.61</span>, <span class="number">0.21</span>, <span class="number">1</span>,</span><br><span class="line">             <span class="number">0.21</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0.66</span>, <span class="number">0</span>, <span class="number">0.13</span>, <span class="number">0.54</span>, <span class="number">0.32</span>, <span class="number">0.33</span>, <span class="number">0.25</span>, <span class="number">0.34</span>, <span class="number">0.52</span>, <span class="number">1</span>, <span class="number">0.66</span>, <span class="number">0</span>, <span class="number">0.13</span>, <span class="number">0.54</span>, <span class="number">0.32</span>, <span class="number">0.33</span>, <span class="number">0.25</span>, <span class="number">0.34</span>,</span><br><span class="line">             <span class="number">0.86</span>],</span><br><span class="line">            [<span class="number">0.81</span>, <span class="number">0.31</span>, <span class="number">0.23</span>, <span class="number">0.12</span>, <span class="number">0.32</span>, <span class="number">0.15</span>, <span class="number">0.56</span>, <span class="number">0.12</span>, <span class="number">0.33</span>, <span class="number">0.33</span>, <span class="number">0.42</span>, <span class="number">0.31</span>, <span class="number">0.23</span>, <span class="number">0.12</span>, <span class="number">0.32</span>, <span class="number">0.15</span>, <span class="number">0.56</span>, <span class="number">0.12</span>,</span><br><span class="line">             <span class="number">0.33</span>, <span class="number">0.33</span>, <span class="number">0.321</span>],</span><br><span class="line">            [<span class="number">0.61</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.52</span>, <span class="number">0.55</span>, <span class="number">0.56</span>, <span class="number">0.25</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.76</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.52</span>, <span class="number">0.55</span>, <span class="number">0.56</span>, <span class="number">0.25</span>, <span class="number">1</span>,</span><br><span class="line">             <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.62</span>],</span><br><span class="line">            [<span class="number">0.37</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0.832</span>, <span class="number">0.643</span>, <span class="number">0.931</span>, <span class="number">0.821</span>, <span class="number">0.21</span>, <span class="number">0.235</span>, <span class="number">0.841</span>, <span class="number">0.213</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0.832</span>, <span class="number">0.643</span>, <span class="number">0.931</span>, <span class="number">0.821</span>, <span class="number">0.21</span>,</span><br><span class="line">             <span class="number">0.235</span>, <span class="number">0.841</span>, <span class="number">0.87</span>],</span><br><span class="line">            [<span class="number">0.42</span>, <span class="number">0.41</span>, <span class="number">0.32</span>, <span class="number">0.451</span>, <span class="number">0.324</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.543</span>, <span class="number">0.328</span>, <span class="number">0.642</span>, <span class="number">0.872</span>, <span class="number">0.41</span>, <span class="number">0.32</span>, <span class="number">0.451</span>, <span class="number">0.324</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.543</span>,</span><br><span class="line">             <span class="number">0.328</span>, <span class="number">0.642</span>, <span class="number">0.76</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.56</span>, <span class="number">0.43</span>, <span class="number">0.872</span>, <span class="number">0.432</span>, <span class="number">0.683</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0.52</span>, <span class="number">0.9</span>, <span class="number">0.42</span>, <span class="number">0.56</span>, <span class="number">0.43</span>, <span class="number">0.872</span>, <span class="number">0.432</span>, <span class="number">0.683</span>, <span class="number">0.5</span>, <span class="number">1</span>,</span><br><span class="line">             <span class="number">0.52</span>, <span class="number">0.9</span>, <span class="number">0.911</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0.54</span>, <span class="number">0.62</span>, <span class="number">1</span>, <span class="number">0.24</span>, <span class="number">0.317</span>, <span class="number">0.58</span>, <span class="number">0.82</span>, <span class="number">0.432</span>, <span class="number">0.12</span>, <span class="number">0.9</span>, <span class="number">0.54</span>, <span class="number">0.62</span>, <span class="number">1</span>, <span class="number">0.24</span>, <span class="number">0.317</span>, <span class="number">0.58</span>, <span class="number">0.82</span>,</span><br><span class="line">             <span class="number">0.432</span>, <span class="number">0.12</span>, <span class="number">0.62</span>],</span><br><span class="line">            [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>, <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.661</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>,</span><br><span class="line">             <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.668</span>]</span><br><span class="line">        ]</span><br><span class="line">        labels = [[<span class="number">0.257</span>], [<span class="number">0.473</span>], [<span class="number">0.261</span>], [<span class="number">0.561</span>], [<span class="number">0.201</span>], [<span class="number">0.681</span>], [<span class="number">0.697</span>], [<span class="number">0.733</span>], [<span class="number">0.375</span>], [<span class="number">0.583</span>]]</span><br><span class="line">        self.setup(<span class="number">21</span>, <span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">        begin = datetime.datetime.now()</span><br><span class="line">        save_net = self.train(cases, labels, <span class="number">1000000</span>, <span class="number">0.1</span>, <span class="number">0.1</span>)</span><br><span class="line">        end = datetime.datetime.now()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;spend:&#x27;</span>, (end - begin))</span><br><span class="line">        <span class="comment"># 保存网络</span></span><br><span class="line">        <span class="comment"># with open(&#x27;resource/bp_net.txt&#x27;, &#x27;wb&#x27;) as fw:</span></span><br><span class="line">        <span class="comment">#     pickle.dump(save_net, fw, 0)</span></span><br><span class="line">        <span class="keyword">for</span> case <span class="keyword">in</span> cases:</span><br><span class="line">            <span class="built_in">print</span>(self.predict(case))</span><br><span class="line">            <span class="comment"># print(self.predict(</span></span><br><span class="line">            <span class="comment">#     [1, 1, 1, 0.75, 0.833, 0.688, 0.858, 0.63, 0.859, 0, 0.322, 0.875,</span></span><br><span class="line">            <span class="comment"># 1, 0, 1, 1, 0.5, 0.834, 0.376, 0.233,1]))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    nn = BPNeuralNetwork()</span><br><span class="line">    <span class="comment"># nn.test()</span></span><br><span class="line">    <span class="comment"># 加载网络</span></span><br><span class="line">    trained_net = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;resource/bp_net.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fr:</span><br><span class="line">        trained_net = pickle.load(fr)</span><br><span class="line">    nn.input_node = trained_net[<span class="string">&#x27;input_node&#x27;</span>]</span><br><span class="line">    nn.hidden_node = trained_net[<span class="string">&#x27;hidden_node&#x27;</span>]</span><br><span class="line">    nn.output_node = trained_net[<span class="string">&#x27;output_node&#x27;</span>]</span><br><span class="line">    nn.input_cells = trained_net[<span class="string">&#x27;input_cells&#x27;</span>]</span><br><span class="line">    nn.hidden_cells = trained_net[<span class="string">&#x27;hidden_cells&#x27;</span>]</span><br><span class="line">    nn.output_cells = trained_net[<span class="string">&#x27;output_cells&#x27;</span>]</span><br><span class="line">    nn.input_weights = trained_net[<span class="string">&#x27;input_weights&#x27;</span>]</span><br><span class="line">    nn.output_weights = trained_net[<span class="string">&#x27;output_weights&#x27;</span>]</span><br><span class="line">    nn.input_correction = trained_net[<span class="string">&#x27;input_correction&#x27;</span>]</span><br><span class="line">    nn.output_correction = trained_net[<span class="string">&#x27;output_correction&#x27;</span>]</span><br><span class="line">    predict_value = nn.predict(</span><br><span class="line">        [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>, <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.661</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.231</span>, <span class="number">0.321</span>, <span class="number">0.43</span>, <span class="number">0.42</span>, <span class="number">0.21</span>,</span><br><span class="line">         <span class="number">0.56</span>, <span class="number">0.21</span>, <span class="number">0.668</span>])</span><br><span class="line">    <span class="built_in">print</span>(predict_value)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><p><a href="https://github.com/pplmx/MachineLearning.git">Github Source Code</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>classification</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之java环境</title>
    <url>/build-server-java.html</url>
    <content><![CDATA[<h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><p>如果命令显示无权限,请加sudo,或是进入root用户;</p>
<p>若是目录无权限访问,请给相关用户设置相应的访问权限-rwx</p>
<h2 id="查看是否存在jdk环境"><a href="#查看是否存在jdk环境" class="headerlink" title="查看是否存在jdk环境"></a>查看是否存在jdk环境</h2><p>(根据需求决定是否卸载已存在的环境)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum list installed |grep java</span><br><span class="line">yum -y remove java-1.8.0-openjdk*  <span class="comment"># 匹配所有以java-1.8.0-openjdk开头的文件,然后卸载</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y list java*  <span class="comment"># 查看jdk软件包列表</span></span><br><span class="line">yum install java-1.8.0-openjdk*  <span class="comment"># 安装所有java程序</span></span><br><span class="line"><span class="comment"># 如果不是所有程序都需要,也可仅执行如下命令</span></span><br><span class="line">yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel</span><br><span class="line">java -version  <span class="comment"># 查看jdk版本号</span></span><br></pre></td></tr></table></figure>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/profile <span class="comment"># 编辑该文件</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># set java environment  </span><br><span class="line">JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk-1.8.0.144-0.b01.el7_4.x86_64</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin  </span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar  </span><br><span class="line">export JAVA_HOME  CLASSPATH  PATH</span><br></pre></td></tr></table></figure>
<p>退出并保存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">. /etc/profile   <span class="comment"># 注意:那里是需要空格的</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span>  <span class="comment"># 查看</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CLASSPATH</span>  <span class="comment"># 查看</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之mysql安装</title>
    <url>/build-server-mysql.html</url>
    <content><![CDATA[<h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><h2 id="下载mysql的repo源"><a href="#下载mysql的repo源" class="headerlink" title="下载mysql的repo源"></a>下载mysql的repo源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="安装mysql的rpm包"><a href="#安装mysql的rpm包" class="headerlink" title="安装mysql的rpm包"></a>安装mysql的rpm包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="安装mysql-1"><a href="#安装mysql-1" class="headerlink" title="安装mysql"></a>安装mysql</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum install mysql-server</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="重置mysql密码"><a href="#重置mysql密码" class="headerlink" title="重置mysql密码"></a>重置mysql密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root</span><br></pre></td></tr></table></figure>
<p>登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘<br>原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo chown -R root:root /var/lib/mysql</span><br></pre></td></tr></table></figure>
<p>重启mysql服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service mysqld restart</span><br></pre></td></tr></table></figure>
<p>接下来是登录mysql(有两种情况)</p>
<h3 id="直接登录成功"><a href="#直接登录成功" class="headerlink" title="直接登录成功"></a>直接登录成功</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root  //直接回车进入mysql控制台</span><br><span class="line">mysql &gt; use mysql;</span><br><span class="line">mysql &gt; update user <span class="built_in">set</span> password=password(<span class="string">&#x27;123456&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">mysql &gt; <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure>
<h3 id="登录失败"><a href="#登录失败" class="headerlink" title="登录失败"></a>登录失败</h3><p>登录失败:是因为密码错误,不是默认的空密码,<br>而是在安装时,mysql默认分配了随机密码<br>如果你的安装信息是详细显示的,那么你是可以在之前的安装信息中,找到随机密码<br>找不到,那就继续如下操作:</p>
<p>1.修改MySQL的登录设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi /etc/my.cnf // 在[mysqld]的段中加上一句：skip-grant-tables</span></span><br></pre></td></tr></table></figure>
<p>2.重新启动mysql,并登录(mysql5.7,password字段不存在了,而是authentication_string)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># service mysqld restart</span></span><br><span class="line"><span class="comment"># mysql -uroot -p//回车</span></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;123456&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span> and Host = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; quit; </span><br></pre></td></tr></table></figure>
<p>3.还原/etc/my.cnf(将skip-grant-tables删除)</p>
<p>4.重启mysql,即可使用新密码登录了</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之tomcat安装</title>
    <url>/build-server-tomcat.html</url>
    <content><![CDATA[<h1 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h1><h2 id="安装tomcat-1"><a href="#安装tomcat-1" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install tomcat</span><br></pre></td></tr></table></figure>
<h2 id="安装管理包"><a href="#安装管理包" class="headerlink" title="安装管理包"></a>安装管理包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install tomcat-webapps tomcat-admin-webapps</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="安装在线文档"><a href="#安装在线文档" class="headerlink" title="安装在线文档"></a>安装在线文档</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install tomcat-docs-webapp tomcat-javadoc</span><br></pre></td></tr></table></figure>
<h2 id="配置tomcat管理页面"><a href="#配置tomcat管理页面" class="headerlink" title="配置tomcat管理页面"></a>配置tomcat管理页面</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /usr/share/tomcat/conf/tomcat-users.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;tomcat-users&gt;</span><br><span class="line">    &lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;manager-gui,admin-gui&quot;/&gt;</span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure>
<h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service tomcat restart</span><br></pre></td></tr></table></figure>
<h2 id="访问试试"><a href="#访问试试" class="headerlink" title="访问试试"></a>访问试试</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://yourIP:8080</span><br><span class="line">http://yourIP:8080/manager/html</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器初建之zsh安装</title>
    <url>/build-server-zsh.html</url>
    <content><![CDATA[<h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><pre><code>root下操作
</code></pre>
<h2 id="安装zsh-1"><a href="#安装zsh-1" class="headerlink" title="安装zsh"></a>安装zsh</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install zsh</span><br></pre></td></tr></table></figure>
<h2 id="切换bash至zsh"><a href="#切换bash至zsh" class="headerlink" title="切换bash至zsh"></a>切换bash至zsh</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chsh -s $(<span class="built_in">which</span> zsh) $(whoami)</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="install-oh-my-zsh"><a href="#install-oh-my-zsh" class="headerlink" title="install oh-my-zsh"></a>install oh-my-zsh</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh -c &quot;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&quot;</span><br><span class="line"></span><br><span class="line">sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> add proxy</span></span><br><span class="line">sh -c &quot;$(curl -fsSLx http://www-proxy.example.com:8080 https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure>

<h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line">plugins=(git z zsh-autosuggestions zsh-syntax-highlighting)</span><br><span class="line">ZSH_THEME=<span class="string">&quot;powerlevel10k/powerlevel10k&quot;</span></span><br><span class="line">POWERLEVEL10K_MODE=<span class="string">&quot;nerdfont-complete&quot;</span></span><br><span class="line"><span class="comment"># you can run the command &#x27;p10k configure&#x27; to reconfigure your powerlevel10k</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions \</span><br><span class="line">	<span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-syntax-highlighting \</span><br><span class="line">	<span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/romkatv/powerlevel10k \</span><br><span class="line">	<span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= install powerline fonts =========</span></span><br><span class="line"><span class="comment"># clone</span></span><br><span class="line"><span class="comment"># git clone https://github.com/ryanoasis/nerd-fonts --depth=1</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"><span class="comment"># install</span></span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br><span class="line"><span class="comment"># clean-up a bit</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">rm -rf fonts</span><br><span class="line"><span class="comment"># If needed, you can make it work all users</span></span><br><span class="line">install -d /usr/share/fonts; cp /root/.<span class="built_in">local</span>/share/fonts/* /usr/share/fonts</span><br></pre></td></tr></table></figure>

<h2 id="BTW"><a href="#BTW" class="headerlink" title="BTW"></a>BTW</h2><p><strong>Tips</strong>:</p>
<p><a href="https://github.com/sharkdp/fd">fd</a> <a href="https://github.com/sharkdp/bat">bat</a> and <a href="https://github.com/Peltoche/lsd">lsd</a> are very nice.<br>Maybe you can install them. For more information, you can access their home page.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install fd, bat and lsd on RHEL/CentOS</span></span><br><span class="line"><span class="comment"># Author=&quot;sharkdp&quot;; Repo=&quot;fd&quot;;</span></span><br><span class="line"><span class="comment"># Author=&quot;sharkdp&quot;; Repo=&quot;bat&quot;;</span></span><br><span class="line">Author=<span class="string">&quot;Peltoche&quot;</span>; Repo=<span class="string">&quot;lsd&quot;</span>; latest_url=<span class="string">&quot;https://api.github.com/repos/<span class="variable">$Author</span>/<span class="variable">$Repo</span>/releases/latest&quot;</span>; \</span><br><span class="line">    V=$(curl --silent <span class="variable">$latest_url</span> | grep -Eo <span class="string">&#x27;&quot;tag_name&quot;: &quot;v?(.*)&quot;&#x27;</span> | sed -E <span class="string">&#x27;s/.*&quot;([^&quot;]+)&quot;.*/\1/&#x27;</span>); \</span><br><span class="line">    Latest_tar=<span class="string">&quot;<span class="variable">$Repo</span>-<span class="variable">$V</span>-x86_64-unknown-linux-musl.tar.gz&quot;</span> \</span><br><span class="line">    &amp;&amp; curl -sOL <span class="string">&quot;https://github.com/<span class="variable">$Author</span>/<span class="variable">$Repo</span>/releases/download/<span class="variable">$V</span>/<span class="variable">$Latest_tar</span>&quot;</span> \</span><br><span class="line">    &amp;&amp; tar xzvf <span class="variable">$Latest_tar</span> -C . \</span><br><span class="line">    &amp;&amp; sudo sh -c <span class="string">&quot;cp ./<span class="variable">$Repo</span>-<span class="variable">$V</span>-x86_64-unknown-linux-musl/<span class="variable">$Repo</span> /usr/local/bin/<span class="variable">$Repo</span>&quot;</span> \</span><br><span class="line">    &amp;&amp; rm <span class="variable">$Latest_tar</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s understand class and static method in Python for a Java-er</title>
    <url>/classmethod-staticmethod.html</url>
    <content><![CDATA[<h1 id="classmethod-amp-staticmethod"><a href="#classmethod-amp-staticmethod" class="headerlink" title="@classmethod &amp; @staticmethod"></a>@classmethod &amp; @staticmethod</h1><p>If you had the base knowledge in Java, maybe you would have been confused with it.</p>
<ul>
<li>  What is the class method?</li>
<li>  What is the static method?</li>
<li>  Are they the same as each other?</li>
</ul>
<p>In Java, the class method does is the static method. They refer to the same thing.</p>
<p>Personally, </p>
<ul>
<li>  @classmethod is the concept of static method(class method) in Java</li>
<li>  @staticmethod, Without the corresponding concept in Java, it merely belongs to Python.</li>
</ul>
<hr>
<p>In Python, they are almost identical. Most of the use of @staticmethod can be replaced with @classmethod.</p>
<table>
<thead>
<tr>
<th>@classmethod</th>
<th>@staticmethod</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;class ‘method’&gt; &lt; bound method &gt;</td>
<td>&lt;class ‘function’&gt; &lt; function &gt;</td>
</tr>
<tr>
<td>can be extended, can be overridden</td>
<td>can be extended, can be overridden</td>
</tr>
<tr>
<td></td>
<td>can be changed with @classmethod when overridden</td>
</tr>
</tbody></table>
<h1 id="FYI"><a href="#FYI" class="headerlink" title="FYI"></a>FYI</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> abstractmethod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fibonacci</span>(<span class="params">idx</span>):</span></span><br><span class="line">    a, b = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> a &lt;= idx + <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line">        a, b = b, a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">where_is</span>(<span class="params">cls</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Where is the animal?&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_alive</span>():</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>(<span class="params">Animal</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, gender=<span class="string">&#x27;male&#x27;</span></span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Dog, <span class="subst">&#123;self.__name&#125;</span> runs fast.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># @classmethod</span></span><br><span class="line">    <span class="comment"># def where_is(cls):</span></span><br><span class="line">    <span class="comment">#     print(&quot;The dog is under the tree.&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, gender=<span class="string">&#x27;female&#x27;</span></span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Cat, <span class="subst">&#123;self.__name&#125;</span> runs fast.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># @classmethod</span></span><br><span class="line">    <span class="comment"># def where_is(cls):</span></span><br><span class="line">    <span class="comment">#     print(&quot;The cat is on the tree.&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span>(<span class="params">Animal</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, gender=<span class="string">&#x27;female&#x27;</span></span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Bird, <span class="subst">&#123;self.__name&#125;</span> flies fast.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">where_is</span>(<span class="params">cls</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;The bird is in the sky.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_alive</span>():</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Horse</span>(<span class="params">Animal</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, gender=<span class="string">&#x27;female&#x27;</span></span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Horse, <span class="subst">&#123;self.__name&#125;</span> runs fast.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">where_is</span>(<span class="params">cls</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;The horse is on the grassland.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_alive</span>(<span class="params">cls</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    spotty = Dog(<span class="string">&quot;Spotty&quot;</span>)</span><br><span class="line">    mimi = Cat(<span class="string">&quot;Mimi&quot;</span>)</span><br><span class="line">    bee = Bird(<span class="string">&quot;Bee&quot;</span>)</span><br><span class="line">    hoo = Horse(<span class="string">&quot;Hoo&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(spotty.run), spotty.run)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(mimi.run), mimi.run)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(bee.run), bee.run)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(hoo.run), hoo.run)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(spotty.is_alive), spotty.is_alive)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(mimi.is_alive), mimi.is_alive)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(bee.is_alive), bee.is_alive)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(hoo.is_alive), hoo.is_alive)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(spotty.where_is), spotty.where_is)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(mimi.where_is), mimi.where_is)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(bee.where_is), bee.where_is)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(hoo.where_is), hoo.where_is)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(Dog.where_is), Dog.where_is)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(Cat.where_is), Cat.where_is)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(Bird.where_is), Bird.where_is)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(Horse.where_is), Horse.where_is)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(fibonacci), fibonacci)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Dog.run of &lt;__main__.Dog object at 0x000001C8A0D99040&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Cat.run of &lt;__main__.Cat object at 0x000001C8A0D990D0&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Bird.run of &lt;__main__.Bird object at 0x000001C8A0D99130&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Horse.run of &lt;__main__.Horse object at 0x000001C8A0D99190&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;class &#x27;function&#x27;&gt; &lt;function Animal.is_alive at 0x000001C8A0D8FCA0&gt;</span><br><span class="line">&lt;class &#x27;function&#x27;&gt; &lt;function Animal.is_alive at 0x000001C8A0D8FCA0&gt;</span><br><span class="line">&lt;class &#x27;function&#x27;&gt; &lt;function Bird.is_alive at 0x000001C8A0DA2160&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Horse.is_alive of &lt;class &#x27;__main__.Horse&#x27;&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Animal.where_is of &lt;class &#x27;__main__.Dog&#x27;&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Animal.where_is of &lt;class &#x27;__main__.Cat&#x27;&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Bird.where_is of &lt;class &#x27;__main__.Bird&#x27;&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Horse.where_is of &lt;class &#x27;__main__.Horse&#x27;&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Animal.where_is of &lt;class &#x27;__main__.Dog&#x27;&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Animal.where_is of &lt;class &#x27;__main__.Cat&#x27;&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Bird.where_is of &lt;class &#x27;__main__.Bird&#x27;&gt;&gt;</span><br><span class="line">&lt;class &#x27;method&#x27;&gt; &lt;bound method Horse.where_is of &lt;class &#x27;__main__.Horse&#x27;&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;class &#x27;function&#x27;&gt; &lt;function fibonacci at 0x000001C8A0D8FA60&gt;</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Compile-time and Runtime Constants</title>
    <url>/compile-runtime-constants.html</url>
    <content><![CDATA[<h1 id="Please-learn-from-the-following-code-first"><a href="#Please-learn-from-the-following-code-first" class="headerlink" title="Please learn from the following code first"></a>Please learn from the following code first</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.mess;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompileAndRuntimeConstant</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// No load static block</span></span><br><span class="line">        System.out.println(Test.NAME);</span><br><span class="line">        <span class="comment">// No load static block</span></span><br><span class="line">        System.out.println(Test.SCORE);</span><br><span class="line">        <span class="comment">// No load static block</span></span><br><span class="line">        System.out.println(Test.PI);</span><br><span class="line">        <span class="comment">// load static block</span></span><br><span class="line">        System.out.println(Test.CC);</span><br><span class="line">        <span class="comment">// load static block(cc and age only load once totally)</span></span><br><span class="line">        System.out.println(Test.age);</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The following three: compile-time constants</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = <span class="string">&quot;shanxi&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SCORE = <span class="number">85</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.1415</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The following two: runtime-constants</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer CC = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> age = <span class="number">23</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Test static block: &quot;</span> + PI);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The following one: compile-time constant</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> gg = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> hh = gg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hh;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHh</span><span class="params">(<span class="keyword">int</span> hh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hh = hh;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Its outputs is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shanxi</span><br><span class="line">85</span><br><span class="line">3.1415</span><br><span class="line">Test static block: 3.1415</span><br><span class="line">2</span><br><span class="line">23</span><br></pre></td></tr></table></figure>
<h1 id="compile-time-constant"><a href="#compile-time-constant" class="headerlink" title="compile-time constant"></a>compile-time constant</h1><p>Compile-time Constant: A variable use <code>final</code> modifier, its type is <code>primitive type</code> or <code>String</code>, and its value is a <code>constant expression</code>.</p>
<h2 id="What-is-constant-expression"><a href="#What-is-constant-expression" class="headerlink" title="What is constant expression?"></a>What is constant expression?</h2><p><a href="https://docs.oracle.com/javase/specs/jls/se14/html/jls-15.html#jls-15.29">Constant Expressions in Oracle</a></p>
<p>e.g. Constant expressions:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">true</span><br><span class="line">(short)(1*2*3*4*5*6)</span><br><span class="line">Integer.MAX_VALUE / 2</span><br><span class="line">2.0 * Math.PI</span><br><span class="line">&quot;The integer &quot; + Long.MAX_VALUE + &quot; is mighty big.&quot;</span><br></pre></td></tr></table></figure>

<p>A constant expression is an expression denoting a value of primitive type or a String that does not complete abruptly and is composed using only the following:</p>
<ul>
<li><p>Literals of primitive type and literals of type String </p>
</li>
<li><p>Casts to primitive types and casts to type String</p>
</li>
<li><p>The unary operators +, -, ~, and ! (but not <code>++</code> or <code>--</code>) </p>
</li>
<li><p>The multiplicative operators *, /, and % </p>
</li>
<li><p>The additive operators + and - </p>
</li>
<li><p>The shift operators &lt;&lt;, &gt;&gt;, and &gt;&gt;&gt; </p>
</li>
<li><p>The relational operators &lt;, &lt;=, &gt;, and &gt;= (but not <code>instanceof</code>) </p>
</li>
<li><p>The equality operators == and != </p>
</li>
<li><p>The bitwise and logical operators &amp;, ^, and | </p>
</li>
<li><p>The conditional-and operator &amp;&amp; and the conditional-or operator || </p>
</li>
<li><p>The ternary conditional operator ? : </p>
</li>
<li><p>Parenthesized expressions whose contained expression is a constant expression.</p>
</li>
<li><p>Simple names that refer to constant variables.</p>
</li>
<li><p>Qualified names of the form TypeName . Identifier that refer to constant variables.</p>
</li>
</ul>
<p>Constant expressions of type String are always “interned” so as to share unique instances, using the method String.intern.</p>
<p>A constant expression is always treated as FP-strict, even if it occurs in a context where a non-constant expression would not be considered to be FP-strict.</p>
<p>All in all, except for <code>instanceof</code>, <code>++</code>, <code>--</code></p>
<h1 id="runtime-constant"><a href="#runtime-constant" class="headerlink" title="runtime constant"></a>runtime constant</h1><p>Runtime constant: A variable use <code>static</code> modifier, except for compile-time constant.</p>
<h1 id="Class-file"><a href="#Class-file" class="headerlink" title="Class file"></a>Class file</h1><p>Compile-time constants’ reference will be replaced with the actual value, like as follows.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.mess;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = <span class="string">&quot;shanxi&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SCORE = <span class="number">85</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.1415D</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer CC = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> age = <span class="number">23</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> gg = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> hh = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    Test() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.hh;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHh</span><span class="params">(<span class="keyword">int</span> hh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hh = hh;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Test static block: 3.1415&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.mess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompileAndRuntimeConstant</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CompileAndRuntimeConstant</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;shanxi&quot;</span>);</span><br><span class="line">        System.out.println(<span class="number">85</span>);</span><br><span class="line">        System.out.println(<span class="number">3.1415D</span>);</span><br><span class="line">        System.out.println(Test.CC);</span><br><span class="line">        System.out.println(Test.age);</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>compile</tag>
        <tag>runtime</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Copy a List in Python</title>
    <url>/copy-list-python.html</url>
    <content><![CDATA[<h1 id="How-to-Copy-a-List-in-Python"><a href="#How-to-Copy-a-List-in-Python" class="headerlink" title="How to Copy a List in Python"></a>How to Copy a List in Python</h1><h2 id="set-a-to-b"><a href="#set-a-to-b" class="headerlink" title="set a to b"></a>set a to b</h2><p>if assgin <code>a</code> to <code>b</code> directly, <code>a</code> and <code>b</code> share one reference.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>

<h2 id="by-list"><a href="#by-list" class="headerlink" title="by list()"></a>by <code>list()</code></h2><p><code>list()</code> and <code>[:]</code> are the same. Except for the first layer changes, all other layers changes will be transferred.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>

<h2 id="by"><a href="#by" class="headerlink" title="by [:]"></a>by <code>[:]</code></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>

<h2 id="list-and-change-the-other-layers-except-for-the-1st-layer"><a href="#list-and-change-the-other-layers-except-for-the-1st-layer" class="headerlink" title="list() and [:] change the other layers, except for the 1st layer"></a>list() and [:] change the other layers, except for the 1st layer</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># =========== [:] ===========</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>][<span class="number">0</span>] = <span class="number">999</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># =========== list() ===========</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>][<span class="number">0</span>] = <span class="number">999</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>

<h2 id="by-copy"><a href="#by-copy" class="headerlink" title="by copy()"></a>by copy()</h2><p>You will find that <code>copy</code> function is the same as <code>list()</code> and <code>[:]</code>. They are all <code>shallow copy</code>.</p>
<p>For much more information about <code>shallow copy</code> and <code>deep copy</code>, maybe you can reference <a href="https://docs.python.org/3/library/copy.html">here</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.copy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>

<h2 id="by-deepcopy"><a href="#by-deepcopy" class="headerlink" title="by deepcopy()"></a>by <code>deepcopy()</code></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> copy</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.deepcopy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.deepcopy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>delete, truncate and drop</title>
    <url>/db-del-trunc-drop.html</url>
    <content><![CDATA[<h1 id="delete-truncate-drop"><a href="#delete-truncate-drop" class="headerlink" title="delete truncate drop"></a>delete truncate drop</h1><h2 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h2><ol>
<li><p>delete是 <code>DML</code> ，执行delete操作时，每次从表中删除一行，并且同时将该行的的删除操作记录在redo和undo表空间中以便进行回滚（rollback）和重做操作，但要注意表空间要足够大，需要手动提交（commit）操作才能生效，可以通过rollback撤消操作。</p>
</li>
<li><p>delete可根据条件删除表中满足条件的数据，如果不指定where子句，那么删除表中所有记录。</p>
</li>
<li><p>delete语句不影响表所占用的extent，高水线(high watermark)保持原位置不变。</p>
</li>
</ol>
<h2 id="truncate"><a href="#truncate" class="headerlink" title="truncate"></a>truncate</h2><ol>
<li><p>truncate是 <code>DDL</code> ，会隐式提交，所以，不能回滚，不会触发触发器。</p>
</li>
<li><p>truncate会删除表中所有记录，并且将重新设置高水线和所有的索引，缺省情况下将空间释放到minextents个extent，除非使用reuse storage，。不会记录日志，所以执行速度很快，但不能通过rollback撤消操作（如果一不小心把一个表truncate掉，也是可以恢复的，只是不能通过rollback来恢复）。</p>
</li>
<li><p>对于外键（foreignkey ）约束引用的表，不能使用 truncate table，而应使用不带 where 子句的 delete 语句。</p>
</li>
<li><p>truncate table不能用于参与了索引视图的表。</p>
</li>
</ol>
<h2 id="drop"><a href="#drop" class="headerlink" title="drop"></a>drop</h2><ol>
<li><p>drop是 <code>DDL</code> ，会隐式提交，所以，不能回滚，不会触发触发器。</p>
</li>
<li><p>drop语句删除表结构及所有数据，并将表所占用的空间全部释放。</p>
</li>
<li><p>drop语句将删除表的结构所依赖的约束，触发器，索引，依赖于该表的存储过程/函数将保留,但是变为invalid状态。</p>
</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li><p>在速度上，一般来说，drop&gt; truncate &gt; delete。</p>
</li>
<li><p>在使用drop和truncate时一定要注意，虽然可以恢复，但为了减少麻烦，还是要慎重。</p>
</li>
<li><p>如果想删除部分数据用delete，注意带上where子句，回滚段要足够大；</p>
</li>
</ol>
<ul>
<li><p>如果想删除表，当然用drop；  </p>
</li>
<li><p>如果想保留表而将所有数据删除，如果和事务无关，用truncate即可；</p>
</li>
<li><p>如果和事务有关，或者想触发trigger，还是用delete；</p>
</li>
<li><p>如果是整理表内部的碎片，可以用truncate跟上reuse stroage，再重新导入/插入数据。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>database</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>决策树算法(python实现)</title>
    <url>/decision-tree.html</url>
    <content><![CDATA[<h1 id="Decision-Tree"><a href="#Decision-Tree" class="headerlink" title="Decision Tree"></a>Decision Tree</h1><pre><code>decision tree
核心思想:
    一种树结构（可以是二叉树或非二叉树）
    其每个非叶节点表示一个特征属性上的测试，
    每个分支代表这个特征属性在某个值域上的输出，
    而每个叶节点存放一个类别
优点:
    计算复杂度不高,输出结果易于理解,对中间值缺失不敏感,可以处理不相关特征数据
缺点：
    可能会产生过度匹配问题
适用数据范围：
    数值型和标称型
</code></pre>
<span id="more"></span>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/16 15:59</span></span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> log</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tree_plotter <span class="keyword">import</span> create_plot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data_set</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        数据集:</span></span><br><span class="line"><span class="string">            1.必须是一种由列元素组成的列表,而且所有列表元素均具有相同的数据长度</span></span><br><span class="line"><span class="string">            2.数据的最后一列或者每一个实例的最后一个元素是当前实例的类别标签</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    data_set = [</span><br><span class="line">        [<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;yes&#x27;</span>],</span><br><span class="line">        [<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;yes&#x27;</span>],</span><br><span class="line">        [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;no&#x27;</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;no&#x27;</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;no&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    labels = [<span class="string">&#x27;no surfacing&#x27;</span>, <span class="string">&#x27;flippers&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> data_set, labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_shannon_entropy</span>(<span class="params">data_set</span>):</span></span><br><span class="line">    num_entries = <span class="built_in">len</span>(data_set)</span><br><span class="line">    label_counts = &#123;&#125;</span><br><span class="line">    <span class="comment"># 对各类别出现的次数,进行统计</span></span><br><span class="line">    <span class="keyword">for</span> feat_vector <span class="keyword">in</span> data_set:</span><br><span class="line">        current_label = feat_vector[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> current_label <span class="keyword">not</span> <span class="keyword">in</span> label_counts.keys():</span><br><span class="line">            label_counts[current_label] = <span class="number">0</span></span><br><span class="line">        label_counts[current_label] += <span class="number">1</span></span><br><span class="line">    shannon_entropy = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> label_counts:</span><br><span class="line">        <span class="comment"># 计算该分类的概率</span></span><br><span class="line">        probability = label_counts[key] / num_entries</span><br><span class="line">        <span class="comment"># 通过循环,将各分类的信息期望值相加</span></span><br><span class="line">        shannon_entropy -= probability * log(probability, <span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 返回香农熵</span></span><br><span class="line">    <span class="keyword">return</span> shannon_entropy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_shannon_entropy2</span>(<span class="params">data_set</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        通过列表推导式,及Counter,实现香农熵的计算</span></span><br><span class="line"><span class="string">    :param data_set:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 取出&#x27;yes&#x27;,&#x27;yes&#x27;,&#x27;no&#x27;等数据放到数组中</span></span><br><span class="line">    class_count = [sample[-<span class="number">1</span>] <span class="keyword">for</span> sample <span class="keyword">in</span> data_set]</span><br><span class="line">    <span class="comment"># 获取数据集长度</span></span><br><span class="line">    length = <span class="built_in">len</span>(data_set)</span><br><span class="line">    <span class="comment"># 对&#x27;yes&#x27;,&#x27;no&#x27;等各类别出现的次数,进行统计</span></span><br><span class="line">    class_count = Counter(class_count)</span><br><span class="line">    shannon_entropy = <span class="number">0.</span></span><br><span class="line">    <span class="comment"># 计算香农熵</span></span><br><span class="line">    <span class="keyword">for</span> times <span class="keyword">in</span> class_count.values():</span><br><span class="line">        shannon_entropy -= times / length * log(times / length, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> shannon_entropy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split_data_set</span>(<span class="params">data_set, axis, value</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        划分数据集</span></span><br><span class="line"><span class="string">    :param data_set: 待划分的数据集</span></span><br><span class="line"><span class="string">    :param axis: 划分数据集的特征</span></span><br><span class="line"><span class="string">    :param value: 需要返回的特征的值</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        append和extend的区别</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a = [1,2,3]</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; b = [4,5,6]</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a.append(b)</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a</span></span><br><span class="line"><span class="string">        [1, 2, 3, [4, 5, 6]]</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a.extend(b)</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; a</span></span><br><span class="line"><span class="string">        [1, 2, 3, [4, 5, 6], 4, 5, 6]</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    divided_data_set = []</span><br><span class="line">    <span class="keyword">for</span> feature_vector <span class="keyword">in</span> data_set:</span><br><span class="line">        <span class="comment"># if true,就将该值remove,同时添加进divided_data_set</span></span><br><span class="line">        <span class="keyword">if</span> feature_vector[axis] == value:</span><br><span class="line">            reduced_feature_vector = feature_vector[:axis]</span><br><span class="line">            reduced_feature_vector.extend(feature_vector[axis + <span class="number">1</span>:])</span><br><span class="line">            divided_data_set.append(reduced_feature_vector)</span><br><span class="line">    <span class="keyword">return</span> divided_data_set</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">choose_best_feature2split</span>(<span class="params">data_set</span>):</span></span><br><span class="line">    <span class="comment"># 获取特征值的数量</span></span><br><span class="line">    num_features = <span class="built_in">len</span>(data_set[<span class="number">0</span>]) - <span class="number">1</span></span><br><span class="line">    <span class="comment"># 计算原始香农熵</span></span><br><span class="line">    base_entropy = calc_shannon_entropy2(data_set)</span><br><span class="line">    <span class="comment"># 最佳信息增益</span></span><br><span class="line">    best_info_gain = <span class="number">0.</span></span><br><span class="line">    <span class="comment"># 最佳特征值的位置索引</span></span><br><span class="line">    best_feature = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_features):</span><br><span class="line">        <span class="comment"># 创建唯一的分类标签列表</span></span><br><span class="line">        feature_list = [example[i] <span class="keyword">for</span> example <span class="keyword">in</span> data_set]</span><br><span class="line">        unique_vals = <span class="built_in">set</span>(feature_list)</span><br><span class="line">        <span class="comment"># 计算每种划分方式的信息熵</span></span><br><span class="line">        new_entropy = <span class="number">0.</span></span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> unique_vals:</span><br><span class="line">            sub_data_set = split_data_set(data_set, i, value)</span><br><span class="line">            probability = <span class="built_in">len</span>(sub_data_set) / <span class="built_in">len</span>(data_set)</span><br><span class="line">            new_entropy += probability * calc_shannon_entropy2(sub_data_set)</span><br><span class="line">        <span class="comment"># 计算最好的信息增益</span></span><br><span class="line">        <span class="comment"># print(&#x27;原始信息熵为%f&#x27; % base_entropy)</span></span><br><span class="line">        <span class="comment"># print(&#x27;新的信息熵为%f&#x27; % new_entropy)</span></span><br><span class="line">        info_gain = base_entropy - new_entropy</span><br><span class="line">        <span class="comment"># print(&#x27;按照第%d个特征属性划分,信息增益为%f&#x27; % (i, info_gain))</span></span><br><span class="line">        <span class="keyword">if</span> info_gain &gt; best_info_gain:</span><br><span class="line">            best_info_gain = info_gain</span><br><span class="line">            best_feature = i</span><br><span class="line">    <span class="comment"># print(&#x27;故最佳特征属性的索引为%d&#x27; % best_feature)</span></span><br><span class="line">    <span class="keyword">return</span> best_feature</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">majority_counter</span>(<span class="params">class_list</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        如果数据集已经处理了所有属性,但是类标签依然不是唯一的,我们需要决定如何定义该叶子节点</span></span><br><span class="line"><span class="string">        此时,我们采用多数表决的方式,决定该叶子节点的分类</span></span><br><span class="line"><span class="string">    :param class_list:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    class_count = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> vote <span class="keyword">in</span> class_list:</span><br><span class="line">        <span class="keyword">if</span> vote <span class="keyword">not</span> <span class="keyword">in</span> class_count.keys():</span><br><span class="line">            class_count[vote] = <span class="number">0</span></span><br><span class="line">        class_count[vote] += <span class="number">1</span></span><br><span class="line">    sorted_class_count = <span class="built_in">sorted</span>(class_count.items(), key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> sorted_class_count[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify</span>(<span class="params">input_tree, feature_labels, test_vector</span>):</span></span><br><span class="line">    first_str = <span class="built_in">list</span>(input_tree.keys())[<span class="number">0</span>]</span><br><span class="line">    second_dict = input_tree[first_str]</span><br><span class="line">    <span class="comment"># 将标签字符串转换为索引</span></span><br><span class="line">    feature_index = feature_labels.index(first_str)</span><br><span class="line">    class_label = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> second_dict.keys():</span><br><span class="line">        <span class="keyword">if</span> test_vector[feature_index] == key:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(second_dict[key]).__name__ == <span class="string">&#x27;dict&#x27;</span>:</span><br><span class="line">                class_label = classify(second_dict[key], feature_labels, test_vector)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                class_label = second_dict[key]</span><br><span class="line">    <span class="keyword">return</span> class_label</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">store_tree</span>(<span class="params">input_tree, filename</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fw:</span><br><span class="line">        <span class="comment"># 0：ASCII协议，所序列化的对象使用可打印的ASCII码表示</span></span><br><span class="line">        <span class="comment"># 1：老式的二进制协议</span></span><br><span class="line">        <span class="comment"># 2：2.3版本引入的新二进制协议，较以前的更高效</span></span><br><span class="line">        <span class="comment"># 其中协议0和1兼容老版本的python</span></span><br><span class="line">        pickle.dump(input_tree, fw, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grab_tree</span>(<span class="params">filename</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> read:</span><br><span class="line">        <span class="keyword">return</span> pickle.load(read)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_tree</span>(<span class="params">data_set, labels</span>):</span></span><br><span class="line">    <span class="comment"># 获取类别列表</span></span><br><span class="line">    class_list = [example[-<span class="number">1</span>] <span class="keyword">for</span> example <span class="keyword">in</span> data_set]</span><br><span class="line">    <span class="comment"># 类别完全相同,则停止继续划分</span></span><br><span class="line">    <span class="keyword">if</span> class_list.count(class_list[<span class="number">0</span>]) == <span class="built_in">len</span>(class_list):</span><br><span class="line">        <span class="comment"># 若只有一类,则某个类别标签的数量,应该和它的数据长度相等</span></span><br><span class="line">        <span class="keyword">return</span> class_list[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 遍历完所有特征时,类别标签还是不唯一,则返回出现次数最多的类别</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(data_set[<span class="number">0</span>]) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> majority_counter(class_list)</span><br><span class="line">    <span class="comment"># 最佳特征属性的索引</span></span><br><span class="line">    best_feature = choose_best_feature2split(data_set)</span><br><span class="line">    <span class="comment"># 最佳特征标记</span></span><br><span class="line">    best_feature_label = labels[best_feature]</span><br><span class="line">    <span class="comment"># 创建字典,存储决策树</span></span><br><span class="line">    my_tree = &#123;best_feature_label: &#123;&#125;&#125;</span><br><span class="line">    <span class="keyword">del</span> (labels[best_feature])</span><br><span class="line">    <span class="comment"># 获取该特征的所有的值</span></span><br><span class="line">    feature_values = [example[best_feature] <span class="keyword">for</span> example <span class="keyword">in</span> data_set]</span><br><span class="line">    unique_values = <span class="built_in">set</span>(feature_values)</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> unique_values:</span><br><span class="line">        sub_labels = labels[:]</span><br><span class="line">        <span class="comment"># 递归不断创建分支</span></span><br><span class="line">        my_tree[best_feature_label][value] = create_tree(split_data_set(data_set, best_feature, value), sub_labels)</span><br><span class="line">    <span class="keyword">return</span> my_tree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># my_data_set, my_labels = create_data_set()</span></span><br><span class="line">    <span class="comment"># print(my_data_set)</span></span><br><span class="line">    <span class="comment"># print(my_labels)</span></span><br><span class="line">    <span class="comment"># my_shannon_entropy = calc_shannon_entropy(my_data_set)</span></span><br><span class="line">    <span class="comment"># print(my_shannon_entropy)</span></span><br><span class="line">    <span class="comment"># print(calc_shannon_entropy2(my_data_set))</span></span><br><span class="line">    <span class="comment"># decision_tree = create_tree(my_data_set, my_labels)</span></span><br><span class="line">    <span class="comment"># store_tree(decision_tree, &#x27;resource/classifier_storage.txt&#x27;)</span></span><br><span class="line">    <span class="comment"># print(decision_tree)</span></span><br><span class="line">    <span class="comment"># new_tree = grab_tree(&#x27;resource/classifier_storage.txt&#x27;)</span></span><br><span class="line">    <span class="comment"># print(&#x27;acquire tree from file:&#x27;, new_tree)</span></span><br><span class="line">    <span class="comment"># # 因为my_labels已经在create_tree方法中被改变,故我们生成个新的</span></span><br><span class="line">    <span class="comment"># my_data_set, my_labels = create_data_set()</span></span><br><span class="line">    <span class="comment"># print(classify(decision_tree, my_labels, [1, 1]))</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;resource/lenses.txt&#x27;</span>) <span class="keyword">as</span> fr:</span><br><span class="line">        lenses = [instance.strip().split(<span class="string">&#x27;\t&#x27;</span>) <span class="keyword">for</span> instance <span class="keyword">in</span> fr.readlines()]</span><br><span class="line">        lenses_labels = [<span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;prescript&#x27;</span>, <span class="string">&#x27;astigmatic&#x27;</span>, <span class="string">&#x27;tearRate&#x27;</span>]</span><br><span class="line">        lenses_tree = create_tree(lenses, lenses_labels)</span><br><span class="line">        <span class="built_in">print</span>(lenses)</span><br><span class="line">        <span class="built_in">print</span>(lenses_labels)</span><br><span class="line">        <span class="built_in">print</span>(lenses_tree)</span><br><span class="line">        create_plot(lenses_tree)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><p><a href="https://github.com/pplmx/MachineLearning.git">Github Source Code</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>classification</tag>
      </tags>
  </entry>
  <entry>
    <title>Deepcopy by Serializable in Java</title>
    <url>/deep-copy-in-java.html</url>
    <content><![CDATA[<h1 id="Deep-Copy-in-Java"><a href="#Deep-Copy-in-Java" class="headerlink" title="Deep Copy in Java"></a>Deep Copy in Java</h1><h2 id="By-Serializable"><a href="#By-Serializable" class="headerlink" title="By Serializable"></a>By Serializable</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.mess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InvalidClassException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectStreamClass;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeepCopyUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Serializable&gt; <span class="function">T <span class="title">clone</span><span class="params">(T obj)</span> </span>&#123;</span><br><span class="line">        T cloneObj = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// write byte stream</span></span><br><span class="line">            <span class="keyword">try</span> (ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream()) &#123;</span><br><span class="line">                <span class="keyword">try</span> (ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(baos)) &#123;</span><br><span class="line">                    oos.writeObject(obj);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// assign memory, write raw object, generate new object</span></span><br><span class="line">                <span class="keyword">try</span> (ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(baos.toByteArray())) &#123;</span><br><span class="line">                    <span class="keyword">try</span> (ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(bais)) &#123;</span><br><span class="line">                        <span class="comment">// return new object</span></span><br><span class="line">                        <span class="comment">// noinspection unchecked</span></span><br><span class="line">                        cloneObj = (T) ois.readObject();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Some errors occurred during cloning.&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cloneObj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Serializable&gt; <span class="function">T <span class="title">cloneWithLimited</span><span class="params">(T obj)</span> </span>&#123;</span><br><span class="line">        T cloneObj = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// write byte stream</span></span><br><span class="line">            <span class="keyword">try</span> (ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream()) &#123;</span><br><span class="line">                <span class="keyword">try</span> (ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(baos)) &#123;</span><br><span class="line">                    oos.writeObject(obj);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// assign memory, write raw object, generate new object</span></span><br><span class="line">                <span class="keyword">try</span> (ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(baos.toByteArray())) &#123;</span><br><span class="line">                    <span class="comment">// FIXME maybe read file is much better</span></span><br><span class="line">                    Set&lt;Object&gt; whitelist = <span class="keyword">new</span> HashSet&lt;&gt;(Arrays.asList(<span class="string">&quot;GoodClass1&quot;</span>, <span class="string">&quot;GoodClass2&quot;</span>));</span><br><span class="line">                    <span class="keyword">try</span> (WhitelistedObjectInputStream ois = <span class="keyword">new</span> WhitelistedObjectInputStream(bais, whitelist)) &#123;</span><br><span class="line">                        <span class="comment">// return new object</span></span><br><span class="line">                        <span class="comment">// noinspection unchecked</span></span><br><span class="line">                        cloneObj = (T) ois.readObject();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Some errors occurred during cloning.&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cloneObj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WhitelistedObjectInputStream</span> <span class="keyword">extends</span> <span class="title">ObjectInputStream</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;Object&gt; whitelist;</span><br><span class="line"></span><br><span class="line">    WhitelistedObjectInputStream(InputStream inputStream, Set&lt;Object&gt; wl) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">super</span>(inputStream);</span><br><span class="line">        whitelist = Collections.unmodifiableSet(wl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt; resolveClass(ObjectStreamClass cls) <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!whitelist.contains(cls.getName())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidClassException(<span class="string">&quot;Unexpected serialized class&quot;</span>, cls.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.resolveClass(cls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>deploy ejb with restful service to jboss</title>
    <url>/deploy-ejb2jboss.html</url>
    <content><![CDATA[<blockquote>
<p>Wildfly: 18.0.1.Final</p>
<p>JDK: 11.0.2</p>
<p>Gradle: 5.6.2</p>
<p>Maven: 3.6.2</p>
<p>We’ll deploy an ear package with two war packages(One of them uses the rest service) to jboss. </p>
</blockquote>
<p><a href="https://github.com/pplmx/DeployEjb2JBoss">Source code</a></p>
<span id="more"></span>

<h1 id="Here-is-the-project-structure"><a href="#Here-is-the-project-structure" class="headerlink" title="Here is the project structure"></a>Here is the project structure</h1><p><img src="assets/1571834311583.png" alt="1571834311583"></p>
<blockquote>
<p>The base is module ejb</p>
<p>Web and app modules both depend on ejb</p>
<p>ear includes web and app</p>
</blockquote>
<h1 id="root-build-gradle"><a href="#root-build-gradle" class="headerlink" title="root build.gradle"></a>root build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">group <span class="string">&#x27;individual.cc&#x27;</span></span><br><span class="line">version <span class="string">&#x27;1.0-SNAPSHOT&#x27;</span></span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">subprojects &#123;</span><br><span class="line">    group <span class="string">&#x27;individual.cc&#x27;</span></span><br><span class="line">    version <span class="string">&#x27;1.0-SNAPSHOT&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="ejb-module-build-gradle"><a href="#ejb-module-build-gradle" class="headerlink" title="ejb module: build.gradle"></a>ejb module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;java&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compileOnly <span class="string">&#x27;javax:javaee-api:8.0.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="ejb-module-session-bean"><a href="#ejb-module-session-bean" class="headerlink" title="ejb module: session bean"></a>ejb module: session bean</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.jar.bean.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ejb.Stateless;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Stateless</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleStatelessEjb</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello world, EJB&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="web-module-build-gradle"><a href="#web-module-build-gradle" class="headerlink" title="web module: build.gradle"></a>web module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;war&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    providedCompile project(<span class="string">&#x27;:ejb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    compileOnly <span class="string">&#x27;javax:javaee-api:8.0.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="web-module-web-servlet"><a href="#web-module-web-servlet" class="headerlink" title="web module: web servlet"></a>web module: web servlet</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cc.jar.bean.session.SimpleStatelessEjb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ejb.EJB;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&#123;&quot;/&quot;, &quot;/ejbServlet&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EjbServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EJB</span></span><br><span class="line">    SimpleStatelessEjb statelessBean;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        PrintWriter writer = resp.getWriter();</span><br><span class="line">        String msg = statelessBean.hello();</span><br><span class="line">        writer.println(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="app-module-build-gradle"><a href="#app-module-build-gradle" class="headerlink" title="app module: build.gradle"></a>app module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;war&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">ext &#123;</span><br><span class="line">    jerseyVersion = <span class="string">&#x27;2.29.1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    providedCompile project(<span class="string">&#x27;:ejb&#x27;</span>)</span><br><span class="line">    compileOnly <span class="string">&#x27;javax:javaee-api:8.0.1&#x27;</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">&quot;org.glassfish.jersey.containers:jersey-container-servlet:$&#123;jerseyVersion&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="app-module-controller-and-rest-configuration"><a href="#app-module-controller-and-rest-configuration" class="headerlink" title="app module: controller and rest configuration"></a>app module: controller and rest configuration</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.app.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cc.jar.bean.session.SimpleStatelessEjb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ejb.EJB;</span><br><span class="line"><span class="keyword">import</span> javax.ejb.Stateless;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Produces;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.core.MediaType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Stateless</span></span><br><span class="line"><span class="meta">@Path(&quot;hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EJB</span></span><br><span class="line">    SimpleStatelessEjb statelessBean;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GET</span></span><br><span class="line">    <span class="meta">@Produces(MediaType.APPLICATION_JSON)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> statelessBean.hello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cc.app.configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cc.app.servlet.HelloController;</span><br><span class="line"><span class="keyword">import</span> org.glassfish.jersey.server.ResourceConfig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.ApplicationPath;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x27;services&#x27;, &#x27;/services&#x27;, or &#x27;/services/*&#x27;</span></span><br><span class="line"><span class="comment"> * is all the same. Jersey will change it to be &#x27;/services/*&#x27;</span></span><br><span class="line"><span class="comment"> * &lt;==&gt;</span></span><br><span class="line"><span class="comment"> * &lt;servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"> * &lt;servlet-name&gt;RestApplication&lt;/servlet-name&gt;</span></span><br><span class="line"><span class="comment"> * &lt;url-pattern&gt;/services/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Here with the <span class="doctag">@ApplicationPath</span>, it&#x27;s just like if we configured the servlet mapping in the web.xml</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApplicationPath(&quot;services&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestApplication</span> <span class="keyword">extends</span> <span class="title">ResourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RestApplication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        packages(&quot;individual.cc.app.servlet&quot;);</span></span><br><span class="line">        register(HelloController.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="ear-module-build-gradle"><a href="#ear-module-build-gradle" class="headerlink" title="ear module: build.gradle"></a>ear module: build.gradle</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;ear&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// The following dependencies will be the ear modules and</span></span><br><span class="line">    <span class="comment">// will be placed in the ear root</span></span><br><span class="line">    deploy project(<span class="string">&#x27;:ejb&#x27;</span>)</span><br><span class="line">    deploy project(<span class="attr">path:</span> <span class="string">&#x27;:web&#x27;</span>, <span class="attr">configuration:</span> <span class="string">&#x27;archives&#x27;</span>)</span><br><span class="line">    deploy project(<span class="attr">path:</span> <span class="string">&#x27;:app&#x27;</span>, <span class="attr">configuration:</span> <span class="string">&#x27;archives&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ear &#123;</span><br><span class="line">    appDirName <span class="string">&#x27;src/main/app&#x27;</span>  <span class="comment">// use application metadata found in this folder</span></span><br><span class="line">    <span class="comment">// put dependent libraries into APP-INF/lib inside the generated EAR</span></span><br><span class="line">    libDirName <span class="string">&#x27;APP-INF/lib&#x27;</span></span><br><span class="line">    deploymentDescriptor &#123;  <span class="comment">// custom entries for application.xml:</span></span><br><span class="line">        initializeInOrder = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="build-amp-deploy"><a href="#build-amp-deploy" class="headerlink" title="build &amp; deploy"></a>build &amp; deploy</h1><ol>
<li>clean and build ejb module</li>
<li>clean and build app/web module</li>
<li>clean and build ear module</li>
</ol>
<p>Copy <code>ear module/build/libs/ear-1.0-SNAPSHOT.ear</code> to <code>JBOSS HOME/standalone/deployments</code></p>
<p>Run <code>JBOSS HOME/bin/standalone.bat</code> as <code>administrator</code></p>
<p> <a href="http://127.0.0.1:8080/web-1.0-SNAPSHOT/">http://127.0.0.1:8080/web-1.0-SNAPSHOT/</a> </p>
<p> <a href="http://127.0.0.1:8080/app-1.0-SNAPSHOT/services/hello">http://127.0.0.1:8080/app-1.0-SNAPSHOT/services/hello</a> </p>
<p> <a href="https://127.0.0.1:8443/web-1.0-SNAPSHOT/">https://127.0.0.1:8443/web-1.0-SNAPSHOT/</a> </p>
<p> <a href="https://127.0.0.1:8443/app-1.0-SNAPSHOT/services/hello">https://127.0.0.1:8443/app-1.0-SNAPSHOT/services/hello</a> </p>
<p>All of the above will output <strong>hello world, EJB</strong></p>
<hr>
<hr>
<h1 id="if-maven-replace-5-build-gradle"><a href="#if-maven-replace-5-build-gradle" class="headerlink" title="if maven, replace 5 build.gradle"></a>if maven, replace 5 build.gradle</h1><h2 id="root-pom-xml"><a href="#root-pom-xml" class="headerlink" title="root pom.xml"></a>root pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>web<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>app<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--custom package--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--external package--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaee-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish.jersey.containers<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-container-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.29.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">failOnMissingWebXml</span>&gt;</span>false<span class="tag">&lt;/<span class="name">failOnMissingWebXml</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ear-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ejb-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="ejb-module-pom-xml"><a href="#ejb-module-pom-xml" class="headerlink" title="ejb module: pom.xml"></a>ejb module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaee-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ejb-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="web-module-pom-xml"><a href="#web-module-pom-xml" class="headerlink" title="web module: pom.xml"></a>web module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--custom package--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">failOnMissingWebXml</span>&gt;</span>false<span class="tag">&lt;/<span class="name">failOnMissingWebXml</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="app-module-pom-xml"><a href="#app-module-pom-xml" class="headerlink" title="app module: pom.xml"></a>app module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--custom package--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>ejb<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish.jersey.containers<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-container-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="ear-module-pom-xml"><a href="#ear-module-pom-xml" class="headerlink" title="ear module: pom.xml"></a>ear module: pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>j2ee<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>ear<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-ear-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;initializeInOrder&gt;true&lt;/initializeInOrder&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">webModule</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--MUST reset the name of a package what is in ear package--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">bundleFileName</span>&gt;</span>web-in-ear.war<span class="tag">&lt;/<span class="name">bundleFileName</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--set custom context root--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">contextRoot</span>&gt;</span>/web<span class="tag">&lt;/<span class="name">contextRoot</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">webModule</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">webModule</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>individual.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--MUST reset the name of a package what is in ear package--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">bundleFileName</span>&gt;</span>app-in-ear.war<span class="tag">&lt;/<span class="name">bundleFileName</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--set custom context root--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">contextRoot</span>&gt;</span>/app<span class="tag">&lt;/<span class="name">contextRoot</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">webModule</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="build-amp-deploy-1"><a href="#build-amp-deploy-1" class="headerlink" title="build &amp; deploy"></a>build &amp; deploy</h2><p><code>clean and install under root pom.xml </code></p>
<p>Then deploy it to jboss, you can access the following urls:</p>
<p><a href="http://localhost:8080/web/">http://localhost:8080/web/</a> </p>
<p><a href="http://localhost:8080/app/services/hello">http://localhost:8080/app/services/hello</a> </p>
<p><a href="https://localhost:8443/web/">https://localhost:8443/web/</a> </p>
<p><a href="https://localhost:8443/app/services/hello">https://localhost:8443/app/services/hello</a> </p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>ejb</tag>
        <tag>restful</tag>
        <tag>jboss</tag>
        <tag>gradle</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>deploy springboot to external container(JBoss)</title>
    <url>/deploy-springboot2jboss.html</url>
    <content><![CDATA[<blockquote>
<p>Wildfly: 18.0.1.Final</p>
<p>JDK: 11.0.2</p>
<p>Gradle: 5.6.2</p>
<p>Web: Webflux</p>
</blockquote>
<p><a href="https://github.com/pplmx/DeploySpringboot2JBoss">Source Code</a></p>
<span id="more"></span>

<h2 id="create-springboot-demo-project-by-initializer"><a href="#create-springboot-demo-project-by-initializer" class="headerlink" title="create springboot demo project by initializer"></a>create springboot demo project by initializer</h2><p><img src="assets/1569844794129.png" alt="1569844794129"></p>
<p><img src="assets/1569844973320.png" alt="1569844973320"></p>
<p><img src="assets/1569845032989.png" alt="1569845032989"></p>
<p><img src="assets/1569845140007.png" alt="1569845140007"></p>
<p><img src="assets/1569846771715.png" alt="1569846771715"></p>
<h2 id="write-a-test-case"><a href="#write-a-test-case" class="headerlink" title="write a test case"></a>write a test case</h2><p><img src="assets/1569846460212.png" alt="1569846460212"></p>
<h2 id="build-package"><a href="#build-package" class="headerlink" title="build package"></a>build package</h2><p><img src="assets/1570622045669.png" alt="1570622045669"></p>
<h2 id="deploy-it-to-JBoss"><a href="#deploy-it-to-JBoss" class="headerlink" title="deploy it to JBoss"></a>deploy it to JBoss</h2><p>You can put <code>boot.war</code> to <code>$JBOSS_HOME/standalone/deployments/</code>, then run <code>$JBOSS_HOME/bin/standalone.bat</code> by administrator.</p>
<p><a href="https://localhost:8443/boot/">https://localhost:8443/boot/</a></p>
<p><a href="http://localhost:8080/boot/">http://localhost:8080/boot/</a></p>
<p>It will output <code>hello world, springboot</code>.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>jboss</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>Abstract Factory Pattern in Design Pattern</title>
    <url>/design-pattern-abstract-factory.html</url>
    <content><![CDATA[<h1 id="抽象工厂模式"><a href="#抽象工厂模式" class="headerlink" title="抽象工厂模式"></a>抽象工厂模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>抽象工厂模式（Abstract Factory Pattern）是围绕一个超级工厂创建其他工厂。</p>
<p>这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p>
<p>在抽象工厂模式中，接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。</p>
<p>每个生成的工厂都能按照<code>工厂模式</code>提供对象。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>主要解决接口选择的问题。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>系统的产品有多于一个的产品族，而系统只消费其中某一族的产品。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>QQ 换皮肤，一整套一起换</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>当一个产品族中的多个对象被设计成一起工作时，它能保证客户端始终只使用同一个产品族中的对象。</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/abstractfactory-pattern.png" alt="Abstract Factory Pattern"></p>
<h3 id="Shape-and-Subclass"><a href="#Shape-and-Subclass" class="headerlink" title="Shape and Subclass"></a>Shape and Subclass</h3><h4 id="Shape-interface"><a href="#Shape-interface" class="headerlink" title="Shape interface"></a>Shape interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GeometricShape</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * draw a geometric shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ShapeType2D"><a href="#ShapeType2D" class="headerlink" title="ShapeType2D"></a>ShapeType2D</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ShapeType2D</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 2d geometric shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    LINE, CIRCLE, SQUARE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ShapeType3D"><a href="#ShapeType3D" class="headerlink" title="ShapeType3D"></a>ShapeType3D</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ShapeType3D</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 3d geometric shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SPHERE, CUBE, CYLINDER</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2D-Shape"><a href="#2D-Shape" class="headerlink" title="2D Shape"></a>2D Shape</h4><h5 id="Line"><a href="#Line" class="headerlink" title="Line"></a>Line</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Line</span> <span class="keyword">implements</span> <span class="title">GeometricShape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Line.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Circle"><a href="#Circle" class="headerlink" title="Circle"></a>Circle</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">implements</span> <span class="title">GeometricShape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Circle.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="Square"><a href="#Square" class="headerlink" title="Square"></a>Square</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">implements</span> <span class="title">GeometricShape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Square.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3D-Shape"><a href="#3D-Shape" class="headerlink" title="3D Shape"></a>3D Shape</h4><h5 id="Cude"><a href="#Cude" class="headerlink" title="Cude"></a>Cude</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cube</span> <span class="keyword">implements</span> <span class="title">GeometricShape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Cube.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Sphere"><a href="#Sphere" class="headerlink" title="Sphere"></a>Sphere</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sphere</span> <span class="keyword">implements</span> <span class="title">GeometricShape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Sphere.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Cylinder"><a href="#Cylinder" class="headerlink" title="Cylinder"></a>Cylinder</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cylinder</span> <span class="keyword">implements</span> <span class="title">GeometricShape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Cylinder.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Factory"><a href="#Factory" class="headerlink" title="Factory"></a>Factory</h3><h4 id="Abstract-Factory"><a href="#Abstract-Factory" class="headerlink" title="Abstract Factory"></a>Abstract Factory</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * To get a 2d geometric shape</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type shape name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Geometric Shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> GeometricShape <span class="title">getGeometricShape2D</span><span class="params">(ShapeType2D type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * To get a 3d geometric shape</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type shape name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Geometric Shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> GeometricShape <span class="title">getGeometricShape3D</span><span class="params">(ShapeType3D type)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Two-Dimension-Shape-Factory"><a href="#Two-Dimension-Shape-Factory" class="headerlink" title="Two Dimension Shape Factory"></a>Two Dimension Shape Factory</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoDimensionShapeFactory</span> <span class="keyword">extends</span> <span class="title">AbstractFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GeometricShape <span class="title">getGeometricShape2D</span><span class="params">(ShapeType2D type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> LINE:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Line();</span><br><span class="line">            <span class="keyword">case</span> CIRCLE:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Circle();</span><br><span class="line">            <span class="keyword">case</span> SQUARE:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Square();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GeometricShape <span class="title">getGeometricShape3D</span><span class="params">(ShapeType3D type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Three-Dimension-Shape-Factory"><a href="#Three-Dimension-Shape-Factory" class="headerlink" title="Three Dimension Shape Factory"></a>Three Dimension Shape Factory</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreeDimensionShapeFactory</span> <span class="keyword">extends</span> <span class="title">AbstractFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GeometricShape <span class="title">getGeometricShape2D</span><span class="params">(ShapeType2D type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GeometricShape <span class="title">getGeometricShape3D</span><span class="params">(ShapeType3D type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> SPHERE:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Sphere();</span><br><span class="line">            <span class="keyword">case</span> CUBE:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Cube();</span><br><span class="line">            <span class="keyword">case</span> CYLINDER:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Cylinder();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="Factory-Creator"><a href="#Factory-Creator" class="headerlink" title="Factory Creator"></a>Factory Creator</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">FactoryCreator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * create 2D, 3D geometric shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    TWO_D_SHAPE_FACTORY(TwoDimensionShapeFactory::<span class="keyword">new</span>), THREE_D_SHAPE_FACTORY(ThreeDimensionShapeFactory::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Supplier&lt;AbstractFactory&gt; factorySupplier;</span><br><span class="line"></span><br><span class="line">    FactoryCreator(Supplier&lt;AbstractFactory&gt; factorySupplier) &#123;</span><br><span class="line">        <span class="keyword">this</span>.factorySupplier = factorySupplier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AbstractFactory <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> factorySupplier.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AbstractFactory <span class="title">getFactory</span><span class="params">(FactoryCreator creator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> creator.getInstance();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.abstractfactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractFactoryPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// draw 2d shape</span></span><br><span class="line">        FactoryCreator.TWO_D_SHAPE_FACTORY</span><br><span class="line">                .getInstance()</span><br><span class="line">                .getGeometricShape2D(ShapeType2D.LINE)</span><br><span class="line">                .draw();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// draw 3d shape</span></span><br><span class="line">        FactoryCreator.THREE_D_SHAPE_FACTORY</span><br><span class="line">                .getInstance()</span><br><span class="line">                .getGeometricShape3D(ShapeType3D.CYLINDER)</span><br><span class="line">                .draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13:18:52: Executing task &#x27;AbstractFactoryPatternTester.main()&#x27;...</span><br><span class="line"></span><br><span class="line">Configuration on demand is an incubating feature.</span><br><span class="line">&gt; Task :compileJava</span><br><span class="line">&gt; Task :processResources NO-SOURCE</span><br><span class="line">&gt; Task :classes</span><br><span class="line"></span><br><span class="line">&gt; Task :AbstractFactoryPatternTester.main()</span><br><span class="line">Line.draw</span><br><span class="line">Cylinder.draw</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">2 actionable tasks: 2 executed</span><br><span class="line">13:18:54: Task execution finished &#x27;AbstractFactoryPatternTester.main()&#x27;.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Adapter Pattern in Design Pattern</title>
    <url>/design-pattern-adapter.html</url>
    <content><![CDATA[<h1 id="适配器模式"><a href="#适配器模式" class="headerlink" title="适配器模式"></a>适配器模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>适配器模式（Adapter Pattern）是作为两个不兼容的接口之间的桥梁。</p>
<p>这种类型的设计模式属于结构型模式，它结合了两个独立接口的功能。</p>
<p>这种模式涉及到一个单一的类，该类负责加入独立的或不兼容的接口功能。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>主要解决在软件系统中，常常要将一些”现存的对象”放到新的环境中，而新环境要求的接口是现对象不能满足的。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><ul>
<li>系统需要使用现有的类，而此类的接口不符合系统的需要。</li>
<li>想要建立一个可以重复使用的类，用于与一些彼此之间没有太大关联的一些类，包括一些可能在将来引进的类一起工作，这些源类不一定有一致的接口。</li>
<li>通过接口转换，将一个类插入另一个类系中。（比如老虎和飞禽，现在多了一个飞虎，在不增加实体的需求下，增加一个适配器，在里面包容一个虎对象，实现飞的接口。）</li>
</ul>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>  美国电器 110V，中国 220V，就要有一个适配器将 110V 转化为 220V</li>
<li>  在 LINUX 上运行 WINDOWS 程序</li>
<li>  Java中JDBC</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>可以让任何两个没有关联的类一起运行</li>
<li>提高了类的复用</li>
<li>增加了类的透明度</li>
<li>灵活性好</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/adapter-pattern.png" alt="Adapter Pattern"></p>
<h3 id="Player-Interface"><a href="#Player-Interface" class="headerlink" title="Player Interface"></a>Player Interface</h3><h4 id="Media-Player"><a href="#Media-Player" class="headerlink" title="Media Player"></a>Media Player</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MediaPlayer</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * play a media resource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> audioType audio type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename file name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">(String audioType, String filename)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Advanced-Media-Player"><a href="#Advanced-Media-Player" class="headerlink" title="Advanced Media Player"></a>Advanced Media Player</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AdvancedMediaPlayer</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * play a vlc resource</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename file name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">playVlc</span><span class="params">(String filename)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * play a mp4 resource</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename file name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">playMp4</span><span class="params">(String filename)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Player-Implementation"><a href="#Player-Implementation" class="headerlink" title="Player Implementation"></a>Player Implementation</h3><h4 id="MP4-Player"><a href="#MP4-Player" class="headerlink" title="MP4 Player"></a>MP4 Player</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mp4Player</span> <span class="keyword">implements</span> <span class="title">AdvancedMediaPlayer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">playVlc</span><span class="params">(String filename)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">playMp4</span><span class="params">(String filename)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Mp4Player.playMp4&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="VLC-Player"><a href="#VLC-Player" class="headerlink" title="VLC Player"></a>VLC Player</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VlcPlayer</span> <span class="keyword">implements</span> <span class="title">AdvancedMediaPlayer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">playVlc</span><span class="params">(String filename)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VlcPlayer.playVlc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">playMp4</span><span class="params">(String filename)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Adapter"><a href="#Adapter" class="headerlink" title="Adapter"></a>Adapter</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MediaAdapter</span> <span class="keyword">implements</span> <span class="title">MediaPlayer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> AdvancedMediaPlayer advancedMediaPlayer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MediaAdapter</span><span class="params">(String audioType)</span> </span>&#123;</span><br><span class="line">        audioType = audioType.toLowerCase();</span><br><span class="line">        <span class="keyword">switch</span> (audioType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;vlc&quot;</span>:</span><br><span class="line">                advancedMediaPlayer = <span class="keyword">new</span> VlcPlayer();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;mp4&quot;</span>:</span><br><span class="line">                advancedMediaPlayer = <span class="keyword">new</span> Mp4Player();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(String audioType, String filename)</span> </span>&#123;</span><br><span class="line">        audioType = audioType.toLowerCase();</span><br><span class="line">        <span class="keyword">switch</span> (audioType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;vlc&quot;</span>:</span><br><span class="line">                advancedMediaPlayer.playVlc(filename);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;mp4&quot;</span>:</span><br><span class="line">                advancedMediaPlayer.playMp4(filename);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Audio-Player"><a href="#Audio-Player" class="headerlink" title="Audio Player"></a>Audio Player</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AudioPlayer</span> <span class="keyword">implements</span> <span class="title">MediaPlayer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MediaPlayer mediaAdapter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(String audioType, String filename)</span> </span>&#123;</span><br><span class="line">        audioType = audioType.toLowerCase();</span><br><span class="line">        <span class="keyword">switch</span> (audioType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;mp3&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;AudioPlayer.play: MP3 is playing.&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;vlc&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;mp4&quot;</span>:</span><br><span class="line">                mediaAdapter = <span class="keyword">new</span> MediaAdapter(audioType);</span><br><span class="line">                mediaAdapter.play(audioType, filename);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;AudioPlayer.play: Invalid Media [ &quot;</span> + audioType + <span class="string">&quot; ], the format is not supported.&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdapterPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        AudioPlayer audioPlayer = <span class="keyword">new</span> AudioPlayer();</span><br><span class="line"></span><br><span class="line">        audioPlayer.play(<span class="string">&quot;mp3&quot;</span>, <span class="string">&quot;beyond the horizon.mp3&quot;</span>);</span><br><span class="line">        audioPlayer.play(<span class="string">&quot;mp4&quot;</span>, <span class="string">&quot;alone.mp4&quot;</span>);</span><br><span class="line">        audioPlayer.play(<span class="string">&quot;vlc&quot;</span>, <span class="string">&quot;far far away.vlc&quot;</span>);</span><br><span class="line">        audioPlayer.play(<span class="string">&quot;avi&quot;</span>, <span class="string">&quot;mind me.avi&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AudioPlayer.play: MP3 is playing.</span><br><span class="line">Mp4Player.playMp4</span><br><span class="line">VlcPlayer.playVlc</span><br><span class="line">AudioPlayer.play: Invalid Media [ avi ], the format is not supported.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Bridge Pattern in Design Pattern</title>
    <url>/design-pattern-bridge.html</url>
    <content><![CDATA[<h1 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>桥接（Bridge）是用于把抽象化与实现化解耦，使得二者可以独立变化。</p>
<p>这种类型的设计模式属于结构型模式，它通过提供抽象化和实现化之间的桥接结构，来实现二者的解耦。</p>
<p>这种模式涉及到一个作为桥接的接口，使得实体类的功能独立于接口实现类。</p>
<p>这两种类型的类可被结构化改变而互不影响。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>实现系统可能有多个角度分类，每一种角度都可能变化</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>  墙上的开关，可以看到的开关是抽象的，不用管里面具体怎么实现的</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>抽象和实现的分离</li>
<li>优秀的扩展能力</li>
<li>实现细节对客户透明</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/bridge-pattern.png" alt="Bridge Pattern"></p>
<h3 id="DrawApi"><a href="#DrawApi" class="headerlink" title="DrawApi"></a>DrawApi</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DrawApi</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * To draw a circle</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> radius radius</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x Abscissa, X-axis</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y ordinate, Y-axis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawCircle</span><span class="params">(<span class="keyword">int</span> radius, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="RedCircle"><a href="#RedCircle" class="headerlink" title="RedCircle"></a>RedCircle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedCircle</span> <span class="keyword">implements</span> <span class="title">DrawApi</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawCircle</span><span class="params">(<span class="keyword">int</span> radius, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;[Draw a red circle] radius = &quot;</span> + radius + <span class="string">&quot;, x = &quot;</span> + x + <span class="string">&quot;, y = &quot;</span> + y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="PurpleCircle"><a href="#PurpleCircle" class="headerlink" title="PurpleCircle"></a>PurpleCircle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PurpleCircle</span> <span class="keyword">implements</span> <span class="title">DrawApi</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawCircle</span><span class="params">(<span class="keyword">int</span> radius, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;[Draw a purple circle] radius = &quot;</span> + radius + <span class="string">&quot;, x = &quot;</span> + x + <span class="string">&quot;, y = &quot;</span> + y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="BaseShape"><a href="#BaseShape" class="headerlink" title="BaseShape"></a>BaseShape</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseShape</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> DrawApi drawApi;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">BaseShape</span><span class="params">(DrawApi drawApi)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.drawApi = drawApi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * To draw a geometric shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Circle"><a href="#Circle" class="headerlink" title="Circle"></a>Circle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">extends</span> <span class="title">BaseShape</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> radius;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">(DrawApi drawApi, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> radius)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(drawApi);</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">        <span class="keyword">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        drawApi.drawCircle(radius, x, y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BridgePatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BaseShape redCircle = <span class="keyword">new</span> Circle(<span class="keyword">new</span> RedCircle(), <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">        BaseShape purpleCircle = <span class="keyword">new</span> Circle(<span class="keyword">new</span> PurpleCircle(), <span class="number">0</span>, <span class="number">6</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        redCircle.draw();</span><br><span class="line">        purpleCircle.draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Draw a red circle] radius = 3, x = 0, y = 0</span><br><span class="line">[Draw a purple circle] radius = 3, x = 0, y = 6</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Builder Pattern in Design Pattern</title>
    <url>/design-pattern-builder.html</url>
    <content><![CDATA[<h1 id="建造者模式"><a href="#建造者模式" class="headerlink" title="建造者模式"></a>建造者模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>建造者模式（Builder Pattern）使用多个简单的对象一步一步构建成一个复杂的对象。</p>
<p>这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p>
<p>一个 Builder 类会一步一步构造最终的对象。</p>
<p>该 Builder 类是独立于其他对象的。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>主要解决在软件系统中，有时候面临着”一个复杂对象”的创建工作。</p>
<p>其通常由各个部分的子对象用一定的算法构成，由于需求的变化，这个复杂对象的各个部分经常面临着剧烈的变化，但是将它们组合在一起的算法却相对稳定。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>一些基本部件不会变，而其组合经常变化的时候</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>KFC里的可乐，薯条 ，炸鸡翅等是不变的，而其组合（套餐）是经常变化的</li>
<li>Java的StringBuilder</li>
</ul>
<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul>
<li>当一个类的构造函数参数个数超过4个，而且这些参数有些是可选的参数，考虑使用构造者模式</li>
<li>多个部件或者零件，都可以装配到一个对象中，但是产生的运行结果又相同</li>
<li>产品类非常复杂，或者产品类中调用顺序不同产生了不同的作用</li>
<li>初始化一个对象特别复杂，如使用多个构造方法，或者说有很多参数，并且都有默认值时</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>易扩展</li>
<li>便于控制细节风险</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/builder-pattern.png" alt="Builder Pattern"></p>
<h3 id="Computer"><a href="#Computer" class="headerlink" title="Computer"></a>Computer</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.builder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Computer</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Required</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String cpu;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Required</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String ram;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String keyboard;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String headset;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String display;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Computer</span><span class="params">(ComputerBuilder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cpu = builder.cpu;</span><br><span class="line">        <span class="keyword">this</span>.ram = builder.ram;</span><br><span class="line">        <span class="keyword">this</span>.keyboard = builder.keyboard;</span><br><span class="line">        <span class="keyword">this</span>.headset = builder.headset;</span><br><span class="line">        <span class="keyword">this</span>.display = builder.display;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Computer.<span class="function">ComputerBuilder <span class="title">builder</span><span class="params">(String cpu, String ram)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Computer.ComputerBuilder(cpu, ram);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ComputerBuilder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String cpu;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String ram;</span><br><span class="line">        <span class="keyword">private</span> String keyboard;</span><br><span class="line">        <span class="keyword">private</span> String headset;</span><br><span class="line">        <span class="keyword">private</span> String display;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ComputerBuilder</span><span class="params">(String cpu, String ram)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.cpu = cpu;</span><br><span class="line">            <span class="keyword">this</span>.ram = ram;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Computer <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Computer(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Computer.<span class="function">ComputerBuilder <span class="title">keyboard</span><span class="params">(String keyboard)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.keyboard = keyboard;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Computer.<span class="function">ComputerBuilder <span class="title">headset</span><span class="params">(String headset)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.headset = headset;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ComputerBuilder <span class="title">display</span><span class="params">(String display)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.display = display;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Computer&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;cpu=&#x27;&quot;</span> + cpu + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, ram=&#x27;&quot;</span> + ram + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, keyboard=&#x27;&quot;</span> + keyboard + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, headset=&#x27;&quot;</span> + headset + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, display=&#x27;&quot;</span> + display + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.builder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BuilderPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Computer hp = Computer.builder(<span class="string">&quot;i9&quot;</span>, <span class="string">&quot;32G&quot;</span>).build();</span><br><span class="line">        Computer dell = Computer.builder(<span class="string">&quot;i9&quot;</span>, <span class="string">&quot;32G&quot;</span>)</span><br><span class="line">                .display(<span class="string">&quot;Samsung&quot;</span>)</span><br><span class="line">                .headset(<span class="string">&quot;Beats&quot;</span>)</span><br><span class="line">                .keyboard(<span class="string">&quot;Filco&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        System.out.println(<span class="string">&quot;dell = &quot;</span> + dell);</span><br><span class="line">        System.out.println(<span class="string">&quot;hp = &quot;</span> + hp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">16:36:50: Executing task &#x27;BuilderPatternTester.main()&#x27;...</span><br><span class="line"></span><br><span class="line">Configuration on demand is an incubating feature.</span><br><span class="line">&gt; Task :compileJava</span><br><span class="line">&gt; Task :processResources NO-SOURCE</span><br><span class="line">&gt; Task :classes</span><br><span class="line"></span><br><span class="line">&gt; Task :BuilderPatternTester.main()</span><br><span class="line">dell = Computer&#123;cpu=&#x27;i9&#x27;, ram=&#x27;32G&#x27;, keyboard=&#x27;Filco&#x27;, headset=&#x27;Beats&#x27;, display=&#x27;Samsung&#x27;&#125;</span><br><span class="line">hp = Computer&#123;cpu=&#x27;i9&#x27;, ram=&#x27;32G&#x27;, keyboard=&#x27;null&#x27;, headset=&#x27;null&#x27;, display=&#x27;null&#x27;&#125;</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">2 actionable tasks: 2 executed</span><br><span class="line">16:36:52: Task execution finished &#x27;BuilderPatternTester.main()&#x27;.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Chain of Responsibility in Design Pattern</title>
    <url>/design-pattern-chain4responsibility.html</url>
    <content><![CDATA[<h1 id="责任链模式"><a href="#责任链模式" class="headerlink" title="责任链模式"></a>责任链模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>顾名思义，责任链模式（Chain of Responsibility Pattern）为请求创建了一个接收者对象的链。</p>
<p>这种模式给予请求的类型，对请求的发送者和接收者进行解耦。</p>
<p>这种类型的设计模式属于行为型模式。</p>
<p>在这种模式中，通常每个接收者都包含对另一个接收者的引用。</p>
<p>如果<code>一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者</code>，依此类推。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>职责链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，所以职责链将请求的发送者和请求的处理者解耦了。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>想在访问一个类时， 进行一些控制</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>击鼓传花</li>
<li>JS 中的事件冒泡</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>降低耦合度。它将请求的发送者和接收者解耦</li>
<li>简化了对象。使得对象不需要知道链的结构</li>
<li>增强给对象指派职责的灵活性。通过改变链内的成员或者调动它们的次序，允许动态地新增或者删除责任</li>
<li>增加新的请求处理类很方便。</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/chain4responsibility-pattern.png" alt="Chain of Responsibility Pattern"></p>
<h3 id="Logger"><a href="#Logger" class="headerlink" title="Logger"></a>Logger</h3><h4 id="AbstractLogger"><a href="#AbstractLogger" class="headerlink" title="AbstractLogger"></a>AbstractLogger</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.chain4responsibility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractLogger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> DEBUG = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> INFO = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> WARN = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> ERROR = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> level;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> AbstractLogger nextLogger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNextLogger</span><span class="params">(AbstractLogger nextLogger)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nextLogger = nextLogger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logMessage</span><span class="params">(<span class="keyword">int</span> level, String message)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// if no ability to handle, hand up it to successor</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.level == level) &#123;</span><br><span class="line">            write(message);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (nextLogger != <span class="keyword">null</span>) &#123;</span><br><span class="line">                nextLogger.logMessage(level, message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * write log</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message log info</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(String message)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="DebugLogger"><a href="#DebugLogger" class="headerlink" title="DebugLogger"></a>DebugLogger</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.chain4responsibility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DebugLogger</span> <span class="keyword">extends</span> <span class="title">AbstractLogger</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DebugLogger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.level = AbstractLogger.DEBUG;</span><br><span class="line">        setNextLogger(<span class="keyword">new</span> InfoLogger());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;DebugLogger.write: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="InfoLogger"><a href="#InfoLogger" class="headerlink" title="InfoLogger"></a>InfoLogger</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.chain4responsibility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InfoLogger</span> <span class="keyword">extends</span> <span class="title">AbstractLogger</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InfoLogger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.level = AbstractLogger.INFO;</span><br><span class="line">        setNextLogger(<span class="keyword">new</span> WarnLogger());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;InfoLogger.write: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="WarnLogger"><a href="#WarnLogger" class="headerlink" title="WarnLogger"></a>WarnLogger</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.chain4responsibility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WarnLogger</span> <span class="keyword">extends</span> <span class="title">AbstractLogger</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WarnLogger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.level = AbstractLogger.WARN;</span><br><span class="line">        setNextLogger(<span class="keyword">new</span> ErrorLogger());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;WarnLogger.write: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ErrorLogger"><a href="#ErrorLogger" class="headerlink" title="ErrorLogger"></a>ErrorLogger</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.chain4responsibility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorLogger</span> <span class="keyword">extends</span> <span class="title">AbstractLogger</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ErrorLogger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.level = AbstractLogger.ERROR;</span><br><span class="line">        setNextLogger(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ErrorLogger.write: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.chain4responsibility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        AbstractLogger debugLogger = <span class="keyword">new</span> DebugLogger();</span><br><span class="line">        System.out.println(<span class="string">&quot;**************************&quot;</span>);</span><br><span class="line">        debugLogger.logMessage(<span class="number">1</span>, <span class="string">&quot;Here is a debug message.&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">        debugLogger.logMessage(<span class="number">2</span>, <span class="string">&quot;Here is a info message.&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">        debugLogger.logMessage(<span class="number">3</span>, <span class="string">&quot;Here is a warn message.&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">        debugLogger.logMessage(<span class="number">4</span>, <span class="string">&quot;Here is a error message.&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**************************</span><br><span class="line">DebugLogger.write: Here is a debug message.</span><br><span class="line">==========================</span><br><span class="line">InfoLogger.write: Here is a info message.</span><br><span class="line">==========================</span><br><span class="line">WarnLogger.write: Here is a warn message.</span><br><span class="line">==========================</span><br><span class="line">ErrorLogger.write: Here is a error message.</span><br><span class="line">==========================</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Command Pattern in Design Pattern</title>
    <url>/design-pattern-command.html</url>
    <content><![CDATA[<h1 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>命令模式（Command Pattern）是一种数据驱动的设计模式，它属于行为型模式。</p>
<p>请求以命令的形式包裹在对象中，并传给调用对象。</p>
<p>调用对象寻找可以处理该命令的合适的对象，并把该命令传给相应的对象，该对象执行命令。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>在软件系统中，行为请求者与行为实现者通常是一种紧耦合的关系，但某些场合，比如需要对行为进行记录、撤销或重做、事务等处理时，这种无法抵御变化的紧耦合的设计就不太合适。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>在某些场合，比如要对行为进行”记录、撤销/重做、事务”等处理，这种无法抵御变化的紧耦合是不合适的。</p>
<p>在这种情况下，如何将”行为请求者”与”行为实现者”解耦？将一组行为抽象为对象，可以实现二者之间的松耦合。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>struts中的action核心控制器ActionServlet</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>降低了系统耦合度</li>
<li>新的命令可以很容易添加到系统中去</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/command-pattern.png" alt="Command Pattern"></p>
<h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * execute a action</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Light"><a href="#Light" class="headerlink" title="Light"></a>Light</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Light</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">on</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Light.on&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">off</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Light.off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="LightOnCommand"><a href="#LightOnCommand" class="headerlink" title="LightOnCommand"></a>LightOnCommand</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LightOnCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Light light;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LightOnCommand</span><span class="params">(Light light)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.light = light;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        light.on();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="LightOffCommand"><a href="#LightOffCommand" class="headerlink" title="LightOffCommand"></a>LightOffCommand</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LightOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Light light;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LightOffCommand</span><span class="params">(Light light)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.light = light;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        light.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Stereo"><a href="#Stereo" class="headerlink" title="Stereo"></a>Stereo</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stereo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">on</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.on&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">off</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setCD&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDVD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setDVD&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadio</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setRadio&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVolume</span><span class="params">(<span class="keyword">int</span> volume)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setVolume: volume = &quot;</span> + volume);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="StereoOnWithCdCommand"><a href="#StereoOnWithCdCommand" class="headerlink" title="StereoOnWithCdCommand"></a>StereoOnWithCdCommand</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StereoOnWithCdCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Stereo stereo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StereoOnWithCdCommand</span><span class="params">(Stereo stereo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.stereo = stereo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stereo.on();</span><br><span class="line">        stereo.setCD();</span><br><span class="line">        stereo.setVolume(<span class="number">11</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="StereoOffCommand"><a href="#StereoOffCommand" class="headerlink" title="StereoOffCommand"></a>StereoOffCommand</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StereoOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Stereo stereo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StereoOffCommand</span><span class="params">(Stereo stereo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.stereo = stereo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stereo.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="SimpleRemoteControl"><a href="#SimpleRemoteControl" class="headerlink" title="SimpleRemoteControl"></a>SimpleRemoteControl</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleRemoteControl</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Command slot;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCommand</span><span class="params">(Command command)</span> </span>&#123;</span><br><span class="line">        slot = command;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buttonWasPressed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        slot.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommandPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SimpleRemoteControl remote = <span class="keyword">new</span> SimpleRemoteControl();</span><br><span class="line">        Light light = <span class="keyword">new</span> Light();</span><br><span class="line">        Stereo stereo = <span class="keyword">new</span> Stereo();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// change command dynamically</span></span><br><span class="line">        remote.setCommand(<span class="keyword">new</span> LightOnCommand(light));</span><br><span class="line">        remote.buttonWasPressed();</span><br><span class="line"></span><br><span class="line">        remote.setCommand(<span class="keyword">new</span> StereoOnWithCdCommand(stereo));</span><br><span class="line">        remote.buttonWasPressed();</span><br><span class="line"></span><br><span class="line">        remote.setCommand(<span class="keyword">new</span> StereoOffCommand(stereo));</span><br><span class="line">        remote.buttonWasPressed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Light.on</span><br><span class="line">Stereo.on</span><br><span class="line">Stereo.setCD</span><br><span class="line">Stereo.setVolume: volume = 11</span><br><span class="line">Stereo.off</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Composite Pattern in Design Pattern</title>
    <url>/design-pattern-composite.html</url>
    <content><![CDATA[<h1 id="组合模式"><a href="#组合模式" class="headerlink" title="组合模式"></a>组合模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>组合模式（Composite Pattern），又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。</p>
<p>组合模式依据树形结构来组合对象，用来表示部分以及整体层次。</p>
<p>这种类型的设计模式属于结构型模式，它创建了对象组的树形结构。</p>
<p>这种模式创建了一个包含自己对象组的类。该类提供了修改相同对象组的方式。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>它在我们树型结构的问题中，模糊了简单元素和复杂元素的概念，客户程序可以像处理简单元素一样来处理复杂元素，从而使得客户程序与复杂元素的内部结构解耦。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><ul>
<li>您想表示对象的部分-整体层次结构（树形结构）</li>
<li>您希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象</li>
</ul>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作符也可以是操作数、操作符和另一个操作数</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>高层模块调用简单</li>
<li>节点自由增加</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/composite-pattern.png" alt="Composite Pattern"></p>
<h3 id="Employee"><a href="#Employee" class="headerlink" title="Employee"></a>Employee</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.composite;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String dept;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> salary;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Employee&gt; subordinateList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(<span class="keyword">int</span> id, String name, String dept, <span class="keyword">int</span> salary)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.dept = dept;</span><br><span class="line">        <span class="keyword">this</span>.salary = salary;</span><br><span class="line">        <span class="keyword">this</span>.subordinateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Employee employee)</span> </span>&#123;</span><br><span class="line">        subordinateList.add(employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Employee employee)</span> </span>&#123;</span><br><span class="line">        subordinateList.remove(employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDept</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dept;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDept</span><span class="params">(String dept)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dept = dept;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(<span class="keyword">int</span> salary)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getSubordinateList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> subordinateList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Employee&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, dept=&#x27;&quot;</span> + dept + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, salary=&quot;</span> + salary +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.composite;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompositePatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Employee ceo = <span class="keyword">new</span> Employee(<span class="number">10000</span>, <span class="string">&quot;Adam&quot;</span>, <span class="string">&quot;CEO&quot;</span>, <span class="number">70000</span>);</span><br><span class="line"></span><br><span class="line">        Employee headSales = <span class="keyword">new</span> Employee(<span class="number">20000</span>, <span class="string">&quot;Robert&quot;</span>, <span class="string">&quot;Head Sales&quot;</span>, <span class="number">20000</span>);</span><br><span class="line">        Employee headMarketing = <span class="keyword">new</span> Employee(<span class="number">30000</span>, <span class="string">&quot;Michel&quot;</span>, <span class="string">&quot;Head Marketing&quot;</span>, <span class="number">20000</span>);</span><br><span class="line"></span><br><span class="line">        Employee salesExecutive1 = <span class="keyword">new</span> Employee(<span class="number">20001</span>, <span class="string">&quot;Richard&quot;</span>, <span class="string">&quot;Sales&quot;</span>, <span class="number">10000</span>);</span><br><span class="line">        Employee salesExecutive2 = <span class="keyword">new</span> Employee(<span class="number">20002</span>, <span class="string">&quot;Rob&quot;</span>, <span class="string">&quot;Sales&quot;</span>, <span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">        Employee clerk1 = <span class="keyword">new</span> Employee(<span class="number">30001</span>, <span class="string">&quot;Laura&quot;</span>, <span class="string">&quot;Marketing&quot;</span>, <span class="number">10000</span>);</span><br><span class="line">        Employee clerk2 = <span class="keyword">new</span> Employee(<span class="number">30002</span>, <span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;Marketing&quot;</span>, <span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">        ceo.add(headSales);</span><br><span class="line">        ceo.add(headMarketing);</span><br><span class="line"></span><br><span class="line">        headSales.add(salesExecutive1);</span><br><span class="line">        headSales.add(salesExecutive2);</span><br><span class="line"></span><br><span class="line">        headMarketing.add(clerk1);</span><br><span class="line">        headMarketing.add(clerk2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;ceo = &quot;</span> + ceo);</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// print ceo immediate subordinate</span></span><br><span class="line">        ceo.getSubordinateList().forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// print ceo immediate subordinate&#x27;s immediate subordinate</span></span><br><span class="line">        ceo.getSubordinateList().stream()</span><br><span class="line">                .flatMap(ceoSubordinate -&gt; ceoSubordinate.getSubordinateList().stream())</span><br><span class="line">                .forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ceo = Employee&#123;id=10000, name=&#x27;Adam&#x27;, dept=&#x27;CEO&#x27;, salary=70000&#125;</span><br><span class="line"></span><br><span class="line">Employee&#123;id=20000, name=&#x27;Robert&#x27;, dept=&#x27;Head Sales&#x27;, salary=20000&#125;</span><br><span class="line">Employee&#123;id=30000, name=&#x27;Michel&#x27;, dept=&#x27;Head Marketing&#x27;, salary=20000&#125;</span><br><span class="line"></span><br><span class="line">Employee&#123;id=20001, name=&#x27;Richard&#x27;, dept=&#x27;Sales&#x27;, salary=10000&#125;</span><br><span class="line">Employee&#123;id=20002, name=&#x27;Rob&#x27;, dept=&#x27;Sales&#x27;, salary=10000&#125;</span><br><span class="line">Employee&#123;id=30001, name=&#x27;Laura&#x27;, dept=&#x27;Marketing&#x27;, salary=10000&#125;</span><br><span class="line">Employee&#123;id=30002, name=&#x27;Bob&#x27;, dept=&#x27;Marketing&#x27;, salary=10000&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Decorator Pattern in Design Pattern</title>
    <url>/design-pattern-decorator.html</url>
    <content><![CDATA[<h1 id="装饰器模式"><a href="#装饰器模式" class="headerlink" title="装饰器模式"></a>装饰器模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。</p>
<p>这种类型的设计模式属于结构型模式，它是作为现有的类的一个包装。</p>
<p>这种模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提下，提供了额外的功能。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>一般的，我们为了扩展一个类经常使用继承方式实现，由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>在不想增加很多子类的情况下扩展类。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>给画，添加上画框</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>装饰类和被装饰类可以独立发展，不会相互耦合，装饰模式是继承的一个替代模式，装饰模式可以动态扩展一个实现类的功能。</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/decorator-pattern.png" alt="Decorator Pattern"></p>
<h3 id="Shape"><a href="#Shape" class="headerlink" title="Shape"></a>Shape</h3><h4 id="Shape-Interface"><a href="#Shape-Interface" class="headerlink" title="Shape Interface"></a>Shape Interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.decorator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * to draw a geometric shape</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Circle"><a href="#Circle" class="headerlink" title="Circle"></a>Circle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.decorator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Circle.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Rectangle"><a href="#Rectangle" class="headerlink" title="Rectangle"></a>Rectangle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.decorator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Rectangle.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Decorator"><a href="#Decorator" class="headerlink" title="Decorator"></a>Decorator</h3><h4 id="AbstractShapeDecorator"><a href="#AbstractShapeDecorator" class="headerlink" title="AbstractShapeDecorator"></a>AbstractShapeDecorator</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.decorator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractShapeDecorator</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> Shape decoratedShape;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AbstractShapeDecorator</span><span class="params">(Shape decoratedShape)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.decoratedShape = decoratedShape;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        decoratedShape.draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="RedShapeDecorator"><a href="#RedShapeDecorator" class="headerlink" title="RedShapeDecorator"></a>RedShapeDecorator</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.decorator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedShapeDecorator</span> <span class="keyword">extends</span> <span class="title">AbstractShapeDecorator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RedShapeDecorator</span><span class="params">(Shape decoratedShape)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(decoratedShape);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.draw();</span><br><span class="line">        setRedBorder(decoratedShape);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setRedBorder</span><span class="params">(Shape decoratedShape)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;RedShapeDecorator.setRedBorder&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="VioletShapeDecorator"><a href="#VioletShapeDecorator" class="headerlink" title="VioletShapeDecorator"></a>VioletShapeDecorator</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.decorator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VioletShapeDecorator</span> <span class="keyword">extends</span> <span class="title">AbstractShapeDecorator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">VioletShapeDecorator</span><span class="params">(Shape decoratedShape)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(decoratedShape);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.draw();</span><br><span class="line">        setVioletBorder(decoratedShape);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVioletBorder</span><span class="params">(Shape decoratedShape)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VioletShapeDecorator.setVioletBorder&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.decorator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DecoratorPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Shape circle = <span class="keyword">new</span> Circle();</span><br><span class="line">        Shape redCircle = <span class="keyword">new</span> RedShapeDecorator(<span class="keyword">new</span> Circle());</span><br><span class="line">        Shape redRectangle = <span class="keyword">new</span> RedShapeDecorator(<span class="keyword">new</span> Rectangle());</span><br><span class="line">        Shape violetCircle = <span class="keyword">new</span> VioletShapeDecorator(<span class="keyword">new</span> Circle());</span><br><span class="line">        Shape violetRectangle = <span class="keyword">new</span> VioletShapeDecorator(<span class="keyword">new</span> Rectangle());</span><br><span class="line"><span class="comment">//        Shape redCircle = new RedShapeDecorator(Circle::new);</span></span><br><span class="line"><span class="comment">//        Shape redRectangle = new RedShapeDecorator(Rectangle::new);</span></span><br><span class="line"><span class="comment">//        Shape violetCircle = new VioletShapeDecorator(Circle::new);</span></span><br><span class="line"><span class="comment">//        Shape violetRectangle = new VioletShapeDecorator(Rectangle::new);</span></span><br><span class="line">        circle.draw();</span><br><span class="line">        redCircle.draw();</span><br><span class="line">        redRectangle.draw();</span><br><span class="line">        violetCircle.draw();</span><br><span class="line">        violetRectangle.draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Circle.draw</span><br><span class="line">Circle.draw</span><br><span class="line">RedShapeDecorator.setRedBorder</span><br><span class="line">Rectangle.draw</span><br><span class="line">RedShapeDecorator.setRedBorder</span><br><span class="line">Circle.draw</span><br><span class="line">VioletShapeDecorator.setVioletBorder</span><br><span class="line">Rectangle.draw</span><br><span class="line">VioletShapeDecorator.setVioletBorder</span><br></pre></td></tr></table></figure>

<p>如果执行注释的代码,即使用<code>::new</code>创建对象,则输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Circle.draw</span><br><span class="line">RedShapeDecorator.setRedBorder</span><br><span class="line">RedShapeDecorator.setRedBorder</span><br><span class="line">VioletShapeDecorator.setVioletBorder</span><br><span class="line">VioletShapeDecorator.setVioletBorder</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Factory Pattern in Design Pattern</title>
    <url>/design-pattern-factory.html</url>
    <content><![CDATA[<h1 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>工厂方法模式一种创建对象的模式，它被广泛应用在JDK中以及Spring和Struts框架中。</p>
<p>这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p>
<p>在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。</p>
<p>通过给工厂对象传递不同参数来实现获得不同的子类。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>主要解决接口选择的问题。</p>
<p>我们通过工厂来替我们选择，对于不知情的人，只要传入参数，工厂会自动为我们选择一个类。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>我们明确地计划不同条件下创建不同实例时。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>购买汽车，直接去工厂提货，而不需要知道汽车是怎么制造的</li>
<li>Hibernate 换数据库只需换方言和驱动就可以</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>一个调用者想创建一个对象，只要知道其名称就可以了</li>
<li>扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以</li>
<li>屏蔽产品的具体实现，调用者只关心产品的接口</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/factory-pattern.png" alt="Factory Pattern"></p>
<h3 id="Shape-and-Subclass"><a href="#Shape-and-Subclass" class="headerlink" title="Shape and Subclass"></a>Shape and Subclass</h3><h4 id="Shape-interface"><a href="#Shape-interface" class="headerlink" title="Shape interface"></a>Shape interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * draw a geometry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Circle"><a href="#Circle" class="headerlink" title="Circle"></a>Circle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Circle.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Rectangle"><a href="#Rectangle" class="headerlink" title="Rectangle"></a>Rectangle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Rectangle.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Square"><a href="#Square" class="headerlink" title="Square"></a>Square</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Square.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Factory"><a href="#Factory" class="headerlink" title="Factory"></a>Factory</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShapeFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Shape <span class="title">getShape</span><span class="params">(String shapeType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (shapeType == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (shapeType.equalsIgnoreCase(<span class="string">&quot;circle&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Circle();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType.equalsIgnoreCase(<span class="string">&quot;rectangle&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Rectangle();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType.equalsIgnoreCase(<span class="string">&quot;square&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Square();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ShapeCreator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * create Circle, Rectangle, Square</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CIRCLE(Circle::<span class="keyword">new</span>), RECTANGLE(Rectangle::<span class="keyword">new</span>), SQUARE(Square::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Supplier&lt;Shape&gt; shapeSupplier;</span><br><span class="line"></span><br><span class="line">    ShapeCreator(Supplier&lt;Shape&gt; shapeSupplier) &#123;</span><br><span class="line">        <span class="keyword">this</span>.shapeSupplier = shapeSupplier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Shape <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shapeSupplier.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Shape <span class="title">getShape</span><span class="params">(ShapeCreator creator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> creator.getInstance();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution 3"></a>Solution 3</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ShapeCreator2</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * create Circle, Rectangle, Square</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CIRCLE(<span class="keyword">new</span> Circle()), RECTANGLE(<span class="keyword">new</span> Rectangle()), SQUARE(<span class="keyword">new</span> Square());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Shape shape;</span><br><span class="line"></span><br><span class="line">    ShapeCreator2(Shape shape) &#123;</span><br><span class="line">        <span class="keyword">this</span>.shape = shape;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Shape <span class="title">getShape</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shape;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.factory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ShapeFactory factory = <span class="keyword">new</span> ShapeFactory();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Acquire Circle</span></span><br><span class="line">        Shape circle = factory.getShape(<span class="string">&quot;circle&quot;</span>);</span><br><span class="line">        circle.draw();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Acquire Rectangle</span></span><br><span class="line">        Shape rectangle = factory.getShape(<span class="string">&quot;rectangle&quot;</span>);</span><br><span class="line">        rectangle.draw();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Acquire Square</span></span><br><span class="line">        Shape square = factory.getShape(<span class="string">&quot;square&quot;</span>);</span><br><span class="line">        square.draw();</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        ShapeCreator.CIRCLE.getInstance().draw();</span><br><span class="line">        ShapeCreator.RECTANGLE.getInstance().draw();</span><br><span class="line">        ShapeCreator.SQUARE.getInstance().draw();</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        System.out.println(ShapeCreator.CIRCLE.getInstance());</span><br><span class="line">        System.out.println(ShapeCreator.CIRCLE.getInstance());</span><br><span class="line">        System.out.println(ShapeCreator.CIRCLE.getInstance());</span><br><span class="line">        <span class="comment">// Or this usage</span></span><br><span class="line">        System.out.println(ShapeCreator.getShape(ShapeCreator.CIRCLE));</span><br><span class="line">        System.out.println(ShapeCreator.getShape(ShapeCreator.CIRCLE));</span><br><span class="line">        System.out.println(ShapeCreator.getShape(ShapeCreator.CIRCLE));</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        System.out.println(ShapeCreator2.CIRCLE.getShape());</span><br><span class="line">        System.out.println(ShapeCreator2.CIRCLE.getShape());</span><br><span class="line">        System.out.println(ShapeCreator2.CIRCLE.getShape());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Circle.draw</span><br><span class="line">Rectangle.draw</span><br><span class="line">Square.draw</span><br><span class="line"></span><br><span class="line">Circle.draw</span><br><span class="line">Rectangle.draw</span><br><span class="line">Square.draw</span><br><span class="line"></span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@12f40c25</span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@3ada9e37</span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@5cbc508c</span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@3419866c</span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@63e31ee</span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@68fb2c38</span><br><span class="line"></span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@2eafffde</span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@2eafffde</span><br><span class="line">individual.cy.learn.pattern.creational.factory.Circle@2eafffde</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>ShapeCreator创建子对象,都是不同的</p>
<p>ShapeCreator2子对象都是同一个</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Interpreter Pattern in Design Pattern</title>
    <url>/design-pattern-interpreter.html</url>
    <content><![CDATA[<h1 id="解释器模式"><a href="#解释器模式" class="headerlink" title="解释器模式"></a>解释器模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>解释器模式（Interpreter Pattern）提供了评估语言的语法或表达式的方式，它属于行为型模式。</p>
<p>这种模式实现了一个表达式接口，该接口解释一个特定的上下文。</p>
<p>这种模式被用在 SQL 解析、符号处理引擎等。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>对于一些固定文法构建一个解释句子的解释器</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>如果一种特定类型的问题发生的频率足够高，那么可能就值得将该问题的各个实例表述为一个简单语言中的句子。</p>
<p>这样就可以构建一个解释器，该解释器通过解释这些句子来解决该问题。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>编译器</li>
<li>运算表达式计算</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>可扩展性比较好，灵活</li>
<li>增加了新的解释表达式的方式</li>
<li>易于实现简单文法</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/interpreter-pattern.png" alt="Interpreter Pattern"></p>
<h3 id="Expression"><a href="#Expression" class="headerlink" title="Expression"></a>Expression</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * interpret</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true or false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="TerminalExpression"><a href="#TerminalExpression" class="headerlink" title="TerminalExpression"></a>TerminalExpression</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TerminalExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TerminalExpression</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> context.contains(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="AndExpression"><a href="#AndExpression" class="headerlink" title="AndExpression"></a>AndExpression</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AndExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AndExpression</span><span class="params">(Expression exp1, Expression exp2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.exp1 = exp1;</span><br><span class="line">        <span class="keyword">this</span>.exp2 = exp2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> exp1.interpret(context) &amp;&amp; exp2.interpret(context);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="OrExpression"><a href="#OrExpression" class="headerlink" title="OrExpression"></a>OrExpression</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">OrExpression</span><span class="params">(Expression exp1, Expression exp2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.exp1 = exp1;</span><br><span class="line">        <span class="keyword">this</span>.exp2 = exp2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> exp1.interpret(context) || exp2.interpret(context);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterpreterPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// rule: Kushagra and Lokesh are both male.</span></span><br><span class="line">        Expression person1 = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Kushagra&quot;</span>);</span><br><span class="line">        Expression person2 = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Lokesh&quot;</span>);</span><br><span class="line">        Expression isSingle = <span class="keyword">new</span> OrExpression(person1, person2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// rule: Vikram is committed.</span></span><br><span class="line">        Expression vikram = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Vikram&quot;</span>);</span><br><span class="line">        Expression committed = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Committed&quot;</span>);</span><br><span class="line">        Expression isCommitted = <span class="keyword">new</span> AndExpression(vikram, committed);</span><br><span class="line"></span><br><span class="line">        System.out.println(isSingle.interpret(<span class="string">&quot;Kushagra&quot;</span>));</span><br><span class="line">        System.out.println(isSingle.interpret(<span class="string">&quot;Lokesh&quot;</span>));</span><br><span class="line">        System.out.println(isSingle.interpret(<span class="string">&quot;Achint&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(isCommitted.interpret(<span class="string">&quot;Committed, Vikram&quot;</span>));</span><br><span class="line">        System.out.println(isCommitted.interpret(<span class="string">&quot;Single, Vikram&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">true</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">true</span><br><span class="line">false</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Iterator Pattern in Design Pattern</title>
    <url>/design-pattern-iterator.html</url>
    <content><![CDATA[<h1 id="迭代器模式"><a href="#迭代器模式" class="headerlink" title="迭代器模式"></a>迭代器模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>迭代器模式（Iterator Pattern）是 Java 和 .Net 编程环境中非常常用的设计模式。</p>
<p>这种模式用于顺序访问集合对象的元素，不需要知道集合对象的底层表示。</p>
<p>迭代器模式属于行为型模式。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>不同的方式来遍历整个整合对象。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>遍历一个聚合对象。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>JAVA 中的 iterator</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>它支持以不同的方式遍历一个聚合对象</li>
<li>迭代器简化了聚合类</li>
<li>在同一个聚合上可以有多个遍历</li>
<li>在迭代器模式中，增加新的聚合类和迭代器类都很方便，无须修改原有代码</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/iterator-pattern.png" alt="Iterator Pattern"></p>
<h3 id="Iterator"><a href="#Iterator" class="headerlink" title="Iterator"></a>Iterator</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * has next()</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true or false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * next obj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> next Object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Object <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="StringArrayIterator"><a href="#StringArrayIterator" class="headerlink" title="StringArrayIterator"></a>StringArrayIterator</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringArrayIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] args;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> idx;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StringArrayIterator</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.args = args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> idx &lt; args.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(idx &lt; args.length)&#123;</span><br><span class="line">            <span class="keyword">return</span> args[idx++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Container"><a href="#Container" class="headerlink" title="Container"></a>Container</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Container</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get iterator</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Iterator</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Iterator <span class="title">getIterator</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="NameList"><a href="#NameList" class="headerlink" title="NameList"></a>NameList</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NameList</span> <span class="keyword">implements</span> <span class="title">Container</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] names = &#123;<span class="string">&quot;Robert&quot;</span>, <span class="string">&quot;John&quot;</span>, <span class="string">&quot;Julie&quot;</span>, <span class="string">&quot;Lora&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator <span class="title">getIterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> StringArrayIterator(names);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IteratorPatternDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        NameList nameList = <span class="keyword">new</span> NameList();</span><br><span class="line">        <span class="keyword">for</span> (Iterator iter = nameList.getIterator(); iter.hasNext(); ) &#123;</span><br><span class="line">            String name = (String) iter.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;name = &quot;</span> + name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name = Robert</span><br><span class="line">name = John</span><br><span class="line">name = Julie</span><br><span class="line">name = Lora</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Observer Pattern in Design Pattern</title>
    <url>/design-pattern-observer.html</url>
    <content><![CDATA[<h1 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>当对象间存在一对多关系时，则使用观察者模式（Observer Pattern）。</p>
<p>比如，当一个对象被修改时，则会自动通知依赖它的对象。</p>
<p>观察者模式属于行为型模式。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>一个对象状态改变给其他对象通知的问题，而且要考虑到易用和低耦合，保证高度的协作。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>一个对象（目标对象）的状态发生改变，所有的依赖对象（观察者对象）都将得到通知，进行广播通知。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>拍卖的时候，拍卖师观察最高标价，然后通知给其他竞价者竞价</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>观察者和被观察者是抽象耦合的</li>
<li>建立一套触发机制</li>
</ul>
<h2 id="实现一"><a href="#实现一" class="headerlink" title="实现一"></a>实现一</h2><p><img src="assets/observer-pattern1.png" alt="Observer Pattern"></p>
<h3 id="Observer"><a href="#Observer" class="headerlink" title="Observer"></a>Observer</h3><h4 id="Observer-Interface"><a href="#Observer-Interface" class="headerlink" title="Observer Interface"></a>Observer Interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer.sln2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * update</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(String event)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="People-Daily"><a href="#People-Daily" class="headerlink" title="People Daily"></a>People Daily</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer.sln2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PeopleDaily</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(String event)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Breaking news in People Daily! event = &quot;</span> + event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="New-York-Times"><a href="#New-York-Times" class="headerlink" title="New York Times"></a>New York Times</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer.sln2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewYorkTimes</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(String event)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Breaking news in New York Times! event = &quot;</span> + event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Subject"><a href="#Subject" class="headerlink" title="Subject"></a>Subject</h3><h4 id="Subject-Interface"><a href="#Subject-Interface" class="headerlink" title="Subject Interface"></a>Subject Interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer.sln2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * register</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer observer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerObserver</span><span class="params">(Observer observer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * unregister</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer observer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unregisterObserver</span><span class="params">(Observer observer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * notify all observers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notifyObservers</span><span class="params">(String event)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Feed"><a href="#Feed" class="headerlink" title="Feed"></a>Feed</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer.sln2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Feed</span> <span class="keyword">implements</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Observer&gt; observers = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerObserver</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        observers.add(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregisterObserver</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        observers.remove(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObservers</span><span class="params">(String event)</span> </span>&#123;</span><br><span class="line">        observers.forEach(o -&gt; o.update(event));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer.sln2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Feed globalEvent = <span class="keyword">new</span> Feed();</span><br><span class="line"></span><br><span class="line">        Observer newYorkTimes = <span class="keyword">new</span> NewYorkTimes();</span><br><span class="line">        Observer peopleDaily = <span class="keyword">new</span> PeopleDaily();</span><br><span class="line"></span><br><span class="line">        globalEvent.registerObserver(newYorkTimes);</span><br><span class="line">        globalEvent.registerObserver(peopleDaily);</span><br><span class="line"></span><br><span class="line">        globalEvent.notifyObservers(<span class="string">&quot;Violent Parade in USA&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Unregister New York Times!&quot;</span>);</span><br><span class="line">        globalEvent.unregisterObserver(newYorkTimes);</span><br><span class="line">        globalEvent.notifyObservers(<span class="string">&quot;Violent Parade in Canada&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Breaking news in New York Times! event = Violent Parade in USA</span><br><span class="line">Breaking news in People Daily! event = Violent Parade in USA</span><br><span class="line">Unregister New York Times!</span><br><span class="line">Breaking news in People Daily! event = Violent Parade in Canada</span><br></pre></td></tr></table></figure>

<h2 id="实现二"><a href="#实现二" class="headerlink" title="实现二"></a>实现二</h2><p><img src="assets/observer-pattern2.png" alt="Observer Pattern"></p>
<h3 id="Observer-1"><a href="#Observer-1" class="headerlink" title="Observer"></a>Observer</h3><h4 id="Abstract-Observer"><a href="#Abstract-Observer" class="headerlink" title="Abstract Observer"></a>Abstract Observer</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractObserver</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> Subject subject;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * update</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="Binary-Observer"><a href="#Binary-Observer" class="headerlink" title="Binary Observer"></a>Binary Observer</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinaryObserver</span> <span class="keyword">extends</span> <span class="title">AbstractObserver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BinaryObserver</span><span class="params">(Subject subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subject = subject;</span><br><span class="line">        <span class="keyword">this</span>.subject.attach(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;BinaryObserver.update: &quot;</span> + Integer.toBinaryString(subject.getState()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Octal-Observer"><a href="#Octal-Observer" class="headerlink" title="Octal Observer"></a>Octal Observer</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OctalObserver</span> <span class="keyword">extends</span> <span class="title">AbstractObserver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">OctalObserver</span><span class="params">(Subject subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subject = subject;</span><br><span class="line">        <span class="keyword">this</span>.subject.attach(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OctalObserver.update: &quot;</span> + Integer.toOctalString(subject.getState()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Hex-Observer"><a href="#Hex-Observer" class="headerlink" title="Hex Observer"></a>Hex Observer</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HexObserver</span> <span class="keyword">extends</span> <span class="title">AbstractObserver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HexObserver</span><span class="params">(Subject subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subject = subject;</span><br><span class="line">        <span class="keyword">this</span>.subject.attach(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HexObserver.update: &quot;</span> + Integer.toHexString(subject.getState()).toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Subject-1"><a href="#Subject-1" class="headerlink" title="Subject"></a>Subject</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;AbstractObserver&gt; observerList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> state;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> state;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setState</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">        notifyAllObservers();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attach</span><span class="params">(AbstractObserver observer)</span> </span>&#123;</span><br><span class="line">        observerList.add(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyAllObservers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        observerList.forEach(AbstractObserver::update);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester-1"><a href="#Tester-1" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.observer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ObserverPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Subject subject = <span class="keyword">new</span> Subject();</span><br><span class="line">        <span class="keyword">new</span> HexObserver(subject);</span><br><span class="line">        <span class="keyword">new</span> OctalObserver(subject);</span><br><span class="line">        <span class="keyword">new</span> BinaryObserver(subject);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;First state change: 15&quot;</span>);</span><br><span class="line">        subject.setState(<span class="number">15</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;========================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Second state change: 10&quot;</span>);</span><br><span class="line">        subject.setState(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">First state change: 15</span><br><span class="line">HexObserver.update: F</span><br><span class="line">OctalObserver.update: 17</span><br><span class="line">BinaryObserver.update: 1111</span><br><span class="line">========================</span><br><span class="line">Second state change: 10</span><br><span class="line">HexObserver.update: A</span><br><span class="line">OctalObserver.update: 12</span><br><span class="line">BinaryObserver.update: 1010</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Prototype Pattern in Design Pattern</title>
    <url>/design-pattern-prototype.html</url>
    <content><![CDATA[<h1 id="原型模式"><a href="#原型模式" class="headerlink" title="原型模式"></a>原型模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。</p>
<p>这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p>
<p>这种模式是实现了一个原型接口，该接口用于创建当前对象的克隆。</p>
<p>当直接创建对象的代价比较大时，则采用这种模式。</p>
<p>例如，一个对象需要在一个高代价的数据库操作之后被创建。</p>
<p>我们可以缓存该对象，在下一个请求时返回它的克隆，在需要的时候更新数据库，以此来减少数据库调用。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>在运行期建立和删除原型。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><ul>
<li>当一个系统应该独立于它的产品创建，构成和表示时</li>
<li>当要实例化的类是在运行时刻指定时，例如，通过动态装载</li>
<li>为了避免创建一个与产品类层次平行的工厂类层次时</li>
<li>当一个类的实例只能有几个不同状态组合中的一种时。建立相应数目的原型并克隆它们可能比每次用合适的状态手工实例化该类更方便一些。</li>
</ul>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>细胞分裂</li>
<li>JAVA 中的 Object clone() 方法</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>性能提高</li>
<li>逃避构造函数的约束</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/prototype-pattern.png" alt="Prototype Pattern"></p>
<h3 id="BaseShape"><a href="#BaseShape" class="headerlink" title="BaseShape"></a>BaseShape</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.prototype;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseShape</span> <span class="keyword">implements</span> <span class="title">Cloneable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">protected</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * to draw a geometric</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BaseShape <span class="title">clone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        BaseShape clone = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            clone = (BaseShape) <span class="keyword">super</span>.clone();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CloneNotSupportedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> clone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Circle"><a href="#Circle" class="headerlink" title="Circle"></a>Circle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.prototype;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">extends</span> <span class="title">BaseShape</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        type = <span class="string">&quot;Circle&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Circle.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Square"><a href="#Square" class="headerlink" title="Square"></a>Square</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.prototype;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">extends</span> <span class="title">BaseShape</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Square</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        type = <span class="string">&quot;Square&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Square.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Rectangle"><a href="#Rectangle" class="headerlink" title="Rectangle"></a>Rectangle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.prototype;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">extends</span> <span class="title">BaseShape</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        type = <span class="string">&quot;Rectangle&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Rectangle.draw&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ShapeCache"><a href="#ShapeCache" class="headerlink" title="ShapeCache"></a>ShapeCache</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.prototype;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShapeCache</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Hashtable&lt;String, BaseShape&gt; SHAPE_MAP = <span class="keyword">new</span> Hashtable&lt;String, BaseShape&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BaseShape <span class="title">getShape</span><span class="params">(String shapeId)</span> </span>&#123;</span><br><span class="line">        BaseShape cachedShape = SHAPE_MAP.get(shapeId);</span><br><span class="line">        <span class="keyword">return</span> cachedShape.clone();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadCache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Circle circle = <span class="keyword">new</span> Circle();</span><br><span class="line">        circle.setId(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        SHAPE_MAP.put(circle.getId(), circle);</span><br><span class="line"></span><br><span class="line">        Square square = <span class="keyword">new</span> Square();</span><br><span class="line">        square.setId(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        SHAPE_MAP.put(square.getId(), square);</span><br><span class="line"></span><br><span class="line">        Rectangle rectangle = <span class="keyword">new</span> Rectangle();</span><br><span class="line">        rectangle.setId(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">        SHAPE_MAP.put(rectangle.getId(), rectangle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.creational.prototype;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrototypePatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ShapeCache.loadCache();</span><br><span class="line"></span><br><span class="line">        BaseShape cachedShape1 = ShapeCache.getShape(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;cachedShape1.getType() = &quot;</span> + cachedShape1.getType());</span><br><span class="line"></span><br><span class="line">        BaseShape cachedShape2 = ShapeCache.getShape(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;cachedShape2.getType() = &quot;</span> + cachedShape2.getType());</span><br><span class="line"></span><br><span class="line">        BaseShape cachedShape3 = ShapeCache.getShape(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;cachedShape3.getType() = &quot;</span> + cachedShape3.getType());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cachedShape1.getType() = Circle</span><br><span class="line">cachedShape2.getType() = Square</span><br><span class="line">cachedShape3.getType() = Rectangle</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Proxy Pattern in Design Pattern</title>
    <url>/design-pattern-proxy.html</url>
    <content><![CDATA[<h1 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>代理模式(Design Pattern)，就是给一个对象提供一个代理，并由代理对象控制对原对象的引用。</p>
<p>它使得客户不能直接与真正的目标对象通信。</p>
<p>代理对象是目标对象的代表，其他需要与这个目标对象打交道的操作都是和这个代理对象在交涉。</p>
<p>代理对象可以在客户端和目标对象之间起到中介的作用，这样起到了的作用和保护了目标对象的，同时也在一定程度上面减少了系统的耦合度。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>在直接访问对象时带来的问题。</p>
<p>比如说：要访问的对象在远程的机器上。</p>
<p>在面向对象系统中，有些对象由于某些原因（比如对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的访问），直接访问会给使用者或者系统结构带来很多麻烦，我们可以在访问此对象时加上一个对此对象的访问层。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>想在访问一个类时， 进行一些控制</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>  买火车票，不一定要去火车站，也可以去代售点</li>
<li>  Spring AOP</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>职责清晰</li>
<li>高扩展性</li>
<li>智能化</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/proxy-pattern.png" alt="Proxy Pattern"></p>
<h3 id="Designer-Interface"><a href="#Designer-Interface" class="headerlink" title="Designer Interface"></a>Designer Interface</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IDesigner</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * some demands needed to be implemented</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> demandName demand name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">implementsDemand</span><span class="params">(String demandName)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Java-Designer"><a href="#Java-Designer" class="headerlink" title="Java Designer"></a>Java Designer</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaDesigner</span> <span class="keyword">implements</span> <span class="title">IDesigner</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JavaDesigner</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">implementsDemand</span><span class="params">(String demandName)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A Java Designer [ &quot;</span> + name + <span class="string">&quot; ] implemented demand: &#123;&#123; &quot;</span> + demandName + <span class="string">&quot; &#125;&#125; in JAVA!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DesignerProxy</span> <span class="keyword">implements</span> <span class="title">IDesigner</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IDesigner programmer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DesignerProxy</span><span class="params">(IDesigner programmer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.programmer = programmer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">implementsDemand</span><span class="params">(String demandName)</span> </span>&#123;</span><br><span class="line">        programmer.implementsDemand(demandName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        IDesigner designer = <span class="keyword">new</span> JavaDesigner(<span class="string">&quot;cc&quot;</span>);</span><br><span class="line">        IDesigner proxy = <span class="keyword">new</span> DesignerProxy(designer);</span><br><span class="line">        proxy.implementsDemand(<span class="string">&quot;Add User Management&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DesignerDynamicProxy</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IDesigner designer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DesignerDynamicProxy</span><span class="params">(IDesigner designer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.designer = designer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> method.invoke(designer, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 被代理的真实对象</span></span><br><span class="line">        IDesigner designer = <span class="keyword">new</span> JavaDesigner(<span class="string">&quot;cc&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建中介类实例</span></span><br><span class="line">        InvocationHandler handler = <span class="keyword">new</span> DesignerDynamicProxy(designer);</span><br><span class="line">        <span class="comment">// 动态产生一个代理类</span></span><br><span class="line">        IDesigner proxy = (IDesigner) Proxy.newProxyInstance(</span><br><span class="line">                designer.getClass().getClassLoader(),</span><br><span class="line">                designer.getClass().getInterfaces(),</span><br><span class="line">                handler);</span><br><span class="line">        <span class="comment">// 通过代理类,执行doSomething()方法</span></span><br><span class="line">        proxy.implementsDemand(<span class="string">&quot;Modify User Management&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>State Pattern in Design Pattern</title>
    <url>/design-pattern-state.html</url>
    <content><![CDATA[<h1 id="状态模式"><a href="#状态模式" class="headerlink" title="状态模式"></a>状态模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>在状态模式（State Pattern）中，类的行为是基于它的状态改变的。</p>
<p>这种类型的设计模式属于行为型模式。</p>
<p>在状态模式中，我们创建表示各种状态的对象和一个行为随着状态对象改变而改变的 context 对象。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>对象的行为依赖于它的状态（属性），并且可以根据它的状态改变而改变它的相关行为</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>代码中包含大量与对象状态有关的条件语句</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>购物订单的状态改变(未付款, 付款, 确认收货…)</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>封装了转换规则</li>
<li>枚举可能的状态，在枚举状态之前需要确定状态种类</li>
<li>将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，只需要改变对象状态即可改变对象的行为</li>
<li>允许状态转换逻辑与状态对象合成一体，而不是某一个巨大的条件语句块</li>
<li>可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/state-pattern.png" alt="State Pattern"></p>
<h3 id="Package-State"><a href="#Package-State" class="headerlink" title="Package State"></a>Package State</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * update package state</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ctx context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Acknowledged"><a href="#Acknowledged" class="headerlink" title="Acknowledged"></a>Acknowledged</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Acknowledged</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Acknowledged singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Acknowledged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Acknowledged <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Acknowledged.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Acknowledged();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is acknowledged !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(Shipped.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Shipped"><a href="#Shipped" class="headerlink" title="Shipped"></a>Shipped</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shipped</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Shipped singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Shipped</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Shipped <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Shipped.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Shipped();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is shipped !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(InTransition.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="In-Transition"><a href="#In-Transition" class="headerlink" title="In Transition"></a>In Transition</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InTransition</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> InTransition singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InTransition</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InTransition <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (InTransition.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> InTransition();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is in transition !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(OutForDelivery.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Out-of-Delivery"><a href="#Out-of-Delivery" class="headerlink" title="Out of Delivery"></a>Out of Delivery</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutForDelivery</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> OutForDelivery singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">OutForDelivery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> OutForDelivery <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (OutForDelivery.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> OutForDelivery();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is out of delivery !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(Delivered.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Delivered"><a href="#Delivered" class="headerlink" title="Delivered"></a>Delivered</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Delivered</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Delivered singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Delivered</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Delivered <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Delivered.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Delivered();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is delivered!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="DeliveryContext"><a href="#DeliveryContext" class="headerlink" title="DeliveryContext"></a>DeliveryContext</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeliveryContext</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> PackageState currentState;</span><br><span class="line">    <span class="keyword">private</span> String packageId;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DeliveryContext</span><span class="params">(PackageState currentState, String packageId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.currentState = currentState != <span class="keyword">null</span> ? currentState : Acknowledged.instance();</span><br><span class="line">        <span class="keyword">this</span>.packageId = packageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        currentState.updateState(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PackageState <span class="title">getCurrentState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> currentState;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCurrentState</span><span class="params">(PackageState currentState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.currentState = currentState;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPackageId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> packageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPackageId</span><span class="params">(String packageId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.packageId = packageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StatePatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        DeliveryContext ctx = <span class="keyword">new</span> DeliveryContext(<span class="keyword">null</span>, <span class="string">&quot;Test1&quot;</span>);</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Package is acknowledged !!</span><br><span class="line">Package is shipped !!</span><br><span class="line">Package is in transition !!</span><br><span class="line">Package is out of delivery !!</span><br><span class="line">Package is delivered !!</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Strategy Pattern in Design Pattern</title>
    <url>/design-pattern-strategy.html</url>
    <content><![CDATA[<h1 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>在策略模式（Strategy Pattern）中，一个类的行为或其算法可以在运行时更改。</p>
<p>这种类型的设计模式属于行为型模式。</p>
<p>在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的 context 对象。</p>
<p>策略对象改变 context 对象的执行算法。</p>
<h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>在有多种算法相似的情况下，使用 if…else 所带来的复杂和难以维护。</p>
<h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>一个系统有许多许多类，而区分它们的只是他们直接的行为。</p>
<h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul>
<li>诸葛亮的锦囊妙计，每一个锦囊就是一个策略</li>
<li>旅行的出游方式，选择骑自行车、坐汽车，每一种旅行方式都是一个策略</li>
<li>JAVA AWT 中的 LayoutManager</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>算法可以自由切换</li>
<li>避免使用多重条件判断</li>
<li>扩展性良好</li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果一个系统的策略多于四个，就需要考虑使用混合模式，解决策略类膨胀的问题。</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/strategy-pattern.png" alt="Strategy Pattern"></p>
<h3 id="Behavior"><a href="#Behavior" class="headerlink" title="Behavior"></a>Behavior</h3><h4 id="Jump-Interface"><a href="#Jump-Interface" class="headerlink" title="Jump Interface"></a>Jump Interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">JumpBehavior</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jump</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Short-Jump"><a href="#Short-Jump" class="headerlink" title="Short Jump"></a>Short Jump</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShortJump</span> <span class="keyword">implements</span> <span class="title">JumpBehavior</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ShortJump.jump&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Long-Jump"><a href="#Long-Jump" class="headerlink" title="Long Jump"></a>Long Jump</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongJump</span> <span class="keyword">implements</span> <span class="title">JumpBehavior</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;LongJump.jump&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Kick-Interface"><a href="#Kick-Interface" class="headerlink" title="Kick Interface"></a>Kick Interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">KickBehavior</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * kick</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">kick</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Lightning-Kick"><a href="#Lightning-Kick" class="headerlink" title="Lightning Kick"></a>Lightning Kick</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LightningKick</span> <span class="keyword">implements</span> <span class="title">KickBehavior</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">kick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;LightningKick.kick&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Tornado-Kick"><a href="#Tornado-Kick" class="headerlink" title="Tornado Kick"></a>Tornado Kick</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TornadoKick</span> <span class="keyword">implements</span> <span class="title">KickBehavior</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">kick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;TornadoKick.kick&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Fighter"><a href="#Fighter" class="headerlink" title="Fighter"></a>Fighter</h3><h4 id="Fighter-Interface"><a href="#Fighter-Interface" class="headerlink" title="Fighter Interface"></a>Fighter Interface</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseFighter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> KickBehavior kickBehavior;</span><br><span class="line">    <span class="keyword">protected</span> JumpBehavior jumpBehavior;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BaseFighter</span><span class="params">(KickBehavior kickBehavior, JumpBehavior jumpBehavior)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.kickBehavior = kickBehavior;</span><br><span class="line">        <span class="keyword">this</span>.jumpBehavior = jumpBehavior;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * display</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">punch</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;BaseFighter.punch&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">roll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;BaseFighter.roll&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">kick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// delegate to KickBehavior</span></span><br><span class="line">        kickBehavior.kick();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// delegate to JumpBehavior</span></span><br><span class="line">        jumpBehavior.jump();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKickBehavior</span><span class="params">(KickBehavior kickBehavior)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.kickBehavior = kickBehavior;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJumpBehavior</span><span class="params">(JumpBehavior jumpBehavior)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.jumpBehavior = jumpBehavior;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="YeWen-Fighter"><a href="#YeWen-Fighter" class="headerlink" title="YeWen Fighter"></a>YeWen Fighter</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">YeWenFighter</span> <span class="keyword">extends</span> <span class="title">BaseFighter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YeWenFighter</span><span class="params">(KickBehavior kickBehavior, JumpBehavior jumpBehavior)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(kickBehavior, jumpBehavior);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;YeWenFighter.display&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Ken-Fighter"><a href="#Ken-Fighter" class="headerlink" title="Ken Fighter"></a>Ken Fighter</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KenFighter</span> <span class="keyword">extends</span> <span class="title">BaseFighter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">KenFighter</span><span class="params">(KickBehavior kickBehavior, JumpBehavior jumpBehavior)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(kickBehavior, jumpBehavior);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;KenFighter.display&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.strategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StrategyPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// make some behaviors first</span></span><br><span class="line">        JumpBehavior shortJump = <span class="keyword">new</span> ShortJump();</span><br><span class="line">        JumpBehavior longJump = <span class="keyword">new</span> LongJump();</span><br><span class="line">        KickBehavior tornadoKick = <span class="keyword">new</span> TornadoKick();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make a fighter with desired behaviors</span></span><br><span class="line">        BaseFighter ken = <span class="keyword">new</span> KenFighter(tornadoKick, shortJump);</span><br><span class="line">        ken.display();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Test behaviors</span></span><br><span class="line">        ken.punch();</span><br><span class="line">        ken.roll();</span><br><span class="line">        ken.jump();</span><br><span class="line">        ken.kick();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// change behavior dynamically</span></span><br><span class="line">        ken.setJumpBehavior(longJump);</span><br><span class="line">        ken.jump();</span><br><span class="line"></span><br><span class="line">        ken.setKickBehavior(tornadoKick);</span><br><span class="line">        ken.kick();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Design Pattern in Java</title>
    <url>/design-pattern.html</url>
    <content><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p><a href="https://dzone.com/articles/design-patterns-for-beginners-with-java-examples">Design Pattern1</a></p>
<p><a href="https://www.tutorialspoint.com/design_pattern/index.htm">Design Pattern2</a></p>
<p><a href="https://www.javatpoint.com/design-patterns-in-java">Design Pattern3</a></p>
<p>A design patterns are well-proved solution for solving the specific problem/task.</p>
<p>By using the design patterns you can make your code more flexible, reusable and maintainable. It is the most important part because java internally follows design patterns.</p>
<p>To become a professional software developer, you must know at least some popular solutions (i.e. design patterns) to the coding problems.</p>
<h1 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h1><ul>
<li>They are reusable in multiple projects.</li>
<li>They provide the solutions that help to define the system architecture.</li>
<li>They capture the software engineering experiences.</li>
<li>They provide transparency to the design of an application.</li>
<li>They are well-proved and testified solutions since they have been built upon the knowledge and experience of expert software developers.</li>
<li>Design patterns don’t guarantee an absolute solution to a problem. They provide clarity to the system architecture and the possibility of building a better system.</li>
</ul>
<h1 id="Types-of-Design-Patterns"><a href="#Types-of-Design-Patterns" class="headerlink" title="Types of Design Patterns"></a>Types of Design Patterns</h1><ul>
<li>Creational Design Pattern<ul>
<li><a href="https://blog.caoyu.info/design-pattern-factory.html">Factory Pattern</a></li>
<li><a href="https://blog.caoyu.info/design-pattern-abstract-factory.html">Abstract Factory Pattern</a></li>
<li><a href="https://blog.caoyu.info/singleton.html">Singleton Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Prototype Pattern</a></li>
<li><a href="https://blog.caoyu.info/design-pattern-builder.html">Builder Pattern</a></li>
</ul>
</li>
<li>Structural Design Pattern<ul>
<li><a href="https://blog.caoyu.info/">Adapter Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Bridge Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Composite Pattern</a></li>
<li><a href="https://blog.caoyu.info/design-pattern-decorator.html">Decorator Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Facade Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Flyweight Pattern</a></li>
<li><a href="http://blog.caoyu.info/design-pattern-proxy.html">Proxy Pattern</a></li>
</ul>
</li>
<li>Behavioral Design Pattern<ul>
<li><a href="https://blog.caoyu.info/">Chain Of Responsibility Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Command Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Interpreter Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Iterator Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Mediator Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Memento Pattern</a></li>
<li><a href="https://blog.caoyu.info/design-pattern-observer.html">Observer Pattern</a></li>
<li><a href="https://blog.caoyu.info/">State Pattern</a></li>
<li><a href="https://blog.caoyu.info/design-pattern-strategy.html">Strategy Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Template Pattern</a></li>
<li><a href="https://blog.caoyu.info/">Visitor Pattern</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>general</tag>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Horizon Image Based on Mitaka</title>
    <url>/docker-horizon.html</url>
    <content><![CDATA[<h1 id="Horizon"><a href="#Horizon" class="headerlink" title="Horizon"></a>Horizon</h1><p><strong>All accounts’ password is <code>root</code>.</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create container and expose some ports</span></span><br><span class="line">docker container run -d --privileged --name ho \</span><br><span class="line">    -p 80:80 -p 5000:5000 -p 35357:35357 \</span><br><span class="line">    --add-host info:127.0.0.1 --add-host controller:127.0.0.1 \</span><br><span class="line">    purplemystic/mitaka_horizon init</span><br><span class="line"></span><br><span class="line"><span class="comment"># restart rabbitmq and apache2</span></span><br><span class="line"><span class="comment"># mysql and apache2 use domain: controller</span></span><br><span class="line"><span class="comment"># rabbitmq use domain: info(For more information: https://blog.caoyu.info/rabbitmq-lost-user-info.html)</span></span><br><span class="line">docker container <span class="built_in">exec</span> -it ho bash -c <span class="string">&quot;service mysql restart; service rabbitmq-server restart; service memcached restart; service apache2 restart&quot;</span></span><br><span class="line"></span><br><span class="line">docker container <span class="built_in">exec</span> -it ho bash</span><br><span class="line"><span class="comment"># login to ho, and source openrc</span></span><br><span class="line"><span class="built_in">source</span> ~/admin-openrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># access by browser</span></span><br><span class="line"><span class="comment"># configure your /etc/hosts</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;127.0.0.1 info controller&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"><span class="comment"># Finally, you can login by browser</span></span><br><span class="line">http://127.0.0.1/horizon</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>openstack</category>
      </categories>
      <tags>
        <tag>horizon</tag>
        <tag>dashboard</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s deeply understand how to run a container</title>
    <url>/docker-world.html</url>
    <content><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p><a href="https://www.docker.com/blog/introducing-docker-engine-18-09/">Referenced from here.</a></p>
<p><img src="assets/DockerEngineDiagram-1.png" alt="Introducing Docker Engine 18.09 - Docker Blog"></p>
<p><a href="https://mkdev.me/en/posts/the-tool-that-really-runs-your-containers-deep-dive-into-runc-and-oci-specifications">Referenced from here.</a></p>
<p><img src="assets/differ-container.png" alt="Differ Container"></p>
<p><a href="https://medium.com/@avijitsarkar123/docker-and-oci-runtimes-a9c23a5646d6">Referenced from here.</a></p>
<p><img src="assets/docker_oci.png" alt="Docker and OCI Runtimes."></p>
<h2 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h2><ul>
<li>dockerd</li>
<li>containerd</li>
<li>containerd-shim</li>
<li>runc</li>
</ul>
<h3 id="runc"><a href="#runc" class="headerlink" title="runc"></a>runc</h3><p><code>CLI tool</code> for spawning and running containers according to the <code>OCI specification</code>.</p>
<h3 id="containerd-shim"><a href="#containerd-shim" class="headerlink" title="containerd-shim"></a>containerd-shim</h3><p>The shim allows for <code>daemonless</code> containers. It basically sits as the parent of the container’s process to facilitate a few things.</p>
<ul>
<li>First it allows the runtimes(i.e. <code>runc</code>) to exit after it starts the container. This way we don’t have to have the long running runtime processes for containers. When you start <code>mysql</code> you should only see the <code>mysql</code> process and the shim.</li>
<li>Second it keeps the STDIO and other fds open for the container incase <code>containerd</code> and/or docker both die. If the shim was not running then the parent side of the pipes or the TTY master would be closed and the container would exit.</li>
<li>Finally it allows the container’s exit status to be reported back to a higher level tool like docker without having the be the actual parent of the container’s process and do a <code>wait4</code>.</li>
</ul>
<h3 id="containerd"><a href="#containerd" class="headerlink" title="containerd"></a>containerd</h3><p><strong>containerd</strong> was introduced in Docker 1.11 and since then took main responsibility of managing containers life-cycle. <code>containerd</code> is the <em>executor for containers</em>, but has a wider scope than <em>just executing</em> containers. So it also take care of:</p>
<ul>
<li>Image push and pull</li>
<li>Managing of storage</li>
<li>Of course executing of Containers by calling <strong>runc</strong> with the right parameters to run containers…</li>
<li>Managing of network primitives for interfaces</li>
<li>Management of network namespaces containers to join existing namespaces</li>
</ul>
<h3 id="dockerd"><a href="#dockerd" class="headerlink" title="dockerd"></a>dockerd</h3><p>The Docker daemon - <strong>dockerd</strong> listens for Docker API requests and manages host’s Container life-cycles by utilizing <strong>containerd</strong>.</p>
<p><code>dockerd</code> can listen for Docker Engine API requests via three different types of Socket: <code>unix</code>, <code>tcp</code>, and <code>fd</code>.</p>
<p>By default, a <code>unix</code> domain socket is created at <code>/var/run/docker.sock</code>, requiring either root permission, or docker group membership.</p>
<p>On <a href="http://alexander.holbreich.org/tag/systemd/">Systemd</a> based systems, you can communicate with the daemon via <code>Systemd</code> socket activation, use <code>dockerd -H fd://</code>.</p>
<h2 id="Workflow-among-the-above-components"><a href="#Workflow-among-the-above-components" class="headerlink" title="Workflow among the above components"></a>Workflow among the above components</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">❯ docker --version</span><br><span class="line">Docker version 20.10.5, build 55c4c88</span><br><span class="line"></span><br><span class="line">❯ sudo docker container ls</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED       STATUS       PORTS     NAMES</span><br><span class="line">05ebb62bc655   nginx     <span class="string">&quot;/docker-entrypoint.…&quot;</span>   13 days ago   Up 13 days   80/tcp    nginx2</span><br><span class="line">7f3fa77ddad8   nginx     <span class="string">&quot;/docker-entrypoint.…&quot;</span>   13 days ago   Up 13 days   80/tcp    nginx1</span><br><span class="line"></span><br><span class="line">❯ ps -ef --forest | grep -v <span class="string">&quot; --color=auto&quot;</span> | grep -A3 -E <span class="string">&quot;dockerd|containerd&quot;</span></span><br><span class="line">root         714       1  0 Mar17 ?        00:17:12 /usr/bin/containerd</span><br><span class="line">root        1931       1  0 Mar17 ?        00:02:53 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">root        2139       1  0 Mar17 ?        00:01:04 /usr/bin/containerd-shim-runc-v2 -namespace moby -id 7f3fa77ddad85e82619b21d6fd9bde8c6fa7cce9e1c063b4f18f258c1206b1e4 -address /run/containerd/containerd.sock</span><br><span class="line">root        2163    2139  0 Mar17 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">systemd+    2217    2163  0 Mar17 ?        00:00:00      \_ nginx: worker process</span><br><span class="line">root        2240       1  0 Mar17 ?        00:01:05 /usr/bin/containerd-shim-runc-v2 -namespace moby -id 05ebb62bc6557c76f9d4494bbd2262e9fa7f91c3a0bad14677455a158e949f75 -address /run/containerd/containerd.sock</span><br><span class="line">root        2261    2240  0 Mar17 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">systemd+    2319    2261  0 Mar17 ?        00:00:00      \_ nginx: worker process</span><br><span class="line"></span><br><span class="line">=================================</span><br><span class="line"></span><br><span class="line">❯ docker --version</span><br><span class="line">Docker version 19.03.15, build 99e3ed8919</span><br><span class="line"></span><br><span class="line">❯ docker container ls</span><br><span class="line">CONTAINER ID    IMAGE    COMMAND                  CREATED           STATUS           PORTS     NAMES</span><br><span class="line">cbb233ea0045    nginx    <span class="string">&quot;/docker-entrypoint.…&quot;</span>   11 minutes ago    Up 11 minutes    80/tcp    nginx2</span><br><span class="line">fa3468d6e89a    nginx    <span class="string">&quot;/docker-entrypoint.…&quot;</span>   11 minutes ago    Up 11 minutes    80/tcp    nginx1</span><br><span class="line"></span><br><span class="line">❯ ps -ef --forest | less</span><br><span class="line">root      184283       1  0 14:10 ?        00:00:00 /usr/bin/containerd</span><br><span class="line">root      184493  184283  0 14:11 ?        00:00:00  \_ containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/fa3468d6e89a7ddcbd67a7049b2fd1771555c445ba6e8795a4634cb4795ecdd6 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc</span><br><span class="line">root      184509  184493  0 14:11 ?        00:00:00  |   \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       184564  184509  0 14:11 ?        00:00:00  |       \_ nginx: worker process</span><br><span class="line">root      184595  184283  0 14:11 ?        00:00:00  \_ containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/cbb233ea004589877970ee3b4bcd08672370c159720617c29c31b943e4a5be3c -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc</span><br><span class="line">root      184611  184595  0 14:11 ?        00:00:00      \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       184663  184611  0 14:11 ?        00:00:00          \_ nginx: worker process</span><br><span class="line">root      184291       1  0 14:10 ?        00:00:01 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line"></span><br><span class="line">=================================</span><br><span class="line"></span><br><span class="line">❯ podman version</span><br><span class="line">Version:      2.2.1</span><br><span class="line">API Version:  2</span><br><span class="line">Go Version:   go1.14.12</span><br><span class="line">Built:        Mon Feb 22 12:51:35 2021</span><br><span class="line">OS/Arch:      linux/amd64</span><br><span class="line"></span><br><span class="line">❯ podman container ls</span><br><span class="line">CONTAINER ID  IMAGE                           COMMAND               CREATED        STATUS            PORTS   NAMES</span><br><span class="line">2fed78dd707e  docker.io/library/nginx:latest  nginx -g daemon o...  2 minutes ago  Up 2 minutes ago          nginx2</span><br><span class="line">75103237f3d5  docker.io/library/nginx:latest  nginx -g daemon o...  2 minutes ago  Up 2 minutes ago          nginx1</span><br><span class="line"></span><br><span class="line">❯ runc list</span><br><span class="line">ID                                                                 PID         STATUS      BUNDLE                                                                                                                     CREATED                          OWNER</span><br><span class="line">2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9   188922      running     /var/lib/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9/userdata   2021-03-31T06:36:31.164181537Z   root</span><br><span class="line">75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832   188806      running     /var/lib/containers/storage/overlay-containers/75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832/userdata   2021-03-31T06:36:25.812499602Z   root</span><br><span class="line"></span><br><span class="line">❯ runc state 2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;ociVersion&quot;</span>: <span class="string">&quot;1.0.2-dev&quot;</span>,</span><br><span class="line">  <span class="string">&quot;id&quot;</span>: <span class="string">&quot;2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9&quot;</span>,</span><br><span class="line">  <span class="string">&quot;pid&quot;</span>: 188922,</span><br><span class="line">  <span class="string">&quot;status&quot;</span>: <span class="string">&quot;running&quot;</span>,</span><br><span class="line">  <span class="string">&quot;bundle&quot;</span>: <span class="string">&quot;/var/lib/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9/userdata&quot;</span>,</span><br><span class="line">  <span class="string">&quot;rootfs&quot;</span>: <span class="string">&quot;/var/lib/containers/storage/overlay/9fde6f2ab9dee9701adce3862803afe893c009269e74c0c77e18c4454c9184d1/merged&quot;</span>,</span><br><span class="line">  <span class="string">&quot;created&quot;</span>: <span class="string">&quot;2021-03-31T06:36:31.164181537Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;annotations&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;io.container.manager&quot;</span>: <span class="string">&quot;libpod&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.kubernetes.cri-o.Created&quot;</span>: <span class="string">&quot;2021-03-31T14:36:30.807867268+08:00&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.kubernetes.cri-o.TTY&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.autoremove&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.init&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.privileged&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.publish-all&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;org.opencontainers.image.stopSignal&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;<span class="comment"># </span></span><br><span class="line"></span><br><span class="line">❯ ps -ef --forest</span><br><span class="line">root      188797       1  0 14:36 ?        00:00:00 /usr/bin/conmon --api-version 1 -c 75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832 -u 75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832 -r /usr/bin/runc -b /var/lib/containers/storage/overlay-containers/75103237f3d5f8d78f1d34cd32747c08/run/containers/storage/overlay-containers/75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832/userdata/conmon.pid --exit-command /usr/bin/podman --exit-command-arg --root --exit-command-arg /var/lib/containers/storage --exit-command-arg --runroot --exit-command-arg /var/run/containers/storage --exit-comm</span><br><span class="line">root      188806  188797  0 14:36 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       188842  188806  0 14:36 ?        00:00:00      \_ nginx: worker process</span><br><span class="line">root      188913       1  0 14:36 ?        00:00:00 /usr/bin/conmon --api-version 1 -c 2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9 -u 2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9 -r /usr/bin/runc -b /var/lib/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee78/run/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9/userdata/conmon.pid --exit-command /usr/bin/podman --exit-command-arg --root --exit-command-arg /var/lib/containers/storage --exit-command-arg --runroot --exit-command-arg /var/run/containers/storage --exit-comm</span><br><span class="line">root      188922  188913  0 14:36 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       188955  188922  0 14:36 ?        00:00:00      \_ nginx: worker process</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>container</tag>
      </tags>
  </entry>
  <entry>
    <title>equals() and hashCode() in Java</title>
    <url>/equals-hash-code.html</url>
    <content><![CDATA[<h1 id="equals"><a href="#equals" class="headerlink" title="equals()"></a>equals()</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// defined in Object class</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (<span class="keyword">this</span> == obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>equals()的Override, 应该遵循以下原则:</p>
<ul>
<li><p>  自反性：<strong>x.equals(x)</strong> return <code>true</code></p>
</li>
<li><p>  对称性：<strong>y.equals(x)</strong> return <code>true</code> &lt;=&gt; <strong>x.equals(y)</strong> return <code>true</code></p>
</li>
<li><p>  传递性：<strong>x.equals(y)</strong> return <code>true</code>, <strong>y.equals(z)</strong> return <code>true</code> =&gt; <strong>x.equals(z)</strong> return <code>true</code></p>
</li>
<li><p>  一致性：无论对**x.equals(y)**调用多少次,结果都应该一致; 除非equals()中使用到的属性被更改了</p>
</li>
<li><p>  非空性：任何非空的引用值X，x.equals(null)的返回值一定为false</p>
</li>
</ul>
<h1 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode()"></a>hashCode()</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// defined in Object class</span></span><br><span class="line"><span class="meta">@HotSpotIntrinsicCandidate</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>  在某个Java程序的<code>一次执行过程</code>中, 只要<code>equals()使用的属性</code>没有被改变, 那么<code>同一个对象</code>无论调用多少次hashCode(), 其返回的值都<code>必须一致</code></li>
<li>  在同一个Java程序的<code>多次执行过程</code>中, 一个对象的hashCode()返回值,<code>不必保持相同</code></li>
</ul>
<h1 id="Override-Rule"><a href="#Override-Rule" class="headerlink" title="Override Rule"></a>Override Rule</h1><blockquote>
<p>  为什么重写equals()的时候,必须重写hashCode()?</p>
<ul>
<li>  Java的general contract规定, 相等的对象,必须具有相同的hash code</li>
<li>  Object对象默认实现的hashCode(), 是为每一个对象返回不同的值</li>
</ul>
</blockquote>
<p>equals()和hashCode()的Override, 应该遵循以下原则:</p>
<ul>
<li><p>  若<code>o1.equals(o2)</code>为true, 则<code>o1.hashCode() == o2.hashCode()</code>为true</p>
</li>
<li><p>  反之, 不成立</p>
</li>
<li><p>  equals不相等的两个对象, hashCode可能相等</p>
</li>
<li><p>  However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">o1.equals(o2) </span><br><span class="line">==&gt; </span><br><span class="line">o1.hashCode() == o2.hashCode()</span><br></pre></td></tr></table></figure>

<h1 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hashCode(id, name, email);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!(o <span class="keyword">instanceof</span> User)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        User user = (User) o;</span><br><span class="line">        <span class="keyword">return</span> id == user.id &amp;&amp;</span><br><span class="line">                Objects.equal(name, user.name) &amp;&amp;</span><br><span class="line">                Objects.equal(email, user.email);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Another-solution-hashCode"><a href="#Another-solution-hashCode" class="headerlink" title="Another solution: hashCode()"></a>Another solution: hashCode()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result = id;</span><br><span class="line">    result = <span class="number">31</span> * result + name.hashCode();</span><br><span class="line">    result = <span class="number">31</span> * result + email.hashCode();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Objects-hashCode"><a href="#Objects-hashCode" class="headerlink" title="Objects.hashCode()"></a>Objects.hashCode()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">(<span class="meta">@Nullable</span> Object <span class="meta">@Nullable</span> ... objects)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> Arrays.hashCode(objects);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Arrays-hashCode"><a href="#Arrays-hashCode" class="headerlink" title="Arrays.hashCode()"></a>Arrays.hashCode()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">(Object a[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Object element : a)</span><br><span class="line">        result = <span class="number">31</span> * result + (element == <span class="keyword">null</span> ? <span class="number">0</span> : element.hashCode());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Why-is-the-multiplier-31"><a href="#Why-is-the-multiplier-31" class="headerlink" title="Why is the multiplier 31?"></a>Why is the multiplier 31?</h1><ul>
<li>  <code>选择质数</code>, 减少哈希碰撞(Hash Collision)</li>
<li>  不选择<code>较小的质数</code>, e.g. 2; 因为冲突率依然很高</li>
<li>  不选择<code>较大的质数</code>, e.g. 101; 会产生溢出</li>
<li>  <code>31 * i</code> 可被jvm优化为<code>(i &lt;&lt; 5) - i</code></li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>hash</tag>
      </tags>
  </entry>
  <entry>
    <title>expand IPv6 by shell</title>
    <url>/expand-ipv6-by-shell.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">expand_ipv6</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input: ::</span></span><br><span class="line">    <span class="comment"># output: 0:0:0:0:0:0:0:0</span></span><br><span class="line">    <span class="comment"># input: 2001:2d:1f::1</span></span><br><span class="line">    <span class="comment"># output: 2001:2d:1f:0:0:0:0:1</span></span><br><span class="line">    <span class="built_in">local</span> ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> colon_num=$(<span class="built_in">echo</span> <span class="variable">$&#123;ipv6&#125;</span> | awk <span class="string">&#x27;&#123;print gsub(/:/, &quot;&quot;)&#125;&#x27;</span>)</span><br><span class="line">    <span class="built_in">local</span> replace_str=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt;= $(( <span class="number">7</span> - <span class="variable">$&#123;colon_num&#125;</span> )); ++ i )); <span class="keyword">do</span></span><br><span class="line">        replace_str=<span class="string">&quot;<span class="variable">$&#123;replace_str&#125;</span>:0&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    replace_str=<span class="string">&quot;<span class="variable">$&#123;replace_str&#125;</span>:&quot;</span></span><br><span class="line">    <span class="built_in">local</span> ipv6_expanded=<span class="variable">$&#123;ipv6/::/$replace_str&#125;</span></span><br><span class="line">    [[ <span class="variable">$&#123;ipv6_expanded&#125;</span> == *: ]] &amp;&amp; ipv6_expanded=<span class="string">&quot;<span class="variable">$&#123;ipv6_expanded&#125;</span>0&quot;</span></span><br><span class="line">    [[ <span class="variable">$&#123;ipv6_expanded&#125;</span> == :* ]] &amp;&amp; ipv6_expanded=<span class="string">&quot;0<span class="variable">$&#123;ipv6_expanded&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;ipv6_expanded&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">expand_expanded_ipv6</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input: 0:0:0:0:0:0:0:0</span></span><br><span class="line">    <span class="comment"># output: 0000:0000:0000:0000:0000:0000:0000:0000</span></span><br><span class="line">    <span class="comment"># input: 2001:2d:1f:0:0:0:0:1</span></span><br><span class="line">    <span class="comment"># output: 2001:002d:001f:0000:0000:0000:0000:0001</span></span><br><span class="line">    <span class="built_in">local</span> expanded_ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> hex_arr=(<span class="variable">$&#123;expanded_ipv6//:/ &#125;</span>)</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 8; ++ i )); <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">local</span> len=<span class="variable">$&#123;#hex_arr[i]&#125;</span></span><br><span class="line">        <span class="keyword">for</span> (( j = 4; j &gt; <span class="variable">$&#123;len&#125;</span>; -- j )); <span class="keyword">do</span></span><br><span class="line">            hex_arr[i]=<span class="string">&quot;0<span class="variable">$&#123;hex_arr[i]&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;hex_arr[@]&#125;</span> | tr <span class="string">&quot; &quot;</span> :</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">convert_ipv6_to_decimal_basing_8bit</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input(hexadecimal): 0000:0000:0000:0000:0000:0000:0000:0000</span></span><br><span class="line">    <span class="comment"># output(decimal): 00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00</span></span><br><span class="line">    <span class="comment"># input(hexadecimal): 2001:002d:001f:0000:0000:0000:0000:0001</span></span><br><span class="line">    <span class="comment"># output(decimal): 32.1.0.45.0.31.0.0.0.0.0.0.0.0.0.1</span></span><br><span class="line">    <span class="built_in">local</span> completed_ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> hex_arr=(<span class="variable">$&#123;completed_ipv6//:/ &#125;</span>)</span><br><span class="line">    <span class="built_in">local</span> hex_arr_split_by_8bit=()</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 8; ++ i )); <span class="keyword">do</span></span><br><span class="line">        hex_arr_split_by_8bit=( <span class="variable">$&#123;hex_arr_split_by_8bit[@]&#125;</span> <span class="variable">$&#123;hex_arr[i]:0:2&#125;</span> <span class="variable">$&#123;hex_arr[i]:2&#125;</span> )</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">local</span> dec_arr=()</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 16; ++ i )); <span class="keyword">do</span></span><br><span class="line">        dec_arr=( <span class="variable">$&#123;dec_arr[@]&#125;</span> $(<span class="built_in">echo</span> $(( <span class="number">16</span>#<span class="variable">$&#123;hex_arr_split_by_8bit[i]&#125;</span> ))) )</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;dec_arr[@]&#125;</span> | tr <span class="string">&quot; &quot;</span> .</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">convert_ipv6_to_decimal_basing_16bit</span></span>() &#123;</span><br><span class="line">    <span class="comment"># input(hexadecimal): 0:0:0:0:0:0:0:0</span></span><br><span class="line">    <span class="comment"># output(decimal): 0.0.0.0.0.0.0.0</span></span><br><span class="line">    <span class="comment"># input(hexadecimal): 2001:2d:1f:0:0:0:0:1</span></span><br><span class="line">    <span class="comment"># output(decimal): 8193.45.31.0.0.0.0.1</span></span><br><span class="line">    <span class="built_in">local</span> expanded_ipv6=<span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">local</span> hex_arr=(<span class="variable">$&#123;expanded_ipv6//:/ &#125;</span>)</span><br><span class="line">    <span class="built_in">local</span> dec_arr=()</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; 8; ++ i )); <span class="keyword">do</span></span><br><span class="line">        dec_arr=( <span class="variable">$&#123;dec_arr[@]&#125;</span> $(<span class="built_in">echo</span> $(( <span class="number">16</span>#<span class="variable">$&#123;hex_arr[i]&#125;</span> ))) )</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># return value</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;dec_arr[@]&#125;</span> | tr <span class="string">&quot; &quot;</span> .</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expand_ipv6 <span class="variable">$1</span></span><br><span class="line">expand_expanded_ipv6 $(expand_ipv6 <span class="variable">$1</span>)</span><br><span class="line">convert_ipv6_to_decimal_basing_8bit $(expand_expanded_ipv6 $(expand_ipv6 <span class="variable">$1</span>))</span><br><span class="line">convert_ipv6_to_decimal_basing_16bit $(expand_ipv6 <span class="variable">$1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>IPv6</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>some helpful git cmd &amp; alias</title>
    <url>/git-help.html</url>
    <content><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="command-git-cli"><a href="#command-git-cli" class="headerlink" title="command git cli"></a>command git cli</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># presume that your remote called origin</span></span><br><span class="line"><span class="comment"># Command for deleting remote branches with names containing PATTERN:</span></span><br><span class="line">git branch -r | awk -Forigin/ <span class="string">&#x27;/PATTERN/ &#123;print $2&#125;&#x27;</span> | xargs -I &#123;&#125; git push origin :&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># list all files in a commit</span></span><br><span class="line">git diff-tree --no-commit-id --name-status -r 6a730fff4b</span><br><span class="line"></span><br><span class="line"><span class="comment"># the dash shows that the order in reverse</span></span><br><span class="line">git tag --sort=-v:refname --format=<span class="string">&#x27;%(creatordate:short):  %(refname:short)&#x27;</span></span><br><span class="line">git tag --sort=-creatordate --format=<span class="string">&#x27;%(creatordate:short):  %(refname:short)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># switch branch</span></span><br><span class="line"><span class="comment"># if local branch is existed, switch it; or search the remote branch and switch it(if exists in the remote)</span></span><br><span class="line">git switch branch-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a branch based on the current branch</span></span><br><span class="line">git switch -c branch-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a branch based on the remote branch</span></span><br><span class="line"><span class="comment"># like as: git checkout -b branch-name remote-name</span></span><br><span class="line">git switch -c branch-name remote-name</span><br></pre></td></tr></table></figure>

<h2 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set the mordern editor fot git</span></span><br><span class="line">git config --global core.editor <span class="string">&quot;code -w&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use rebase action when pull</span></span><br><span class="line">git config --global pull.rebase <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pull the submodules recursively when pulling</span></span><br><span class="line">git config --global fetch.recursesubmodules <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">git config --global submodule.recurse <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># recurse the submodules by 4 threads</span></span><br><span class="line">git config --global submodule.fetchjobs 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># fetch the multiple submodules or remote</span></span><br><span class="line"><span class="comment"># the above config can override the parallel in the submodule case</span></span><br><span class="line">git config --global fetch.parallel 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># prune the untrack-branches</span></span><br><span class="line">git config --global fetch.prune <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list all tags in order, if with the dash, the order in reverse</span></span><br><span class="line">git config --global tag.sort v:refname</span><br><span class="line">git config --global tag.sort -v:refname</span><br><span class="line"></span><br><span class="line"><span class="comment"># list all alias ==&gt; git alias</span></span><br><span class="line">git config --global alias.alias <span class="string">&quot;! git config --get-regexp ^alias\. | sed -e s/^alias\.// -e s/\ /\ =\ /&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># show commit details ==&gt; git ld</span></span><br><span class="line"><span class="comment"># --oneline &lt;==&gt; --pretty=oneline --abbrev-commit</span></span><br><span class="line">git config --global alias.ld <span class="string">&quot;log --stat --graph --pretty=oneline --abbrev-commit&quot;</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">git config --global alias.ld <span class="string">&quot;log --stat --graph --oneline&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># perfect &quot;git log&quot; ==&gt; git lg</span></span><br><span class="line">git config --global alias.lg <span class="string">&quot;log --color --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git log with flow ==&gt; git lf</span></span><br><span class="line">git config --global alias.lf <span class="string">&quot;log --graph --pretty=format:&#x27;%C(red)%h%Creset %C(cyan)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit --date=short --all&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>All the above global config will be written in <code>~/.gitconfig</code>. Here is my config. FYI.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat ~/.gitconfig</span><br><span class="line">[core]</span><br><span class="line">        editor = code -w</span><br><span class="line">        symlinks = <span class="literal">true</span></span><br><span class="line">[pull]</span><br><span class="line">        rebase = <span class="literal">true</span></span><br><span class="line">[<span class="built_in">alias</span>]</span><br><span class="line">        ld = <span class="built_in">log</span> --<span class="built_in">stat</span> --graph --oneline</span><br><span class="line">        lg = <span class="built_in">log</span> --color --graph --pretty=format:<span class="string">&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27;</span> --abbrev-commit</span><br><span class="line">        lf = <span class="built_in">log</span> --graph --pretty=format:<span class="string">&#x27;%C(red)%h%Creset %C(cyan)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27;</span> --abbrev-commit --date=short --all</span><br><span class="line">[user]</span><br><span class="line">        name = your_name</span><br><span class="line">        email = your_email</span><br><span class="line">[fetch]</span><br><span class="line">        parallel = 4</span><br><span class="line">        prune = <span class="literal">true</span></span><br><span class="line">[tag]</span><br><span class="line">        sort = v:refname</span><br></pre></td></tr></table></figure>


<h2 id="git-customized-log"><a href="#git-customized-log" class="headerlink" title="git customized log"></a>git customized log</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Number of commits by author</span></span><br><span class="line">$ git shortlog -s --author <span class="string">&#x27;Author Name&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># List of authors and commits to a repository sorted alphabetically</span></span><br><span class="line">$ git shortlog -s -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># List of commit comments by author</span></span><br><span class="line"><span class="comment"># This also shows the total number of commits by the author</span></span><br><span class="line">$ git shortlog -n --author <span class="string">&#x27;Author Name&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list the first 5 committers who commit the most a year for current branch</span></span><br><span class="line"><span class="comment"># with email info</span></span><br><span class="line">git <span class="built_in">log</span> --since=<span class="string">&quot;1 year ago&quot;</span> | fgrep Author | sort | uniq -c | sort -n -r | sed -e <span class="string">&#x27;s,Author: ,,&#x27;</span> | head -n5</span><br><span class="line"><span class="comment"># without email info</span></span><br><span class="line">git <span class="built_in">log</span> --since=<span class="string">&quot;1 year ago&quot;</span> | fgrep Author | sed -e <span class="string">&#x27;s, &lt;.*&gt;,,&#x27;</span> | sort | uniq -c | sort -n -r | sed -e <span class="string">&#x27;s,Author: ,,&#x27;</span> | head -n5</span><br><span class="line"></span><br><span class="line"><span class="comment"># for master branch all time</span></span><br><span class="line">git <span class="built_in">log</span> master | fgrep Author | sed -e <span class="string">&#x27;s, &lt;.*&gt;,,&#x27;</span> | sort | uniq -c | sort -n -r | sed -e <span class="string">&#x27;s,Author: ,,&#x27;</span> | head -n5</span><br><span class="line"></span><br><span class="line"><span class="comment"># list of add lines, remove lines, total lines by author</span></span><br><span class="line">git <span class="built_in">log</span> --author=mystic --pretty=tformat: --numstat | gawk -v red=<span class="string">&#x27;\033[01;31m&#x27;</span> -v green=<span class="string">&#x27;\033[01;32m&#x27;</span> -v blue=<span class="string">&#x27;\033[01;34m&#x27;</span> <span class="string">&#x27;&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf green&quot;Added Lines: +++%s\n&quot;red&quot;Removed Lines: ---%s\n&quot; blue&quot;Total Lines: ===%s\n&quot;, add, subs, loc &#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="git-submodule"><a href="#git-submodule" class="headerlink" title="git submodule"></a>git submodule</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">main_repo_url=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># clone a repo including all its submodules</span></span><br><span class="line">git <span class="built_in">clone</span> --recurse-submodules <span class="string">&quot;<span class="variable">$&#123;main_repo_url&#125;</span>&quot;</span></span><br><span class="line">git <span class="built_in">clone</span> --recursive <span class="string">&quot;<span class="variable">$&#123;main_repo_url&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If you already have cloned a repository and now want to load it’s submodules you have to use submodule update.</span></span><br><span class="line">git submodule update --init</span><br><span class="line"><span class="comment"># if there are nested submodules:</span></span><br><span class="line">git submodule update --init --recursive</span><br><span class="line"></span><br><span class="line"><span class="comment"># download up to 8 submodules at once</span></span><br><span class="line">git submodule update --init --recursive --<span class="built_in">jobs</span> 8</span><br><span class="line">git <span class="built_in">clone</span> --recursive --<span class="built_in">jobs</span> 8 <span class="string">&quot;<span class="variable">$&#123;main_repo_url&#125;</span>&quot;</span></span><br><span class="line"><span class="comment"># short version</span></span><br><span class="line">git submodule update --init --recursive -j 8</span><br><span class="line"></span><br><span class="line"><span class="comment"># pull all changes in the repo including changes in the submodules</span></span><br><span class="line">git pull --recurse-submodules</span><br><span class="line"></span><br><span class="line"><span class="comment"># update all submodules</span></span><br><span class="line">git submodule update --remote</span><br><span class="line"></span><br><span class="line"><span class="comment"># operate for every submodule</span></span><br><span class="line">git submodule foreach <span class="string">&#x27;command&#x27;</span></span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line">git submodule foreach <span class="string">&#x27;git stash&#x27;</span></span><br><span class="line">git submodule foreach <span class="string">&#x27;git checkout -b new_branch&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create submodule</span></span><br><span class="line">git submodule add <span class="string">&quot;submodule_url&quot;</span></span><br><span class="line"><span class="comment"># init and generate .gitsubmodules</span></span><br><span class="line">git submodule init</span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ get all submodules ************</span></span><br><span class="line">git submodule status</span><br><span class="line">git submodule status --recursive</span><br><span class="line"><span class="comment"># by read .gitmodules</span></span><br><span class="line">git config --file .gitmodules --get-regexp path | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><p><a href="https://www.jianshu.com/p/0805b5d5d893">Git Log Usage</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h - %an, %ar : %s&quot;</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h %s&quot;</span> --graph</span><br><span class="line"><span class="comment"># if used the following, please configure alias at first</span></span><br><span class="line">git lg</span><br><span class="line">git lg -p</span><br><span class="line">git lf</span><br><span class="line">git ld</span><br></pre></td></tr></table></figure>

<h2 id="git-other"><a href="#git-other" class="headerlink" title="git other"></a>git other</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># delete the file from the git history</span></span><br><span class="line"><span class="comment"># https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/removing-sensitive-data-from-a-repository</span></span><br><span class="line"><span class="comment"># BTW, You need to run this command from the toplevel of the working tree.</span></span><br><span class="line">git filter-branch \</span><br><span class="line">	--force \</span><br><span class="line">	--index-filter \</span><br><span class="line">	<span class="string">&quot;git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA&quot;</span> \</span><br><span class="line">	--prune-empty \</span><br><span class="line">	--tag-name-filter \</span><br><span class="line">	cat -- \</span><br><span class="line">	--all</span><br><span class="line"><span class="comment"># then</span></span><br><span class="line">git push origin --force --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># count total commits</span></span><br><span class="line">git rev-list --all --count</span><br><span class="line"></span><br><span class="line"><span class="comment"># reset to the previous</span></span><br><span class="line">git reset --hard commit_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># merge multiple commit into one</span></span><br><span class="line"><span class="comment"># HEAD~3 means that only show three `git log` info</span></span><br><span class="line">git rebase -i HEAD~3</span><br><span class="line"></span><br><span class="line"><span class="comment"># set upstream, if branch_name is current branch, it can be ignored</span></span><br><span class="line">git branch --set-upstream-to=&lt;upstream&gt; [branch_name]</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">git branch -u &lt;upstream&gt; [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># only rollback the specified file</span></span><br><span class="line">git <span class="built_in">log</span> --oneline a.txt</span><br><span class="line"><span class="comment"># or:</span></span><br><span class="line">git lg a.txt</span><br><span class="line">git reset 575af8dfd a.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter author or commmitter</span></span><br><span class="line">git lg --author=mystic</span><br><span class="line">git lg --committer=mystic</span><br><span class="line"></span><br><span class="line"><span class="comment"># regenerate change id</span></span><br><span class="line">git commit --amend</span><br><span class="line"><span class="comment"># Manually delete the change id line, save and close</span></span><br><span class="line">git commit --amend --no-edit</span><br></pre></td></tr></table></figure>

<h2 id="some-error-solution"><a href="#some-error-solution" class="headerlink" title="some error solution"></a>some error solution</h2><blockquote>
<p>git pull<br>error: cannot lock ref ‘refs/remotes/origin/****’: is at eaabc706c45b474e4e04e6d9de54a5a7bd2d16cb but expected c06606dd5b8c3d3fddc84f8c21f139a04586a1af</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># you should run</span></span><br><span class="line"><span class="comment"># Automatically prune local branches that have been removed on the remote server</span></span><br><span class="line">git remote prune origin</span><br><span class="line"><span class="comment"># git gc --prune=now</span></span><br></pre></td></tr></table></figure>

<h3 id="fix-Chinese-char-cannot-be-shown-in-the-right-way"><a href="#fix-Chinese-char-cannot-be-shown-in-the-right-way" class="headerlink" title="fix Chinese char cannot be shown in the right way"></a>fix Chinese char cannot be shown in the right way</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global core.quotepath <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="remote-rejected-for-gerrit-with-changeId"><a href="#remote-rejected-for-gerrit-with-changeId" class="headerlink" title="remote rejected(for gerrit with changeId)"></a>remote rejected(for gerrit with changeId)</h3><blockquote>
<p>To ssh://<br>! [remote rejected]     HEAD -&gt; refs/for/xxx<br>error: failed to push some refs to</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit --amend <span class="comment"># manually remove the old changeId by this command</span></span><br><span class="line">git commit --amend --no-edit <span class="comment"># generate changeId automatically</span></span><br><span class="line"><span class="comment"># then git push to your specified branch</span></span><br></pre></td></tr></table></figure>

<h3 id="change-user-name-and-user-email-in-history"><a href="#change-user-name-and-user-email-in-history" class="headerlink" title="change user.name and user.email in history"></a>change user.name and user.email in history</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pip install git-filter-repo</span></span><br><span class="line">git filter-repo --mailmap ~/my_mailmap</span><br><span class="line">git remote add origin &lt;Your Github Repo URL&gt;</span><br><span class="line">git push origin --all --force</span><br><span class="line"></span><br><span class="line">cat ~/my_mailmap</span><br><span class="line">Name For User &lt;email@addre.ss&gt;</span><br><span class="line">&lt;new@ema.il&gt; &lt;old1@ema.il&gt;</span><br><span class="line">New Name And &lt;new@ema.il&gt; &lt;old2@ema.il&gt;</span><br><span class="line">New Name And &lt;new@ema.il&gt; Old Name And &lt;old3@ema.il&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>help</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取网易云音乐歌单</title>
    <url>/grab-neteasecloudmusic.html</url>
    <content><![CDATA[<h1 id="Something-needed-before-action"><a href="#Something-needed-before-action" class="headerlink" title="Something needed before action"></a>Something needed before action</h1><pre><code>需要使用到lxml和beautifulsoup,都可以使用pip安装
</code></pre>
<span id="more"></span>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/26 9:39</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    抓取网易云音乐</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span>(<span class="params">url, headers</span>):</span></span><br><span class="line">    req = urllib.request.Request(url, headers=headers)</span><br><span class="line">    <span class="keyword">with</span> urllib.request.urlopen(req) <span class="keyword">as</span> resp:</span><br><span class="line">        content = resp.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_html</span>(<span class="params">html</span>):</span></span><br><span class="line">    host = <span class="string">&#x27;https://music.163.com&#x27;</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    <span class="comment"># 歌单图片[src]</span></span><br><span class="line">    playlist_img = soup.select(<span class="string">&#x27;ul#m-pl-container li div img&#x27;</span>)</span><br><span class="line">    <span class="comment"># 歌单名称和链接[title|href]</span></span><br><span class="line">    playlist_name = soup.select(<span class="string">&#x27;ul#m-pl-container li div a.msk&#x27;</span>)</span><br><span class="line">    <span class="comment"># 歌单播放量[text]</span></span><br><span class="line">    playlist_views = soup.select(<span class="string">&#x27;ul#m-pl-container li div.bottom span.nb&#x27;</span>)</span><br><span class="line">    <span class="comment"># 歌单创建者[title|href]</span></span><br><span class="line">    playlist_creator = soup.select(<span class="string">&#x27;ul#m-pl-container li p &gt; span + a&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(playlist_creator)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;歌单封面: &#x27;</span>, playlist_img[i][<span class="string">&#x27;src&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;歌单名称: &#x27;</span>, playlist_name[i][<span class="string">&#x27;title&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;歌单链接: &#x27;</span>, host + playlist_name[i][<span class="string">&#x27;href&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;歌单播放量: &#x27;</span>, playlist_views[i].text)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;歌单创建者: &#x27;</span>, playlist_creator[i][<span class="string">&#x27;title&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;创建者主页: &#x27;</span>, host + playlist_creator[i][<span class="string">&#x27;href&#x27;</span>], <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    spider_url = <span class="string">&#x27;https://music.163.com/discover/playlist&#x27;</span></span><br><span class="line">    result = get_html(spider_url, headers=&#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;music.163.com&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    parse_html(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><pre><code>1.python版本: 3.6.3
2.可以结合前一篇,做个歌词分析
</code></pre>
<p><a href="https://github.com/pplmx/data_mining.git">Github Source Code</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>spider</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取好友说说,进行简单的分析</title>
    <url>/grab-qzone.html</url>
    <content><![CDATA[<h1 id="Something-needed-before-action"><a href="#Something-needed-before-action" class="headerlink" title="Something needed before action"></a>Something needed before action</h1><pre><code>需要下载chromedriver.exe
需要用到selenium,jieba,wordcloud,BeautifulSoup,xlrd,xlwt,xlutils等模块
都可以使用pip install 模块名 方式安装,如果安装失败,可以自己下载whl文件,并将whl文件
放在python的安装目录Scripts下,再通过pip install 本地地址.whl,安装所需模块
</code></pre>
<span id="more"></span>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/12/12 8:33</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    抓取QQ空间说说</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> xlrd <span class="keyword">as</span> xlrd</span><br><span class="line"><span class="keyword">import</span> xlwt <span class="keyword">as</span> xlwt</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> array</span><br><span class="line"><span class="keyword">from</span> scipy.misc <span class="keyword">import</span> imread</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator, STOPWORDS</span><br><span class="line"><span class="keyword">from</span> xlutils.copy <span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_existed</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        os.remove(path)</span><br><span class="line">    w = xlwt.Workbook()</span><br><span class="line">    w.add_sheet(<span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line">    w.save(path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_data</span>(<span class="params">data1, data2, path</span>):</span></span><br><span class="line">    f = xlrd.open_workbook(path)</span><br><span class="line">    sheet = f.sheet_by_name(<span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line">    src = copy(f)</span><br><span class="line">    row = sheet.nrows</span><br><span class="line">    src.get_sheet(<span class="number">0</span>).write(row, <span class="number">0</span>, data1)</span><br><span class="line">    src.get_sheet(<span class="number">0</span>).write(row, <span class="number">1</span>, data2)</span><br><span class="line">    src.save(path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录QQ空间</span></span><br><span class="line"><span class="comment"># noinspection PyBroadException</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_shuoshuo</span>(<span class="params">my_qq, my_pwd, friend_qq, path</span>):</span></span><br><span class="line">    is_existed(path)</span><br><span class="line">    <span class="comment"># 使用selenium</span></span><br><span class="line">    driver = webdriver.Chrome()</span><br><span class="line">    driver.maximize_window()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.set_page_load_timeout(<span class="number">10</span>)</span><br><span class="line">        driver.get(<span class="string">&#x27;https://user.qzone.qq.com/&#123;&#125;/311&#x27;</span>.<span class="built_in">format</span>(friend_qq))</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">u&#x27;网页启动异常,请重新打开&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        driver.quit()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;login_div&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">u&#x27;非好友无法进入空间,无权限抓取内容&#x27;</span>)</span><br><span class="line">        driver.quit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        driver.switch_to.frame(<span class="string">&#x27;login_frame&#x27;</span>)</span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;switcher_plogin&#x27;</span>).click()</span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;u&#x27;</span>).clear()</span><br><span class="line">        <span class="comment"># 输入个人QQ</span></span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;u&#x27;</span>).send_keys(my_qq)</span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;p&#x27;</span>).clear()</span><br><span class="line">        <span class="comment"># 输入个人密码</span></span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;p&#x27;</span>).send_keys(my_pwd)</span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;login_button&#x27;</span>).click()</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">    driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">    <span class="comment"># 判断好友是否设置了权限</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element_by_id(<span class="string">&#x27;QM_OwnerInfo_Icon&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">u&#x27;空间加载异常,请重新打开&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        driver.quit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        driver.switch_to.frame(<span class="string">&#x27;app_canvas_frame&#x27;</span>)</span><br><span class="line">        next_page = <span class="string">&#x27;page&#x27;</span></span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> next_page:</span><br><span class="line">                pages = driver.page_source</span><br><span class="line">                soup = BeautifulSoup(pages, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">                shuoshuo_send_times = soup.select(</span><br><span class="line">                    <span class="string">&#x27;ol#msgList li.feed div.box.bgr3 &gt; div.ft div.info a.c_tx.c_tx3.goDetail&#x27;</span>)</span><br><span class="line">                shuoshuos = soup.select(<span class="string">&#x27;ol#msgList li.feed div.bd pre.content&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">u&#x27;正在抓取第%d页的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#x27;</span> % page)</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(shuoshuos)):</span><br><span class="line">                    data = &#123;</span><br><span class="line">                        <span class="string">&#x27;time&#x27;</span>: shuoshuo_send_times[i][<span class="string">&#x27;title&#x27;</span>],</span><br><span class="line">                        <span class="string">&#x27;shuos&#x27;</span>: shuoshuos[i].text</span><br><span class="line">                    &#125;</span><br><span class="line">                    write_data(data[<span class="string">&#x27;time&#x27;</span>], data[<span class="string">&#x27;shuos&#x27;</span>], path)</span><br><span class="line">                next_page = driver.find_element_by_link_text(<span class="string">u&#x27;下一页&#x27;</span>)</span><br><span class="line">                page = page + <span class="number">1</span></span><br><span class="line">                next_page.click()</span><br><span class="line">                time.sleep(<span class="number">3</span>)</span><br><span class="line">                driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">            driver.quit()</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">u&#x27;抓取到%d页面结束&#x27;</span> % page)</span><br><span class="line">            driver.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shuoshuo_analysis</span>(<span class="params">file_path</span>):</span></span><br><span class="line">    <span class="comment"># 读取csv文件</span></span><br><span class="line">    <span class="comment"># csv模块读取csv文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rt&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        read_csv = csv.reader(file)</span><br><span class="line">        all_moods = [mood <span class="keyword">for</span> mood <span class="keyword">in</span> read_csv]</span><br><span class="line">        all_moods = array(all_moods)</span><br><span class="line">        shuoshuos = all_moods[:, <span class="number">1</span>]</span><br><span class="line">        phrases = []</span><br><span class="line">        <span class="comment"># 分割(以特殊字符,如逗号,感叹号等,进行分割)+合拼成一维列表(将所有说说文字内容合并)</span></span><br><span class="line">        <span class="keyword">for</span> shuoshuo <span class="keyword">in</span> shuoshuos:</span><br><span class="line">            phrases += re.split(<span class="string">r&#x27;[^\u4E00-\u9FA5\w]+&#x27;</span>, shuoshuo)</span><br><span class="line">        <span class="comment"># 去除空串</span></span><br><span class="line">        phrases = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> phrase: phrase != <span class="string">&#x27;&#x27;</span>, phrases))</span><br><span class="line">        words = []</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> phrases:</span><br><span class="line">            words += jieba.cut(p, HMM=<span class="literal">True</span>)</span><br><span class="line">        <span class="built_in">print</span>(words)</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(words))</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">set</span>(words))</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(<span class="built_in">set</span>(words)))</span><br><span class="line">        <span class="comment"># 去除长度为1的词</span></span><br><span class="line">        <span class="comment"># words = list(filter(lambda word: len(word) &gt; 1, words))</span></span><br><span class="line">        <span class="built_in">print</span>(Counter(words))</span><br><span class="line">        back_color = imread(<span class="string">&#x27;pokemon.jpg&#x27;</span>)  <span class="comment"># 解析该图片</span></span><br><span class="line">        wc = WordCloud(background_color=<span class="string">&#x27;white&#x27;</span>,  <span class="comment"># 背景颜色</span></span><br><span class="line">                       max_words=<span class="number">1000</span>,  <span class="comment"># 最大词数</span></span><br><span class="line">                       mask=back_color,  <span class="comment"># 以该参数值作图绘制词云，这个参数不为空时，width和height会被忽略</span></span><br><span class="line">                       max_font_size=<span class="number">100</span>,  <span class="comment"># 显示字体的最大值</span></span><br><span class="line">                       stopwords=STOPWORDS.add(<span class="string">&#x27;苟利国&#x27;</span>),  <span class="comment"># 使用内置的屏蔽词，再添加&#x27;苟利国&#x27;</span></span><br><span class="line">                       font_path=<span class="string">&quot;C:/Windows/Fonts/STFANGSO.ttf&quot;</span>,  <span class="comment"># 解决显示口字型乱码问题，可进入C:/Windows/Fonts/目录更换字体</span></span><br><span class="line">                       random_state=<span class="number">42</span>,  <span class="comment"># 为每个词返回一个PIL颜色</span></span><br><span class="line">                       <span class="comment"># width=1000,  # 图片的宽</span></span><br><span class="line">                       <span class="comment"># height=860  #图片的长</span></span><br><span class="line">                       )</span><br><span class="line">        wc.generate(<span class="string">&#x27; &#x27;</span>.join(words))</span><br><span class="line">        <span class="comment"># 基于彩色图像生成相应彩色</span></span><br><span class="line">        image_colors = ImageColorGenerator(back_color)</span><br><span class="line">        <span class="comment"># 显示图片</span></span><br><span class="line">        plt.imshow(wc)</span><br><span class="line">        <span class="comment"># 关闭坐标轴</span></span><br><span class="line">        plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">        <span class="comment"># 绘制词云</span></span><br><span class="line">        plt.figure()</span><br><span class="line">        plt.imshow(wc.recolor(color_func=image_colors))</span><br><span class="line">        plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">        <span class="comment"># 保存图片</span></span><br><span class="line">        wc.to_file(<span class="string">&#x27;wordcloud.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 爬取QQ空间好友动态,并保存到本地</span></span><br><span class="line">    <span class="comment"># myself = input(&#x27;Please input your QQ: &#x27;)</span></span><br><span class="line">    <span class="comment"># upwd = input(&#x27;Please input your password: &#x27;)</span></span><br><span class="line">    <span class="comment"># friend = input(&#x27;Please input your friend QQ: &#x27;)</span></span><br><span class="line">    <span class="comment"># save_path = &#x27;d:/&#x27; + friend + &#x27;.csv&#x27;</span></span><br><span class="line">    <span class="comment"># get_shuoshuo(myself, upwd, friend, save_path)</span></span><br><span class="line">    <span class="comment"># 进行说说分析,并生成词云</span></span><br><span class="line">    shuoshuo_analysis(<span class="string">&#x27;d:/me.csv&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><pre><code>1.python版本: 3.6.3
2.生成的csv文件,在shuoshuo_analysis()中直接调用,会报错,至少我这边是这样的
  解决方案: 
    对打开生成的csv文件,对其另存为普通的csv文件[不是那个utf8格式的csv]
    然后用记事本打开,复制里面的内容;再用sublime打开(应该是乱码的),
    将复制的内容覆盖原有的乱码内容,同时save as utf-8
    shuoshuo_analysis()调用这个文件
  为什么不在最初就保存为utf-8格式的csv文件呢?
    直接保存为csv utf-8格式,打开不会乱码,但是在读取时,第一行数据有问题,其他正常
3.制作词云图片时,选择的背景图片,最好是对比度比较明显的 
</code></pre>
<p><a href="https://github.com/pplmx/data_mining.git">Github Source Code</a>   </p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>spider</tag>
        <tag>data analysis</tag>
      </tags>
  </entry>
  <entry>
    <title>How to configure gradle build on Github Actions</title>
    <url>/gradle-build4github-actions.html</url>
    <content><![CDATA[<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This workflow will build a Java project with Gradle</span></span><br><span class="line"><span class="comment"># For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">Java</span> <span class="string">CI</span> <span class="string">with</span> <span class="string">Gradle</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">    <span class="attr">push:</span></span><br><span class="line">        <span class="attr">branches:</span> [ <span class="string">master</span> ]</span><br><span class="line">    <span class="attr">pull_request:</span></span><br><span class="line">        <span class="attr">branches:</span> [ <span class="string">master</span> ]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">Gradle</span> <span class="string">Automation</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">        <span class="attr">strategy:</span></span><br><span class="line">            <span class="attr">matrix:</span></span><br><span class="line">                <span class="attr">java:</span> [<span class="number">11</span>, <span class="number">13</span>]</span><br><span class="line">        <span class="attr">steps:</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/setup-java@v1</span></span><br><span class="line">                <span class="attr">with:</span></span><br><span class="line">                    <span class="attr">java-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.java</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># add cache to improve workflow execution time</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">.gradle/caches</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">                <span class="attr">with:</span></span><br><span class="line">                    <span class="attr">path:</span> <span class="string">~/.gradle/caches</span></span><br><span class="line">                    <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/*.gradle*&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                    <span class="attr">restore-keys:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">.gradle/wrapper</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">                <span class="attr">with:</span></span><br><span class="line">                    <span class="attr">path:</span> <span class="string">~/.gradle/wrapper</span></span><br><span class="line">                    <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-wrapper-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/*.gradle&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">                    <span class="attr">restore-keys:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-gradle-wrapper-</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Grant</span> <span class="string">execute</span> <span class="string">permission</span> <span class="string">for</span> <span class="string">gradlew</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">gradlew</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Build</span> <span class="string">with</span> <span class="string">Gradle</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">./gradlew</span> <span class="string">clean</span> <span class="string">build</span> <span class="string">-s</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo with Nginx on CentOS</title>
    <url>/hexo-nginx-on-centos.html</url>
    <content><![CDATA[<h1 id="deploy-hexo-by-nginx-on-centos"><a href="#deploy-hexo-by-nginx-on-centos" class="headerlink" title="deploy hexo by nginx on centos"></a>deploy hexo by nginx on centos</h1><ul>
<li>create some dirs and enter pkgs dir<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /home/packages &amp;&amp; cd /home/packages</span><br></pre></td></tr></table></figure></li>
<li>download npm compiled source code and unzip it<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v11.9.0/node-v11.9.0-linux-x64.tar.xz</span><br><span class="line">tar -xvf node-v11.9.0-linux-x64.tar.xz -C /usr/share/</span><br></pre></td></tr></table></figure>
<span id="more"></span></li>
<li>create soft link<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv /usr/share/node-v11.9.0-linux-x64 /usr/share/nodejs</span><br><span class="line">ln -s /usr/share/nodejs/bin/node /usr/local/bin/</span><br><span class="line">ln -s /usr/share/nodejs/bin/npm /usr/local/bin/</span><br></pre></td></tr></table></figure></li>
<li>install hexo<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">ln -s /usr/share/nodejs/bin/hexo /usr/local/bin/</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h2 id="install-nginx"><a href="#install-nginx" class="headerlink" title="install nginx"></a>install nginx</h2><ul>
<li>configure yum repo<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/yum.repos.d/my.repo</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure></li>
<li>install nginx and start it<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y nginx</span><br><span class="line">systemctl start nginx &amp;&amp; systemctl enable nginx</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<ul>
<li>init hexo project<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /home/website &amp;&amp; cd /home/website &amp;&amp; hexo init &amp;&amp; hexo g</span><br></pre></td></tr></table></figure></li>
<li>refer to hexo public dir<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;                    </span><br><span class="line">    root   /home/website/public;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;                               </span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<hr>
<p>Now, you can access your blog by your IP address.</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Http Version Comparison</title>
    <url>/http-version.html</url>
    <content><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h2><table>
<thead>
<tr>
<th align="center">Year</th>
<th align="center">HTTP Version</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1996</td>
<td align="center"><a href="https://tools.ietf.org/html/rfc1945">1.0</a></td>
</tr>
<tr>
<td align="center">1997</td>
<td align="center"><a href="https://tools.ietf.org/html/rfc2616">1.1</a></td>
</tr>
<tr>
<td align="center">2000</td>
<td align="center"><a href="https://tools.ietf.org/html/rfc2818">HTTPS</a></td>
</tr>
<tr>
<td align="center">2015</td>
<td align="center"><a href="https://tools.ietf.org/html/rfc7540">2.0</a></td>
</tr>
<tr>
<td align="center">???</td>
<td align="center"><a href="https://tools.ietf.org/html/draft-ietf-quic-http">3.0 Draft</a></td>
</tr>
</tbody></table>
<p><img src="assets/HTTP-v1-v2-v3-stacks.png" alt="HTTP_Version"></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="assets/http1-265x300.png" alt="HTTP1 Protocol"></td>
<td><img src="assets/http1.1-265x300.png" alt="HTTP1.1 Protocol"></td>
<td><img src="assets/http2-283x300.png" alt="HTTP2 Protocol"></td>
</tr>
</tbody></table>
<ul>
<li><p>HTTP/1.0</p>
<blockquote>
<p>For every TCP connection there is only one request and one response.</p>
</blockquote>
</li>
<li><p>HTTP/1.1</p>
<blockquote>
<p>It supports connection reuse i.e. for every TCP connection there could be multiple requests and responses, and pipelining where the client can request several resources from the server at once.</p>
<p>However, pipelining was hard to implement due to issues such as head-of-line blocking and was not a feasible solution.</p>
</blockquote>
</li>
<li><p>HTTP/2</p>
<blockquote>
<p>Uses multiplexing, where over a single TCP connection resources to be delivered are interleaved and arrive at the client almost at the same time.</p>
<p>It is done using streams which can be prioritized, can have dependencies and individual flow control.</p>
<p>It also provides a feature called server push that allows the server to send data that the client will need but has not yet requested.</p>
</blockquote>
</li>
</ul>
<p><img src="assets/Comparison-of-HTTP-versions.jpg" alt="Comparison of HTTP versions"></p>
<h2 id="http-1-0"><a href="#http-1-0" class="headerlink" title="http 1.0"></a>http 1.0</h2><ul>
<li><p>No Connection</p>
<p>  Each request from the browser need build a connection with the server, once the server has handled the request and it will stop the tcp connection immediately.</p>
</li>
<li><p>No State</p>
<p>  The server do not trace every client, and record the past requests too.</p>
</li>
</ul>
<h2 id="http-1-1"><a href="#http-1-1" class="headerlink" title="http 1.1"></a>http 1.1</h2><ul>
<li>persistent connection</li>
<li>Host header is required</li>
<li>pipelining</li>
<li>cache-control</li>
<li>content negotiation</li>
</ul>
<h2 id="https"><a href="#https" class="headerlink" title="https"></a>https</h2><p>https ==&gt; HTTP + SSL</p>
<h2 id="http-2-0"><a href="#http-2-0" class="headerlink" title="http 2.0"></a>http 2.0</h2><ul>
<li>Binary Protocol<ul>
<li>Low overhead in parsing data — <strong>a critical value proposition in HTTP/2 vs HTTP1</strong>.</li>
<li>Less prone to errors.</li>
<li>Lighter network footprint.</li>
<li>Effective network resource utilization.</li>
<li>Reduced network latency and improved throughput.</li>
<li>Eliminating security concerns associated with the textual nature of HTTP1.x such as response  splitting attacks.</li>
<li>Efficient and robust in terms of processing of data between client and server.</li>
<li>Compact representation of commands for easier processing and implementation.</li>
<li>Enables other capabilities of the HTTP/2 including compression, multiplexing, prioritization, flow control and effective handling of TLS.</li>
</ul>
</li>
<li>Request Multiplexing<ul>
<li>Allows you to download web files asynchronously from one server.</li>
</ul>
</li>
<li>Header Compression</li>
<li>Server Push<ul>
<li>The client saves pushed resources in the cache.</li>
<li>The client can reuse these cached resources across different pages.</li>
<li>The server can multiplex pushed resources along with originally requested information within the  same TCP connection.</li>
<li>The server can prioritize pushed resources — <strong>a key performance differentiator in HTTP/2 vs HTTP1</strong>.</li>
<li>The client can decline pushed resources to maintain an effective repository of cached resources or  disable Server Push entirely.</li>
<li>The client can also limit the number of pushed streams multiplexed concurrently.</li>
</ul>
</li>
</ul>
<h2 id="http-3-0"><a href="#http-3-0" class="headerlink" title="http 3.0"></a>http 3.0</h2>]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>Install the Latest Packages by Ubuntu PPA</title>
    <url>/install-latest-by-ubuntu-ppa.html</url>
    <content><![CDATA[<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="Use-PPA-source-Latest-Version"><a href="#Use-PPA-source-Latest-Version" class="headerlink" title="Use PPA source(Latest Version)"></a>Use PPA source(Latest Version)</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># after this, it will generate a new list in /etc/apt/sources.list.d</span></span><br><span class="line">sudo add-apt-repository ppa:git-core/ppa</span><br><span class="line"></span><br><span class="line"><span class="comment"># change &quot;http://ppa.launchpad.net&quot; to &quot;https://launchpad.proxy.ustclug.org&quot;</span></span><br><span class="line">❯ ll /etc/apt/sources.list.d</span><br><span class="line">.rw-r--r-- root root 137 B Fri Feb  5 17:49:07 2021 git-core-ubuntu-ppa-focal.list</span><br><span class="line">❯ cat /etc/apt/sources.list.d/git-core-ubuntu-ppa-focal.list</span><br><span class="line">deb https://launchpad.proxy.ustclug.org/git-core/ppa/ubuntu focal main</span><br><span class="line"></span><br><span class="line"><span class="comment"># install the latest git</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure>

<h3 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:cwchien/gradle</span><br></pre></td></tr></table></figure>

<h3 id="OpenJDK"><a href="#OpenJDK" class="headerlink" title="OpenJDK"></a>OpenJDK</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:openjdk-r/ppa</span><br></pre></td></tr></table></figure>

<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br></pre></td></tr></table></figure>

<h2 id="Change-the-Default-PPA-Source"><a href="#Change-the-Default-PPA-Source" class="headerlink" title="Change the Default PPA Source"></a>Change the Default PPA Source</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s@http://ppa.launchpad.net@https://launchpad.proxy.ustclug.org@g&quot;</span> /etc/apt/sources.list.d/*.list</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&quot;s@http://mirrors.aliyun.com@https://mirrors.aliyun.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="line">sed -i <span class="string">&quot;s@http://archive.ubuntu.com@https://mirrors.aliyun.com@g&quot;</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s install multiple python versions in linux</title>
    <url>/install-multi-version-python.html</url>
    <content><![CDATA[<h1 id="install-multiple-versions-of-python"><a href="#install-multiple-versions-of-python" class="headerlink" title="install multiple versions of python"></a>install multiple versions of python</h1><p><a href="https://www.python.org/ftp/python/">All Python Released Source</a></p>
<p><strong>The following code has been verified in Centos8.</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">PYTHON_DIR=<span class="string">&quot;/opt/python/&quot;</span></span><br><span class="line">DOWNLOAD_DIR=<span class="string">&quot;/home/download/&quot;</span></span><br><span class="line">PYTHON_2_HOME=<span class="string">&quot;<span class="variable">$&#123;PYTHON_DIR&#125;</span>/py2&quot;</span></span><br><span class="line">PYTHON_3_HOME=<span class="string">&quot;<span class="variable">$&#123;PYTHON_DIR&#125;</span>/py3&quot;</span></span><br><span class="line">PYTHON_2_VERSION=<span class="string">&quot;2.7.17&quot;</span></span><br><span class="line">PYTHON_3_VERSION=<span class="string">&quot;3.8.2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ preparation ************</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>; mkdir -p <span class="variable">$&#123;PYTHON_2_HOME&#125;</span>; mkdir -p <span class="variable">$&#123;PYTHON_3_HOME&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [[ -f <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>.tgz ]]; <span class="keyword">then</span></span><br><span class="line">    wget -P <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span> https://www.python.org/ftp/python/<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>.tgz || <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [[ -f <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>.tgz ]]; <span class="keyword">then</span></span><br><span class="line">    wget -P <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span> https://www.python.org/ftp/python/<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>.tgz || <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">tar -zxvf <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span>.tgz -C <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span></span><br><span class="line">tar -zxvf <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span>.tgz -C <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ install dependency packages ************</span></span><br><span class="line">yum install -y gcc gcc-c++ automake make autoconf libtool diffutils sudo zlib-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ install python 2 ************</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_2_VERSION&#125;</span> || <span class="built_in">return</span></span><br><span class="line"><span class="comment"># if need, you can uncomment the following code</span></span><br><span class="line"><span class="comment"># make clean</span></span><br><span class="line">./configure --prefix=<span class="variable">$&#123;PYTHON_2_HOME&#125;</span> --enable-optimizations</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sleep 10s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ install python 3 ************</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;DOWNLOAD_DIR&#125;</span>/Python-<span class="variable">$&#123;PYTHON_3_VERSION&#125;</span> || <span class="built_in">return</span></span><br><span class="line"><span class="comment"># if need, you can uncomment the following code</span></span><br><span class="line"><span class="comment"># make clean</span></span><br><span class="line">./configure --prefix=<span class="variable">$&#123;PYTHON_3_HOME&#125;</span> --enable-optimizations</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ************ manage python version ************</span></span><br><span class="line"><span class="comment"># remove old python version management</span></span><br><span class="line">alternatives --display python | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="comment"># remove old python2 version management</span></span><br><span class="line">alternatives --display python2 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python2 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="comment"># remove old python3 version management</span></span><br><span class="line">alternatives --display python3 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python3 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># rebuild all python version management</span></span><br><span class="line">alternatives --install /usr/bin/python python <span class="variable">$&#123;PYTHON_2_HOME&#125;</span>/bin/python2 1</span><br><span class="line">alternatives --install /usr/bin/python python <span class="variable">$&#123;PYTHON_3_HOME&#125;</span>/bin/python3 9</span><br><span class="line"></span><br><span class="line">alternatives --install /usr/bin/python2 python2 <span class="variable">$&#123;PYTHON_2_HOME&#125;</span>/bin/python2 9</span><br><span class="line">alternatives --install /usr/bin/python3 python3 <span class="variable">$&#123;PYTHON_3_HOME&#125;</span>/bin/python3 9</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Python from Source Code</title>
    <url>/install-python-optimal.html</url>
    <content><![CDATA[<h1 id="install-Python-Optimization-Version"><a href="#install-Python-Optimization-Version" class="headerlink" title="install Python(Optimization Version)"></a>install Python(Optimization Version)</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">PYTHON_DIR=<span class="string">&quot;/opt/python&quot;</span></span><br><span class="line">DOWNLOAD_PYTHON_DIR=<span class="string">&quot;/home/download/python&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create the dirs</span></span><br><span class="line">install -d <span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span></span><br><span class="line"></span><br><span class="line">PYTHON_DEFAULT_VERSION=<span class="string">&quot;3.8.6&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_python</span></span>() &#123;</span><br><span class="line">    <span class="comment"># please ensure the version you specified lists here</span></span><br><span class="line">    <span class="comment"># https://www.python.org/ftp/python/</span></span><br><span class="line">    python_version=<span class="variable">$&#123;1:-<span class="variable">$PYTHON_DEFAULT_VERSION</span>&#125;</span></span><br><span class="line">    python_home=<span class="string">&quot;<span class="variable">$&#123;PYTHON_DIR&#125;</span>/<span class="variable">$&#123;python_version&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># create the dirs</span></span><br><span class="line">    install -d <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    python_remote_url=<span class="string">&quot;https://www.python.org/ftp/python/<span class="variable">$&#123;python_version&#125;</span>/Python-<span class="variable">$&#123;python_version&#125;</span>.tgz&quot;</span></span><br><span class="line">    python_local_url=<span class="string">&quot;<span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span>/Python-<span class="variable">$&#123;python_version&#125;</span>.tgz&quot;</span></span><br><span class="line"></span><br><span class="line">    [[ ! -f <span class="variable">$&#123;python_local_url&#125;</span> ]] &amp;&amp; wget -P <span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span> <span class="string">&quot;<span class="variable">$&#123;python_remote_url&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    tar -zxvf <span class="string">&quot;<span class="variable">$&#123;python_local_url&#125;</span>&quot;</span> -C <span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span> || <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ************ install dependency packages ************</span></span><br><span class="line">    yum install -y gcc gcc-c++ automake make autoconf libtool diffutils sudo zlib-devel || <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ************ install python ************</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span>/Python-<span class="variable">$&#123;python_version&#125;</span>&quot;</span> || <span class="built_in">return</span></span><br><span class="line">    <span class="comment"># if need, you can uncomment the following code</span></span><br><span class="line">    <span class="comment"># make clean</span></span><br><span class="line">    ./configure --prefix=<span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>&quot;</span> --enable-optimizations</span><br><span class="line">    make</span><br><span class="line">    sudo make install</span><br><span class="line"></span><br><span class="line">    <span class="comment"># export to path</span></span><br><span class="line">    PY_BIN=<span class="string">&quot;/opt/python/<span class="variable">$&#123;python_version&#125;</span>/bin&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;SHELL&#125;</span> =~ <span class="string">&quot;/bin/zsh&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        [[ ! <span class="variable">$&#123;PATH&#125;</span> =~ <span class="variable">$&#123;PY_BIN&#125;</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;PATH=/opt/python/<span class="variable">$&#123;python_version&#125;</span>/bin/:\$PATH&quot;</span> &gt;&gt;<span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.zshrc&quot;</span></span><br><span class="line">        <span class="comment"># shellcheck source=$HOME</span></span><br><span class="line">        <span class="built_in">source</span> <span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.zshrc&quot;</span></span><br><span class="line">        <span class="built_in">export</span> PATH</span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="variable">$&#123;SHELL&#125;</span> =~ <span class="string">&quot;/bin/bash&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        [[ ! <span class="variable">$&#123;PATH&#125;</span> =~ <span class="variable">$&#123;PY_BIN&#125;</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;PATH=/opt/python/<span class="variable">$&#123;python_version&#125;</span>/bin/:\$PATH&quot;</span> &gt;&gt;<span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.bashrc&quot;</span></span><br><span class="line">        <span class="comment"># shellcheck source=$HOME</span></span><br><span class="line">        <span class="built_in">source</span> <span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.bash_profile&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    manage_python</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">manage_python</span></span>() &#123;</span><br><span class="line">    <span class="comment"># remove old python version management</span></span><br><span class="line">    alternatives --display python | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    alternatives --display pip | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove pip &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">    <span class="comment"># rebuild new python version</span></span><br><span class="line">    py_v=<span class="string">&quot;python<span class="variable">$&#123;python_version&#125;</span>&quot;</span></span><br><span class="line">    pip_v=<span class="string">&quot;pip<span class="variable">$&#123;python_version&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;python_version&#125;</span> == 2* ]]; <span class="keyword">then</span></span><br><span class="line">        alternatives --display python2 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python2 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">        rm -fr /usr/bin/python</span><br><span class="line">        rm -fr /usr/bin/pip</span><br><span class="line">        rm -fr /usr/bin/python2</span><br><span class="line">        rm -fr /usr/bin/pip2</span><br><span class="line"></span><br><span class="line">        <span class="comment"># manage python</span></span><br><span class="line">        alternatives --install <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>/bin/python2&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python2 python2 <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python python /usr/bin/python2 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;python_version&#125;</span> == 3* ]]; <span class="keyword">then</span></span><br><span class="line">        alternatives --display python3 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python3 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        alternatives --display pip3 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove pip3 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">        rm -fr /usr/bin/python</span><br><span class="line">        rm -fr /usr/bin/pip</span><br><span class="line">        rm -fr /usr/bin/python3</span><br><span class="line">        rm -fr /usr/bin/pip3</span><br><span class="line"></span><br><span class="line">        <span class="comment"># manage python</span></span><br><span class="line">        alternatives --install <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>/bin/python3&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python3 python3 <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python python /usr/bin/python3 9</span><br><span class="line"></span><br><span class="line">        <span class="comment"># manage pip</span></span><br><span class="line">        alternatives --install <span class="string">&quot;/usr/bin/<span class="variable">$&#123;pip_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;pip_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>/bin/pip3&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/pip3 pip3 <span class="string">&quot;/usr/bin/<span class="variable">$&#123;pip_v&#125;</span>&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/pip pip /usr/bin/pip3 9</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage:</span></span><br><span class="line"><span class="comment">#     default install python 3.8.6</span></span><br><span class="line"><span class="comment">#     sh install_python.sh</span></span><br><span class="line"><span class="comment">#     sh install_python.sh 3.9.0</span></span><br><span class="line">install_python <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Time complexity in isEmpty() and size()</title>
    <url>/is-empty-size-in-java.html</url>
    <content><![CDATA[<h1 id="Time-complexity-in-isEmpty-and-size"><a href="#Time-complexity-in-isEmpty-and-size" class="headerlink" title="Time complexity in isEmpty() and size()"></a>Time complexity in isEmpty() and size()</h1><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>isEmpty() is always O(1).</p>
<p>size() is mostly O(1), but it can be also O(n).</p>
<h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>Mostly, size() and isEmpty() implementation</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>For the above, both of their time complexity is O(1).</p>
<hr>
<p>For <strong>ConcurrentLinkedQueue</strong> class</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the first live (non-deleted) node on list, or null if none.</span></span><br><span class="line"><span class="comment"> * This is yet another variant of poll/peek; here returning the</span></span><br><span class="line"><span class="comment"> * first node, not element.  We could make peek() a wrapper around</span></span><br><span class="line"><span class="comment"> * first(), but that would cost an extra volatile read of item,</span></span><br><span class="line"><span class="comment"> * and the need to add a retry loop to deal with the possibility</span></span><br><span class="line"><span class="comment"> * of losing a race to a concurrent poll().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Node&lt;E&gt; <span class="title">first</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    restartFromHead: <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; h = head, p = h, q;; p = q) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> hasItem = (p.item != <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (hasItem || (q = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                updateHead(h, p);</span><br><span class="line">                <span class="keyword">return</span> hasItem ? p : <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p == q)</span><br><span class="line">                <span class="keyword">continue</span> restartFromHead;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns &#123;<span class="doctag">@code</span> true&#125; if this queue contains no elements.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this queue contains no elements</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> first() == <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the number of elements in this queue.  If this queue</span></span><br><span class="line"><span class="comment"> * contains more than &#123;<span class="doctag">@code</span> Integer.MAX_VALUE&#125; elements, returns</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Integer.MAX_VALUE&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Beware that, unlike in most collections, this method is</span></span><br><span class="line"><span class="comment"> * &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the</span></span><br><span class="line"><span class="comment"> * asynchronous nature of these queues, determining the current</span></span><br><span class="line"><span class="comment"> * number of elements requires an O(n) traversal.</span></span><br><span class="line"><span class="comment"> * Additionally, if elements are added or removed during execution</span></span><br><span class="line"><span class="comment"> * of this method, the returned result may be inaccurate.  Thus,</span></span><br><span class="line"><span class="comment"> * this method is typically not very useful in concurrent</span></span><br><span class="line"><span class="comment"> * applications.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the number of elements in this queue</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    restartFromHead: <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (ConcurrentLinkedQueue.Node&lt;E&gt; p = first(); p != <span class="keyword">null</span>;) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p.item != <span class="keyword">null</span>)</span><br><span class="line">                <span class="keyword">if</span> (++count == Integer.MAX_VALUE)</span><br><span class="line">                    <span class="keyword">break</span>;  <span class="comment">// @see Collection.size()</span></span><br><span class="line">            <span class="keyword">if</span> (p == (p = p.next))</span><br><span class="line">                <span class="keyword">continue</span> restartFromHead;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>For this, isEmpty() is O(1), size() is O(n).</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>complexity</tag>
      </tags>
  </entry>
  <entry>
    <title>Difference among Iterable, Iterator and Generator</title>
    <url>/iterable-iterator-in-python.html</url>
    <content><![CDATA[<h1 id="Iterable-metaclass-ABCMeta"><a href="#Iterable-metaclass-ABCMeta" class="headerlink" title="Iterable(metaclass=ABCMeta)"></a>Iterable(metaclass=ABCMeta)</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">__iter__</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">False</span>:</span><br><span class="line">        <span class="keyword">yield</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__subclasshook__</span>(<span class="params">cls, C</span>):</span></span><br><span class="line">    <span class="keyword">if</span> cls <span class="keyword">is</span> Iterable:</span><br><span class="line">        <span class="keyword">return</span> _check_methods(C, <span class="string">&quot;__iter__&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NotImplemented</span></span><br></pre></td></tr></table></figure>

<h1 id="Iterator-Iterable"><a href="#Iterator-Iterable" class="headerlink" title="Iterator(Iterable)"></a>Iterator(Iterable)</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">__next__</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&#x27;Return the next item from the iterator. When exhausted, raise StopIteration&#x27;</span></span><br><span class="line">    <span class="keyword">raise</span> StopIteration</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__subclasshook__</span>(<span class="params">cls, C</span>):</span></span><br><span class="line">    <span class="keyword">if</span> cls <span class="keyword">is</span> Iterator:</span><br><span class="line">        <span class="keyword">return</span> _check_methods(C, <span class="string">&#x27;__iter__&#x27;</span>, <span class="string">&#x27;__next__&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NotImplemented</span></span><br></pre></td></tr></table></figure>

<h1 id="Generator-Iterator"><a href="#Generator-Iterator" class="headerlink" title="Generator(Iterator)"></a>Generator(Iterator)</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">send()</span></span><br><span class="line"><span class="string">throw()</span></span><br><span class="line"><span class="string">close()</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Return the next item from the generator.</span></span><br><span class="line"><span class="string">    When exhausted, raise StopIteration.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> self.send(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span>(<span class="params">self, value</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Send a value into the generator.</span></span><br><span class="line"><span class="string">    Return next yielded value or raise StopIteration.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">raise</span> StopIteration</span><br><span class="line"></span><br><span class="line"><span class="meta">@abstractmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">throw</span>(<span class="params">self, typ, val=<span class="literal">None</span>, tb=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Raise an exception in the generator.</span></span><br><span class="line"><span class="string">    Return next yielded value or raise StopIteration.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> val <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">if</span> tb <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">raise</span> typ</span><br><span class="line">        val = typ()</span><br><span class="line">    <span class="keyword">if</span> tb <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        val = val.with_traceback(tb)</span><br><span class="line">    <span class="keyword">raise</span> val</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Raise GeneratorExit inside generator.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        self.throw(GeneratorExit)</span><br><span class="line">    <span class="keyword">except</span> (GeneratorExit, StopIteration):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;generator ignored GeneratorExit&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__subclasshook__</span>(<span class="params">cls, C</span>):</span></span><br><span class="line">    <span class="keyword">if</span> cls <span class="keyword">is</span> Generator:</span><br><span class="line">        <span class="keyword">return</span> _check_methods(C, <span class="string">&#x27;__iter__&#x27;</span>, <span class="string">&#x27;__next__&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;send&#x27;</span>, <span class="string">&#x27;throw&#x27;</span>, <span class="string">&#x27;close&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NotImplemented</span></span><br></pre></td></tr></table></figure>

<h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p><strong>Generator</strong> is <strong>Iterator</strong>.</p>
<p><strong>Iterator</strong> is <strong>Iterable</strong>.</p>
<hr>
<p>According to <code>__subclasshook__</code> function,</p>
<p>Iterable, must implement <code>__iter__</code></p>
<p>Iterator, must implement <code>__iter__</code> and <code>__next__</code></p>
<p>Generator, must implement <code>__iter__</code> , <code>__next__</code>, <code>send</code>, <code>throw</code> and <code>close</code></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>source</tag>
      </tags>
  </entry>
  <entry>
    <title>kNN分类算法(python实现)</title>
    <url>/kNN.html</url>
    <content><![CDATA[<h1 id="kNN"><a href="#kNN" class="headerlink" title="kNN"></a>kNN</h1><pre><code>k-NearestNeighbor
核心思想:
    如果一个样本在特征空间中的k个最相邻的样本中的大多数属于某一个类别，
    则该样本也属于这个类别，并具有这个类别上样本的特性
优点:
    精度高、对异常值不敏感、无数据输入假定
缺点：
    计算复杂度高、空间复杂度高
适用数据范围：
    数值型和标称型
</code></pre>
<span id="more"></span>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by PyCharm</span></span><br><span class="line"><span class="comment"># @author  : mystic</span></span><br><span class="line"><span class="comment"># @date    : 2017/11/13 20:39</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data_set</span>():</span></span><br><span class="line">    group = array([[<span class="number">1.0</span>, <span class="number">1.1</span>], [<span class="number">1.0</span>, <span class="number">1.0</span>], [<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0.1</span>]])</span><br><span class="line">    labels = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;D&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> group, labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify</span>(<span class="params">in_x, data_set, labels, k</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    分类器</span></span><br><span class="line"><span class="string">    :param in_x: 用于分类的输入向量</span></span><br><span class="line"><span class="string">    :param data_set: 输入的训练样本集</span></span><br><span class="line"><span class="string">    :param labels: 标签向量</span></span><br><span class="line"><span class="string">    :param k: 用于选择最近邻居的数目</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 获取data_set的第一维长度</span></span><br><span class="line">    data_set_size = data_set.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 分别计算输入向量与data_set集合中各点的向量差,并存入数组中</span></span><br><span class="line">    diff_arr = tile(in_x, (data_set_size, <span class="number">1</span>)) - data_set</span><br><span class="line">    <span class="comment"># 平方</span></span><br><span class="line">    sq_diff_arr = diff_arr ** <span class="number">2</span></span><br><span class="line">    <span class="comment"># 求平方和</span></span><br><span class="line">    sq_distinces = sq_diff_arr.<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 开根,得各点与输入向量的距离值集合</span></span><br><span class="line">    distinces = sq_distinces ** <span class="number">0.5</span></span><br><span class="line">    <span class="comment"># 排序,升序(返回结果为索引,如[17,23,1,0],排序后返回[3,2,0,1])</span></span><br><span class="line">    sorted_dist_indices = distinces.argsort()</span><br><span class="line">    <span class="comment"># print(&#x27;最近的点:%s&#x27; % labels[sorted_dist_indices[0]])</span></span><br><span class="line">    <span class="comment"># 存储最近的k个点</span></span><br><span class="line">    class_count = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">        vote_label = labels[sorted_dist_indices[i]]</span><br><span class="line">        class_count[vote_label] = class_count.get(vote_label, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(class_count)</span></span><br><span class="line">    <span class="comment"># 根据字典class_count的value进行降序排列</span></span><br><span class="line">    <span class="comment"># 在最近点案例中,value都是1,下面的排序等于没做</span></span><br><span class="line">    sorted_class_count = <span class="built_in">sorted</span>(class_count.items(),</span><br><span class="line">                                key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># print(sorted_class_count)</span></span><br><span class="line">    <span class="keyword">return</span> sorted_class_count[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file2array</span>(<span class="params">filename</span>):</span></span><br><span class="line">    <span class="comment"># 获取文件行数</span></span><br><span class="line">    fr = <span class="built_in">open</span>(filename)</span><br><span class="line">    array_lines = fr.readlines()</span><br><span class="line">    amount = <span class="built_in">len</span>(array_lines)</span><br><span class="line">    <span class="comment"># 创建第一维长度为amount,第二维长度为3的零填充数组</span></span><br><span class="line">    <span class="comment"># 因为我们需要存储的数据第二维长度为3,故我们设置固定长度3</span></span><br><span class="line">    return_array = zeros((amount, <span class="number">3</span>))</span><br><span class="line">    <span class="comment"># 创建空list</span></span><br><span class="line">    class_label_vector = []</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> array_lines:</span><br><span class="line">        <span class="comment"># strip([chars]) 去除头尾的字符,默认去除空格字符</span></span><br><span class="line">        line = line.strip()</span><br><span class="line">        list_from_line = line.split(<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">        <span class="comment"># 获取前三个元素,赋值给return_array(这里采用了多维切片)</span></span><br><span class="line">        return_array[index, :] = list_from_line[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">        <span class="comment"># 负索引从后获取,-1获取最后一个元素</span></span><br><span class="line">        class_label_vector.append(<span class="built_in">int</span>(list_from_line[-<span class="number">1</span>]))</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 返回tuple</span></span><br><span class="line">    <span class="keyword">return</span> return_array, class_label_vector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_data_in_chart</span>():</span></span><br><span class="line">    plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]  <span class="comment"># 用来正常显示中文标签</span></span><br><span class="line">    plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span>  <span class="comment"># 用来正常显示负号</span></span><br><span class="line">    dating_data_arr, dating_labels = file2array(<span class="string">&#x27;resource/datingTestSet2.txt&#x27;</span>)</span><br><span class="line">    <span class="comment"># new figure</span></span><br><span class="line">    fig = plt.figure()</span><br><span class="line">    <span class="comment"># 在1行1列,第一个子图作画;如233,在2行3列共有6个子图的图中,在第3个子图中作画</span></span><br><span class="line">    ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">    <span class="comment"># 设置标题</span></span><br><span class="line">    ax.set_title(<span class="string">&#x27;Appointment Data Analysis&#x27;</span>)</span><br><span class="line">    <span class="comment"># Helen提供的数据,三列分别是:每年获得的飞行常客里程数,玩视频游戏所耗时间百分比,每周消费的冰淇淋公升数</span></span><br><span class="line">    <span class="comment"># 1:not like    2:general like      3:very like</span></span><br><span class="line">    <span class="comment"># 因为我们最后显示的是第一列和第二列数据,故如下设置备注信息</span></span><br><span class="line">    plt.xlabel(<span class="string">&#x27;每年获得的飞行常客里程数&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;玩视频游戏所耗时间百分比&#x27;</span>)</span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 1], dating_data_arr[:, 2])</span></span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 1], dating_data_arr[:, 2], 15.0*array(dating_labels), 15.0*array(dating_labels))</span></span><br><span class="line">    <span class="comment"># 第一列与第二列的数据,显示效果更优</span></span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 0], dating_data_arr[:, 1])</span></span><br><span class="line">    <span class="comment"># 这种方式没有图例,难以区分</span></span><br><span class="line">    <span class="comment"># ax.scatter(dating_data_arr[:, 0], dating_data_arr[:, 1], 15.0 * array(dating_labels), 15.0 * array(dating_labels))</span></span><br><span class="line">    <span class="comment"># 添加图例</span></span><br><span class="line">    length = dating_data_arr.shape[<span class="number">0</span>]</span><br><span class="line">    x1 = []</span><br><span class="line">    y1 = []</span><br><span class="line">    x2 = []</span><br><span class="line">    y2 = []</span><br><span class="line">    x3 = []</span><br><span class="line">    y3 = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        <span class="keyword">if</span> dating_labels[i] == <span class="number">1</span>:</span><br><span class="line">            x1.append(dating_data_arr[i, <span class="number">0</span>])</span><br><span class="line">            y1.append(dating_data_arr[i, <span class="number">1</span>])</span><br><span class="line">        <span class="keyword">elif</span> dating_labels[i] == <span class="number">2</span>:</span><br><span class="line">            x2.append(dating_data_arr[i, <span class="number">0</span>])</span><br><span class="line">            y2.append(dating_data_arr[i, <span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x3.append(dating_data_arr[i, <span class="number">0</span>])</span><br><span class="line">            y3.append(dating_data_arr[i, <span class="number">1</span>])</span><br><span class="line">    type1 = ax.scatter(x1, y1, c=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    type2 = ax.scatter(x2, y2, c=<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">    type3 = ax.scatter(x3, y3, c=<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">    ax.legend([type1, type2, type3], [<span class="string">&quot;not like&quot;</span>, <span class="string">&quot;general like&quot;</span>, <span class="string">&quot;very like&quot;</span>], loc=<span class="number">2</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auto_norm</span>(<span class="params">data_set</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    归一化特征值:自动将数据集转化为0到1区间内的值</span></span><br><span class="line"><span class="string">    由于里程数远远大于其他特征值,对结果影响过大</span></span><br><span class="line"><span class="string">    而Helen认为三者同等重要,故采用归一化处理</span></span><br><span class="line"><span class="string">    :param data_set:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 取第一维度的最小值</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh = array([</span></span><br><span class="line"><span class="string">                [[1, 1],[8, 18],[100, 3],[2, 4]],</span></span><br><span class="line"><span class="string">                [[1, 90],[21, 2],[11, 3],[19, 4]]</span></span><br><span class="line"><span class="string">            ])</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; shape(sh)</span></span><br><span class="line"><span class="string">        (2,4,2)</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.max()</span></span><br><span class="line"><span class="string">        100</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.min()</span></span><br><span class="line"><span class="string">        1</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.max(0)</span></span><br><span class="line"><span class="string">        array([[  1,  90],</span></span><br><span class="line"><span class="string">               [ 21,  18],</span></span><br><span class="line"><span class="string">               [100,   3],</span></span><br><span class="line"><span class="string">               [ 19,   4]])</span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; sh.min(0)</span></span><br><span class="line"><span class="string">        array([[ 1,  1],</span></span><br><span class="line"><span class="string">               [ 8,  2],</span></span><br><span class="line"><span class="string">               [11,  3],</span></span><br><span class="line"><span class="string">               [ 2,  4]])</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    min_vals = data_set.<span class="built_in">min</span>(<span class="number">0</span>)</span><br><span class="line">    max_vals = data_set.<span class="built_in">max</span>(<span class="number">0</span>)</span><br><span class="line">    ranges = max_vals - min_vals</span><br><span class="line">    <span class="comment"># 创建一个与data_set各维长度均相同的零填充数组</span></span><br><span class="line">    <span class="comment"># norm_data_set = zeros(shape(data_set))</span></span><br><span class="line">    length = data_set.shape[<span class="number">0</span>]</span><br><span class="line">    norm_data_set = data_set - tile(min_vals, (length, <span class="number">1</span>))</span><br><span class="line">    norm_data_set = norm_data_set / tile(ranges, (length, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> norm_data_set, ranges, min_vals</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dating_class_test</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    测试代码</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 用于测试的数据,占总数据的百分比</span></span><br><span class="line">    <span class="comment"># [如:已有100条数据,其中90条作为样本训练数据,剩余10条用于测试算法,检测算法的正确率]</span></span><br><span class="line">    test_ratio = <span class="number">0.10</span></span><br><span class="line">    dating_data_arr, dating_labels = file2array(<span class="string">&#x27;resource/datingTestSet2.txt&#x27;</span>)</span><br><span class="line">    norm_arr, ranges, min_vals = auto_norm(dating_data_arr)</span><br><span class="line">    length = norm_arr.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 测试数据总数</span></span><br><span class="line">    num_test_data = <span class="built_in">int</span>(length * test_ratio)</span><br><span class="line">    error_count = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_test_data):</span><br><span class="line">        classifier_result = classify(norm_arr[i, :], norm_arr[num_test_data:length, :],</span><br><span class="line">                                     dating_labels[num_test_data:length], <span class="number">3</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;The classifier came back with: %d, the real answer is: %d&#x27;</span></span><br><span class="line">              % (classifier_result, dating_labels[i]))</span><br><span class="line">        <span class="comment"># 如果分类器结果和真实数据,不同;error_count+1</span></span><br><span class="line">        <span class="keyword">if</span> classifier_result != dating_labels[i]:</span><br><span class="line">            error_count += <span class="number">1.0</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The total error rate is: %f&#x27;</span> % (error_count / num_test_data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify_person</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    预测函数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    result_list = [<span class="string">&#x27;not like&#x27;</span>, <span class="string">&#x27;general like&#x27;</span>, <span class="string">&#x27;very like&#x27;</span>]</span><br><span class="line">    game_percent = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;percentage of time spent playing video games?&#x27;</span>))</span><br><span class="line">    fly_miles = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;frequent flier miles earned per year?&#x27;</span>))</span><br><span class="line">    how_much_ice_cream = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;liters of ice cream consumed per week?&#x27;</span>))</span><br><span class="line">    dating_data_arr, dating_labels = file2array(<span class="string">&#x27;resource/datingTestSet2.txt&#x27;</span>)</span><br><span class="line">    norm_arr, ranges, min_vals = auto_norm(dating_data_arr)</span><br><span class="line">    in_arr = array([fly_miles, game_percent, how_much_ice_cream])</span><br><span class="line">    classifier_result = classify((in_arr - min_vals) / ranges, norm_arr, dating_labels, <span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;You will probably like this person: %s&#x27;</span> % result_list[classifier_result - <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img2vector</span>(<span class="params">filename</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将32*32的二进制图像矩阵转化为1*1024的向量</span></span><br><span class="line"><span class="string">    :param filename:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    return_vector = zeros((<span class="number">1</span>, <span class="number">1024</span>))</span><br><span class="line">    fr = <span class="built_in">open</span>(filename)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        line = fr.readline()</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">            return_vector[<span class="number">0</span>, <span class="number">32</span>*i+j] = <span class="built_in">int</span>(line[j])</span><br><span class="line">    <span class="keyword">return</span> return_vector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handwriting_class_test</span>():</span></span><br><span class="line">    handwriting_labels = []</span><br><span class="line">    <span class="comment"># 训练数据</span></span><br><span class="line">    training_file_list = listdir(<span class="string">&#x27;resource/digits/trainingDigits&#x27;</span>)</span><br><span class="line">    length = <span class="built_in">len</span>(training_file_list)</span><br><span class="line">    training_arr = zeros((length, <span class="number">1024</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        <span class="comment"># 获取文件名,含后缀</span></span><br><span class="line">        filename_str = training_file_list[i]</span><br><span class="line">        file_str = filename_str.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 获取文件中存储二进制图像,表示的数字</span></span><br><span class="line">        class_num_str = <span class="built_in">int</span>(file_str.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">        handwriting_labels.append(class_num_str)</span><br><span class="line">        <span class="comment"># 将各文件生成的1*1024向量分别存入training_arr</span></span><br><span class="line">        training_arr[i, :] = img2vector(<span class="string">&#x27;resource/digits/trainingDigits/%s&#x27;</span> % filename_str)</span><br><span class="line">    <span class="comment"># 测试数据</span></span><br><span class="line">    test_file_list = listdir(<span class="string">&#x27;resource/digits/testDigits&#x27;</span>)</span><br><span class="line">    error_count = <span class="number">0.0</span></span><br><span class="line">    length = <span class="built_in">len</span>(test_file_list)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        filename_str = test_file_list[i]</span><br><span class="line">        file_str = filename_str.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        class_num_str = <span class="built_in">int</span>(file_str.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">        <span class="comment"># 读取一个测试文件,并生成1*1024的向量,赋值给vector_under_test</span></span><br><span class="line">        vector_under_test = img2vector(<span class="string">&#x27;resource/digits/testDigits/%s&#x27;</span> % filename_str)</span><br><span class="line">        classifier_result = classify(vector_under_test, training_arr, handwriting_labels, <span class="number">3</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;The classifier came back with: %d,the real answer is: %d&#x27;</span></span><br><span class="line">              % (classifier_result, class_num_str))</span><br><span class="line">        <span class="keyword">if</span> classifier_result != class_num_str:</span><br><span class="line">            error_count += <span class="number">1.0</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The total number of errors is: %d&#x27;</span> % error_count)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The total error rate is: %f&#x27;</span> % (error_count/length))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># show_data_in_chart()</span></span><br><span class="line">    <span class="comment"># 通过调整test_ratio的比例,以及k的值,使结果最优</span></span><br><span class="line">    <span class="comment"># dating_class_test()</span></span><br><span class="line">    <span class="comment"># classify_person()</span></span><br><span class="line">    <span class="comment"># test_vector = img2vector(&#x27;resource/digits/testDigits/0_0.txt&#x27;)</span></span><br><span class="line">    <span class="comment"># print(test_vector[0, 0:32])</span></span><br><span class="line">    handwriting_class_test()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Something-worth-noting"><a href="#Something-worth-noting" class="headerlink" title="Something worth noting"></a>Something worth noting</h1><p><a href="https://github.com/pplmx/MachineLearning.git">Github Source Code</a></p>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>classification</tag>
      </tags>
  </entry>
  <entry>
    <title>Learning Docker</title>
    <url>/learning-docker.html</url>
    <content><![CDATA[<h1 id="Docker-General-Knowledge"><a href="#Docker-General-Knowledge" class="headerlink" title="Docker General Knowledge"></a>Docker General Knowledge</h1><h2 id="Common-CLi"><a href="#Common-CLi" class="headerlink" title="Common CLi"></a>Common CLi</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list all images in local</span></span><br><span class="line"><span class="comment"># -a, i.e. --all [Show all images (default hides intermediate images)]</span></span><br><span class="line">docker image ls -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># list all images without intermediate images</span></span><br><span class="line">docker image ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># list all containers in local(running or stopped)</span></span><br><span class="line">docker container ls -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># list all running containers</span></span><br><span class="line">docker container ls</span><br><span class="line"><span class="comment"># Key details, you can refer to the last of this article.</span></span><br><span class="line">docker container ls --format <span class="string">&#x27;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Names&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;&#x27;</span></span><br><span class="line">docker container ls --format <span class="string">&#x27;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Names&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pull image from dockerhub(It can be with tag, e.g. latest)</span></span><br><span class="line">docker image pull centos</span><br><span class="line">docker image pull centos:latest</span><br><span class="line">docker image pull purplemystic/centos</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a container named my_centos by the latest centos image</span></span><br><span class="line"><span class="comment"># -i, i.e. --interactive</span></span><br><span class="line"><span class="comment"># -t, i.e. --tty</span></span><br><span class="line">docker container run --privileged -dit --name my_centos centos init</span><br><span class="line"></span><br><span class="line"><span class="comment"># enter in a docker container</span></span><br><span class="line">docker container <span class="built_in">exec</span> -it my_cenos bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># stop a started container</span></span><br><span class="line">docker container stop my_centos</span><br><span class="line"></span><br><span class="line"><span class="comment"># start a stopped container</span></span><br><span class="line">docker container start my_centos</span><br><span class="line"></span><br><span class="line"><span class="comment"># kill a container</span></span><br><span class="line">docker container <span class="built_in">kill</span> my_centos</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove all stopped containers</span></span><br><span class="line">docker container prune</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove all unused images</span></span><br><span class="line">docker image prune</span><br><span class="line"></span><br><span class="line"><span class="comment"># container to host</span></span><br><span class="line"><span class="comment"># copy a test.log in container my_centos /var/tmp to current dir</span></span><br><span class="line">docker container cp my_centos:/var/tmp/test.log .</span><br><span class="line"></span><br><span class="line"><span class="comment"># host to container</span></span><br><span class="line">docker container cp test.log my_centos:/var/tmp</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Docker-commit"><a href="#Docker-commit" class="headerlink" title="Docker commit"></a>Docker commit</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># save container to a image with your changes</span></span><br><span class="line">docker container commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line">docker container commit my_centos purplemystic/centos</span><br><span class="line">docker container commit my_centos purplemystic/centos:1.2</span><br><span class="line">docker container commit my_centos purplemystic/centos:999</span><br></pre></td></tr></table></figure>

<p><code>Options</code></p>
<table>
<thead>
<tr>
<th>Name, shorthand</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td><code>--author , -a</code></td>
<td></td>
<td>Author (e.g., “John Hannibal Smith <a href="mailto:hannibal@a-team.com">hannibal@a-team.com</a>”)</td>
</tr>
<tr>
<td><code>--change , -c</code></td>
<td></td>
<td>Apply Dockerfile instruction to the created image</td>
</tr>
<tr>
<td><code>--message , -m</code></td>
<td></td>
<td>Commit message</td>
</tr>
<tr>
<td><code>--pause , -p</code></td>
<td><code>true</code></td>
<td>Pause container during commit</td>
</tr>
</tbody></table>
<h2 id="How-to-SSH-among-multiple-container"><a href="#How-to-SSH-among-multiple-container" class="headerlink" title="How to SSH among multiple container"></a>How to SSH among multiple container</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create three compute node</span></span><br><span class="line">docker container run -dit --privileged --name compute1 centos init</span><br><span class="line"></span><br><span class="line">docker container run -dit --privileged --name compute2 centos init</span><br><span class="line"></span><br><span class="line">docker container run -dit --privileged --name compute1 centos init</span><br><span class="line"></span><br><span class="line"><span class="comment"># login to three nodes separately to run the following command</span></span><br><span class="line"><span class="comment"># step1: to ensure sshd service is active</span></span><br><span class="line">dnf install -y openssh openssh-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># step2: to ensure you know user and password(set user root&#x27;s password to &#x27;root&#x27;)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;root:root&quot;</span> | chpasswd</span><br></pre></td></tr></table></figure>

<hr>
<p>Now, you can access one container from another container, like as follows:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@937fa919cd2a /]<span class="comment"># ssh root@172.17.0.2</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;172.17.0.2 (172.17.0.2)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:cBgcL8pqvWncp8Wn0ky7beHWC2ZFNWlR8UXK0roK7Mg.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>172.17.0.2<span class="string">&#x27; (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">root@172.17.0.2&#x27;</span>s password:</span><br><span class="line">[root@0ea4fead9a24 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="Docker-network"><a href="#Docker-network" class="headerlink" title="Docker network"></a>Docker network</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list network</span></span><br><span class="line">λ docker network ls</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">21a5e8b305c4        bridge              bridge              <span class="built_in">local</span></span><br><span class="line">e6aafe917f13        host                host                <span class="built_in">local</span></span><br><span class="line">d2de5c3c084c        none                null                <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check network details</span></span><br><span class="line">λ docker network inspect bridge</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;bridge&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Id&quot;</span>: <span class="string">&quot;21a5e8b305c415ab903d86689778d91c7968ab9ab350e0f0885be8a81d0095cc&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Created&quot;</span>: <span class="string">&quot;2020-06-08T04:21:05.390246004Z&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Scope&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Driver&quot;</span>: <span class="string">&quot;bridge&quot;</span>,</span><br><span class="line">        <span class="string">&quot;EnableIPv6&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;IPAM&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Driver&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Options&quot;</span>: null,</span><br><span class="line">            <span class="string">&quot;Config&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;Subnet&quot;</span>: <span class="string">&quot;172.17.0.0/16&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Gateway&quot;</span>: <span class="string">&quot;172.17.0.1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Internal&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;Attachable&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;Ingress&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;ConfigFrom&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Network&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;ConfigOnly&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;Containers&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;0ea4fead9a248c57d0d5053198ea5ba5eedd32f6636dd834d763dddec7bce9fd&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;compute1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;EndpointID&quot;</span>: <span class="string">&quot;3165851a116e074f7564411a351e74570c164af5610ebf8f45183840eb869199&quot;</span>,</span><br><span class="line">                <span class="string">&quot;MacAddress&quot;</span>: <span class="string">&quot;02:42:ac:11:00:02&quot;</span>,</span><br><span class="line">                <span class="string">&quot;IPv4Address&quot;</span>: <span class="string">&quot;172.17.0.2/16&quot;</span>,</span><br><span class="line">                <span class="string">&quot;IPv6Address&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;937fa919cd2aacc47034648f739c29fec00a09e14f8363a8a68d5ac3ce786e15&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;compute2&quot;</span>,</span><br><span class="line">                <span class="string">&quot;EndpointID&quot;</span>: <span class="string">&quot;22e1551440dcdd913dc59612d9757b846a1b7c977f0f836bf5b826ef4da13bab&quot;</span>,</span><br><span class="line">                <span class="string">&quot;MacAddress&quot;</span>: <span class="string">&quot;02:42:ac:11:00:03&quot;</span>,</span><br><span class="line">                <span class="string">&quot;IPv4Address&quot;</span>: <span class="string">&quot;172.17.0.3/16&quot;</span>,</span><br><span class="line">                <span class="string">&quot;IPv6Address&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Options&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;com.docker.network.bridge.default_bridge&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">            <span class="string">&quot;com.docker.network.bridge.enable_icc&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">            <span class="string">&quot;com.docker.network.bridge.enable_ip_masquerade&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">            <span class="string">&quot;com.docker.network.bridge.host_binding_ipv4&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;com.docker.network.bridge.name&quot;</span>: <span class="string">&quot;docker0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;com.docker.network.driver.mtu&quot;</span>: <span class="string">&quot;1500&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Labels&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a network(default create a network whose network type is bridge)</span></span><br><span class="line">docker networ create br-int</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a host network</span></span><br><span class="line">docker network create --driver host host-net</span><br><span class="line"></span><br><span class="line"><span class="comment"># --driver</span></span><br><span class="line">- bridge</span><br><span class="line">- host</span><br><span class="line">- overlay</span><br><span class="line">- macvlan</span><br><span class="line">- none</span><br><span class="line">- Network Plugins</span><br></pre></td></tr></table></figure>

<h3 id="Network-drivers"><a href="#Network-drivers" class="headerlink" title="Network drivers"></a>Network drivers</h3><p>Docker’s networking subsystem is pluggable, using drivers. Several drivers exist by default, and provide core networking functionality:</p>
<ul>
<li><code>bridge</code>: The default network driver. If you don’t specify a driver, this is the type of network you are creating. <strong>Bridge networks are usually used when your applications run in standalone containers that need to communicate.</strong> See <a href="https://docs.docker.com/network/bridge/">bridge networks</a>.</li>
<li><code>host</code>: For standalone containers, remove network isolation between the container and the Docker host, and use the host’s networking directly. <code>host</code> is only available for swarm services on Docker 17.06 and higher. See <a href="https://docs.docker.com/network/host/">use the host network</a>.</li>
<li><code>overlay</code>: Overlay networks connect multiple Docker daemons together and enable swarm services to communicate with each other. You can also use overlay networks to facilitate communication between a swarm service and a standalone container, or between two standalone containers on different Docker daemons. This strategy removes the need to do OS-level routing between these containers. See <a href="https://docs.docker.com/network/overlay/">overlay networks</a>.</li>
<li><code>macvlan</code>: Macvlan networks allow you to assign a MAC address to a container, making it appear as a physical device on your network. The Docker daemon routes traffic to containers by their MAC addresses. Using the <code>macvlan</code> driver is sometimes the best choice when dealing with legacy applications that expect to be directly connected to the physical network, rather than routed through the Docker host’s network stack. See <a href="https://docs.docker.com/network/macvlan/">Macvlan networks</a>.</li>
<li><code>none</code>: For this container, disable all networking. Usually used in conjunction with a custom network driver. <code>none</code> is not available for swarm services. See <a href="https://docs.docker.com/network/none/">disable container networking</a>.</li>
<li><a href="https://docs.docker.com/engine/extend/plugins_services/">Network plugins</a>: You can install and use third-party network plugins with Docker. These plugins are available from <a href="https://hub.docker.com/search?category=network&q=&type=plugin">Docker Hub</a> or from third-party vendors. See the vendor’s documentation for installing and using a given network plugin.</li>
</ul>
<h2 id="Network-driver-summary"><a href="#Network-driver-summary" class="headerlink" title="Network driver summary"></a>Network driver summary</h2><ul>
<li><strong>User-defined bridge networks</strong> are best when you need multiple containers to communicate on the same Docker host.</li>
<li><strong>Host networks</strong> are best when the network stack should not be isolated from the Docker host, but you want other aspects of the container to be isolated.</li>
<li><strong>Overlay networks</strong> are best when you need containers running on different Docker hosts to communicate, or when multiple applications work together using swarm services.</li>
<li><strong>Macvlan networks</strong> are best when you are migrating from a VM setup or need your containers to look like physical hosts on your network, each with a unique MAC address.</li>
<li><strong>Third-party network plugins</strong> allow you to integrate Docker with specialized network stacks.</li>
</ul>
<h2 id="Filter-and-Format"><a href="#Filter-and-Format" class="headerlink" title="Filter and Format"></a>Filter and Format</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Filters</span><br><span class="line">       Filter output based on these conditions:</span><br><span class="line">          - ancestor=(&lt;image-name&gt;[:tag]|&lt;image-id&gt;| &lt;image@digest&gt;)</span><br><span class="line">            containers created from an image or a descendant.</span><br><span class="line">          - before=(&lt;container-name&gt;|&lt;container-id&gt;)</span><br><span class="line">          - expose=(&lt;port&gt;[/&lt;proto&gt;]|&lt;startport-endport&gt;/[&lt;proto&gt;])</span><br><span class="line">          - exited=&lt;int&gt; an exit code of &lt;int&gt;</span><br><span class="line">          - health=(starting|healthy|unhealthy|none)</span><br><span class="line">          - id=&lt;ID&gt; a container&#x27;s ID</span><br><span class="line">          - isolation=(default|process|hyperv) (Windows daemon only)</span><br><span class="line">          - is-task=(true|false)</span><br><span class="line">          - label=&lt;key&gt; or label=&lt;key&gt;=&lt;value&gt;</span><br><span class="line">          - name=&lt;string&gt; a container&#x27;s name</span><br><span class="line">          - network=(&lt;network-id&gt;|&lt;network-name&gt;)</span><br><span class="line">          - publish=(&lt;port&gt;[/&lt;proto&gt;]|&lt;startport-endport&gt;/[&lt;proto&gt;])</span><br><span class="line">          - since=(&lt;container-name&gt;|&lt;container-id&gt;)</span><br><span class="line">          - status=(created|restarting|removing|running|paused|exited)</span><br><span class="line">          - volume=(&lt;volume name&gt;|&lt;mount point destination&gt;)</span><br><span class="line"></span><br><span class="line">Format</span><br><span class="line">       The formatting option (--format) pretty-prints container output using a</span><br><span class="line">       Go template.</span><br><span class="line"></span><br><span class="line">       Valid placeholders for the Go template are listed below:</span><br><span class="line">          - .ID           - Container ID.</span><br><span class="line">          - .Image        - Image ID.</span><br><span class="line">          - .Command      - Quoted command.</span><br><span class="line">          - .CreatedAt    - Time when the container was created.</span><br><span class="line">          - .RunningFor   - Elapsed time since the container was started.</span><br><span class="line">          - .Ports        - Exposed ports.</span><br><span class="line">          - .Status       - Container status.</span><br><span class="line">          - .Size         - Container disk size.</span><br><span class="line">          - .Names        - Container names.</span><br><span class="line">          - .Labels       - All labels assigned to the container.</span><br><span class="line">          - .Label        - Value of a specific label for this container.</span><br><span class="line">                            For example &#x27;&#123;&#123;.Label &quot;com.docker.swarm.cpu&quot;&#125;&#125;&#x27;.</span><br><span class="line">          - .Mounts       - Names of the volumes mounted in this container.</span><br><span class="line">          - .Networks     - Names of the networks attached to this container.</span><br></pre></td></tr></table></figure>

<h2 id="FYI"><a href="#FYI" class="headerlink" title="FYI"></a>FYI</h2><h3 id="Container"><a href="#Container" class="headerlink" title="Container"></a>Container</h3><blockquote>
<p>docker container my_command</p>
</blockquote>
<ul>
<li><code>create </code><ul>
<li>Create a container from an image.</li>
</ul>
</li>
<li><code>start </code><ul>
<li>Start an existing container.</li>
</ul>
</li>
<li><code>run </code><ul>
<li>Create a new container and start it.</li>
</ul>
</li>
<li><code>ls </code><ul>
<li>List running containers.</li>
</ul>
</li>
<li><code>inspect </code><ul>
<li>See lots of info about a container.</li>
</ul>
</li>
<li><code>logs </code><ul>
<li>Print logs.</li>
</ul>
</li>
<li><code>stop </code><ul>
<li>Gracefully stop running container.</li>
</ul>
</li>
<li><code>kill </code><ul>
<li>Stop main process in container abruptly.</li>
</ul>
</li>
<li><code>rm</code><ul>
<li>Delete a stopped container.</li>
</ul>
</li>
</ul>
<h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><blockquote>
<p>docker image my_command</p>
</blockquote>
<ul>
<li><code>build </code><ul>
<li>Build an image.</li>
</ul>
</li>
<li><code>push</code> <ul>
<li>Push an image to a remote registry.</li>
</ul>
</li>
<li><code>ls</code> <ul>
<li>List images.</li>
</ul>
</li>
<li><code>history</code> <ul>
<li>See intermediate image info.</li>
</ul>
</li>
<li><code>inspect</code> <ul>
<li>See lots of info about an image, including the layers.</li>
</ul>
</li>
<li><code>rm</code> <ul>
<li>Delete an image.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>cli</tag>
      </tags>
  </entry>
  <entry>
    <title>config in cloud image</title>
    <url>/linux-cloud-image.html</url>
    <content><![CDATA[<h1 id="change-cloud-image-default-config"><a href="#change-cloud-image-default-config" class="headerlink" title="change cloud image default config"></a>change cloud image default config</h1><h2 id="install-package"><a href="#install-package" class="headerlink" title="install package"></a>install package</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y libguestfs-tools</span><br><span class="line"><span class="comment"># or </span></span><br><span class="line">sudo yum install -y libguestfs-tools-c</span><br></pre></td></tr></table></figure>



<h2 id="Set-root-password"><a href="#Set-root-password" class="headerlink" title="Set root password"></a>Set root password</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --root-password password:StrongRootPassword</span><br></pre></td></tr></table></figure>

<h2 id="Register-System"><a href="#Register-System" class="headerlink" title="Register System"></a>Register System</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a overcloud-full.qcow2 --run-command <span class="string">&#x27;subscription-manager register --username=[username] --password=[password]&#x27;</span></span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --run-command <span class="string">&#x27;subscription-manager attach --pool [subscription-pool]&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="Install-Software-packages-inside-an-image"><a href="#Install-Software-packages-inside-an-image" class="headerlink" title="Install Software packages inside an image"></a>Install Software packages inside an image</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --install [vim,bash-completion,wget,curl,telnet,unzip]</span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --install net-tools</span><br></pre></td></tr></table></figure>

<h2 id="Upload-SSH-public-key"><a href="#Upload-SSH-public-key" class="headerlink" title="Upload SSH public key"></a>Upload SSH public key</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set ssh-key for a user(The user must exist in image)</span></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2  --ssh-inject root:file:./id_rsa.pub</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --run-command <span class="string">&#x27;useradd mystic&#x27;</span> \</span><br><span class="line">	--ssh-inject mystic:file:~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<h2 id="Uploading-files"><a href="#Uploading-files" class="headerlink" title="Uploading files"></a>Uploading files</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --upload rhsm.conf:/etc/rhsm/rhsm.conf</span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --upload yum.conf:/etc/yum.conf</span><br><span class="line"></span><br><span class="line">virt-customize -a rhel-server-7.6.qcow2 --upload proxy.sh:/etc/profile.d/</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  The format: <code>local_file_path:image_file_path</code></p>
</blockquote>
<h2 id="Set-Timezone"><a href="#Set-Timezone" class="headerlink" title="Set Timezone"></a>Set Timezone</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --timezone <span class="string">&quot;Asia/Shanghai&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Relabel-SELinux"><a href="#Relabel-SELinux" class="headerlink" title="Relabel SELinux"></a>Relabel SELinux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-customize -a rhel-server-7.6.qcow2 --selinux-relabel</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>image</tag>
      </tags>
  </entry>
  <entry>
    <title>proxy in linux</title>
    <url>/linux-proxy.html</url>
    <content><![CDATA[<h1 id="proxy-for-linux-centos-rhel"><a href="#proxy-for-linux-centos-rhel" class="headerlink" title="proxy for linux(centos/rhel)"></a>proxy for linux(centos/rhel)</h1><p>Define the environment variables in /etc/environment file if you want to add a permanent proxy in the CentOS/RHEL 7.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;all_proxy=http://proxy.example.com:3128/&quot;</span> &gt; /etc/environment</span><br></pre></td></tr></table></figure>



<p>For <strong>bash</strong> and <strong>sh</strong> users, add the export line given above into a new file called <strong>/etc/profile.d/http_proxy.sh</strong> file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export all_proxy=http://proxy.example.com:3128/&quot;</span> &gt; /etc/profile.d/http_proxy.sh</span><br></pre></td></tr></table></figure>

<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a><code>PS</code></h2><table>
<thead>
<tr>
<th>Env Variable</th>
<th>Desc</th>
<th>e.g.</th>
</tr>
</thead>
<tbody><tr>
<td>http_proxy</td>
<td></td>
<td>10.0.0.51:8080<br/><a href="http://10.0.0.51:8080/">http://10.0.0.51:8080</a><br/>user:<a href="mailto:&#112;&#97;&#x73;&#x73;&#x40;&#49;&#x30;&#x2e;&#48;&#x2e;&#x30;&#46;&#49;&#48;">&#112;&#97;&#x73;&#x73;&#x40;&#49;&#x30;&#x2e;&#48;&#x2e;&#x30;&#46;&#49;&#48;</a>:8080<br/>socks4://10.0.0.51:1080<br/>socks5://192.168.1.1:1080</td>
</tr>
<tr>
<td>https_proxy</td>
<td></td>
<td>ditto</td>
</tr>
<tr>
<td>ftp_proxy</td>
<td></td>
<td>ditto</td>
</tr>
<tr>
<td>all_proxy</td>
<td>if this variable is set, there is no need to set the above variables</td>
<td>ditto</td>
</tr>
<tr>
<td>no_proxy</td>
<td></td>
<td><em>.aiezu.com,10.</em>.<em>.</em>,192.168.<em>.</em>,*.local,localhost,127.0.0.1</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>set route on linux</title>
    <url>/linux-route.html</url>
    <content><![CDATA[<h1 id="linux-route"><a href="#linux-route" class="headerlink" title="linux route"></a>linux route</h1><h2 id="add-static-route"><a href="#add-static-route" class="headerlink" title="add static route"></a>add static route</h2><ul>
<li>add default static route</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Permanent</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;any net 0.0.0.0/0 gw 110.188.40.1&quot;</span> &gt;&gt; /etc/sysconfig/static-routes</span><br><span class="line"><span class="comment"># Temporary</span></span><br><span class="line">ip route add default dev vlan7</span><br><span class="line">ip route add default via 110.188.40.1</span><br><span class="line">ip route add default via 110.188.40.1 dev vlan7</span><br><span class="line">ip route add 0.0.0.0/0 dev vlan7</span><br><span class="line">ip route add 0.0.0.0/0 via 110.188.40.1</span><br><span class="line">ip route add 0.0.0.0/0 via 110.188.40.1 dev vlan7</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<ul>
<li>add specific net static route</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;any net 110.188.40.0/24 gw 110.188.40.1&quot;</span> &gt;&gt; /etc/sysconfig/static-routes</span><br></pre></td></tr></table></figure>

<h2 id="delete-route"><a href="#delete-route" class="headerlink" title="delete route"></a>delete route</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># delete default route</span></span><br><span class="line">route del default gw 110.188.40.1</span><br><span class="line">ip route del default via 110.188.18.1 dev vlan16</span><br><span class="line"><span class="comment"># delete a non-default route</span></span><br><span class="line">ip route del 110.188.18.0/24 via 110.188.18.1 dev vlan16</span><br></pre></td></tr></table></figure>

<h2 id="replace-route"><a href="#replace-route" class="headerlink" title="replace route"></a>replace route</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># work well after every network restart</span></span><br><span class="line"><span class="comment"># replace if exists, or add</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ip route replace default via 110.188.40.1 dev vlan7&quot;</span> &gt;&gt; /sbin/ifup-local</span><br><span class="line">chmod +x /sbin/ifup-local</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>

<h2 id="change-route"><a href="#change-route" class="headerlink" title="change route"></a>change route</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># change some params of existing route</span></span><br><span class="line">ip route change 192.192.13.1/24 dev ens32</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>tcpdump</title>
    <url>/linux-tcpdump.html</url>
    <content><![CDATA[<h1 id="some-common-tcpdump-cli"><a href="#some-common-tcpdump-cli" class="headerlink" title="some common tcpdump cli"></a>some common tcpdump cli</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reading / Writing Captures to a File </span></span><br><span class="line">tcpdump port 80 -w capture_file </span><br><span class="line"></span><br><span class="line"><span class="comment"># read PCAP files by using the -r switch </span></span><br><span class="line">tcpdump -r capture_file </span><br><span class="line"></span><br><span class="line"><span class="comment"># port 2000 of any nic  </span></span><br><span class="line">tcpdump -i any port 2000 –nn </span><br><span class="line"></span><br><span class="line"><span class="comment"># Everything on an interface </span></span><br><span class="line">tcpdump -i eth0 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Find Traffic by IP </span></span><br><span class="line"><span class="comment"># One of the most common queries, using host, you can see traffic that’s going to or from 1.1.1.1. </span></span><br><span class="line">tcpdump host 1.1.1.1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Filtering by Source and/or Destination </span></span><br><span class="line">tcpdump src 1.1.1.1  </span><br><span class="line">tcpdump dst 1.0.0.1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Finding Packets by Network </span></span><br><span class="line">tcpdump net 1.2.3.0/24 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Get Packet Contents with Hex Output </span></span><br><span class="line">tcpdump -c 1 -X icmp </span><br><span class="line"></span><br><span class="line"><span class="comment"># Show Traffic Related to a Specific Port </span></span><br><span class="line">tcpdump port 3389  </span><br><span class="line">tcpdump src port 1025 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Show Traffic of One Protocol </span></span><br><span class="line">tcpdump icmp </span><br><span class="line"></span><br><span class="line"><span class="comment"># Show only IP6 Traffic </span></span><br><span class="line">tcpdump ip6 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Find Traffic Using Port Ranges </span></span><br><span class="line">tcpdump portrange 21-23 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Find Traffic Based on Packet Size </span></span><br><span class="line">tcpdump less 32  </span><br><span class="line">tcpdump greater 64  </span><br><span class="line">tcpdump &lt;= 128 </span><br><span class="line"></span><br><span class="line"><span class="comment"># ==================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># It’s All About the Combinations </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= AND =========</span></span><br><span class="line"><span class="comment"># and or &amp;&amp; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= OR ========= </span></span><br><span class="line"><span class="comment"># or or || </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= EXCEPT =========</span></span><br><span class="line"><span class="comment"># not or ! </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># From specific IP and destined for a specific Port </span></span><br><span class="line"><span class="comment"># Let’s find all traffic from 10.5.2.3 going to any host on port 3389. </span></span><br><span class="line">tcpdump -nnvvS src 10.5.2.3 and dst port 3389 </span><br><span class="line"></span><br><span class="line"><span class="comment"># From One Network to Another </span></span><br><span class="line"><span class="comment"># Let’s look for all traffic coming from 192.168.x.x and going to the 10.x or 172.16.x.x networks</span></span><br><span class="line"><span class="comment"># and we’re showing hex output with no hostname resolution and one level of extra verbosity. </span></span><br><span class="line">tcpdump -nvX src net 192.168.0.0/16 and dst net 10.0.0.0/8 or 172.16.0.0/16 </span><br><span class="line"></span><br><span class="line"><span class="comment"># Non ICMP Traffic Going to a Specific IP </span></span><br><span class="line"><span class="comment"># This will show us all traffic going to 192.168.0.2 that is not ICMP. </span></span><br><span class="line">tcpdump dst 192.168.0.2 &amp;&amp; src ! icmp </span><br><span class="line">tcpdump dst 192.168.0.2 and src not icmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># catch packages from(to) eth0 or eth1</span></span><br><span class="line">tcpdump -vi eth0 || eth1 -w tmp.pcap</span><br></pre></td></tr></table></figure>

<h1 id="Advanced"><a href="#Advanced" class="headerlink" title="Advanced"></a>Advanced</h1><h2 id="match-MAC-address-amp-VLAN"><a href="#match-MAC-address-amp-VLAN" class="headerlink" title="match MAC address &amp; VLAN"></a>match MAC address &amp; VLAN</h2><ul>
<li>  ether host <MAC> - capture packets sent from and to <MAC></li>
<li>  ether src <MAC> - capture packets sent from <MAC></li>
<li>  ether dst <MAC> - capture packets sent to <MAC></li>
<li>  vlan <VLAN ID> - match <VLAN ID></li>
</ul>
<h2 id="match-protocol"><a href="#match-protocol" class="headerlink" title="match protocol"></a>match protocol</h2><p>Match protocols in L3 header:</p>
<ul>
<li>  <code>ip proto </code> - PROTO: icmp, icmp6, igmp, igrp, pim, ah, esp, vrrp, udp, or tcp</li>
</ul>
<p>Follow are abbreviations:</p>
<ul>
<li>  <code>icmp</code> = <code>proto icmp</code></li>
<li>  <code>tcp</code> = <code>proto tcp</code></li>
<li>  <code>udp</code> = <code>proto udp</code></li>
</ul>
<p>Match protocols in L2 header:</p>
<ul>
<li>  <code>ether proto </code> - PROTO: ip, ip6, arp, rarp, atalk, aarp, decnet, sca, lat, mopdl, moprc, iso, stp, ipx, or netbeui</li>
</ul>
<p>Follow are abbreviations:</p>
<ul>
<li>  <code>ip</code> = <code>ether proto ip</code></li>
<li>  <code>ip6</code> = <code>ether proto ip6</code></li>
<li>  <code>arp</code> = <code>ether proto arp</code></li>
<li>  <code>rarp</code> = <code>ether proto rarp</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tcpdump -i eth0 arp</span><br><span class="line">tcpdump -i eth0 icmp</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Create a middleware in Flask</title>
    <url>/middleware-in-flask.html</url>
    <content><![CDATA[<h1 id="Middleware-in-Flask"><a href="#Middleware-in-Flask" class="headerlink" title="Middleware in Flask"></a>Middleware in Flask</h1><p>How to implement middleware in Flask, just like in Django?</p>
<p>In Flask, we can implement it by <strong>WSGI middleware</strong>.</p>
<h2 id="WSGI-Middleware"><a href="#WSGI-Middleware" class="headerlink" title="WSGI Middleware"></a>WSGI Middleware</h2><p>A WSGI middleware component is a Python callable that is itself a WSGI application, but may handle requests by delegating to other WSGI applications. These applications can themselves be WSGI middleware components.</p>
<p>A middleware component can perform such functions as:</p>
<ul>
<li>Routing a request to different application objects based on the target URL, after changing the environment variables accordingly.</li>
<li>Allowing multiple applications or frameworks to run side-by-side in the same process</li>
<li>Load balancing and remote processing, by forwarding requests and responses over a network</li>
<li>Performing content post-processing, such as applying XSLT stylesheets</li>
</ul>
<h2 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><p>Here is a <a href="https://github.com/pplmx/LearningPython/tree/master/flask">simple demo</a>.</p>
<h3 id="log-middleware"><a href="#log-middleware" class="headerlink" title="log middleware"></a>log middleware</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> werkzeug <span class="keyword">import</span> Request, Response</span><br><span class="line"></span><br><span class="line">AUDIT_LOG = <span class="string">&#x27;cc.log&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OperationLogMiddleware</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, app</span>):</span></span><br><span class="line">        self._app = app</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, environ, start_response</span>):</span></span><br><span class="line">        req = Request(environ)</span><br><span class="line">        resp = Response(start_response)</span><br><span class="line">        self._process_request(req)</span><br><span class="line">        self._process_response(resp)</span><br><span class="line">        <span class="keyword">return</span> self._app(environ, start_response)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_process_request</span>(<span class="params">request</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(AUDIT_LOG, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;hello request: <span class="subst">&#123;request.method&#125;</span>&#x27;</span>, file=f)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_process_response</span>(<span class="params">response</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(AUDIT_LOG, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;hello response: <span class="subst">&#123;response.status_code&#125;</span>&#x27;</span>, file=f)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="flask-main-py"><a href="#flask-main-py" class="headerlink" title="flask main.py"></a>flask main.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, url_for</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> redirect</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> middleware.operation_log <span class="keyword">import</span> OperationLogMiddleware</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the custom middleware</span></span><br><span class="line">app.wsgi_app = OperationLogMiddleware(app.wsgi_app)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>(<span class="params">name: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;Hello <span class="subst">&#123;name&#125;</span>!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/apply/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_redirect</span>(<span class="params">name: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;hello_admin&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;hello_guest&#x27;</span>, guest=name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_admin</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello Admin&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/guest/&lt;guest&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_guest</span>(<span class="params">guest</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;Hello <span class="subst">&#123;guest&#125;</span> as Guest&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>flask</tag>
        <tag>wsgi</tag>
        <tag>middleware</tag>
      </tags>
  </entry>
  <entry>
    <title>Modifiers Order in Java</title>
    <url>/modifiers-order-in-java.html</url>
    <content><![CDATA[<h1 id="Modifiers-Order"><a href="#Modifiers-Order" class="headerlink" title="Modifiers Order"></a>Modifiers Order</h1><p>The Java Language Specification recommends listing modifiers in the following order:</p>
<ol>
<li>Annotations</li>
<li>public/protected/private</li>
<li>abstract</li>
<li>static</li>
<li>final</li>
<li>transient</li>
<li>volatile</li>
<li>synchronized</li>
<li>native</li>
<li>strictfp</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s understand what&#39;s lldp.</title>
    <url>/net-lldp.html</url>
    <content><![CDATA[<h1 id="LLDP"><a href="#LLDP" class="headerlink" title="LLDP"></a>LLDP</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>目前，网络设备的种类日益繁多且各自的配置错综复杂，为了使不同厂商的设备能够在网络中相互发现并交互各自的系统及配置信息，需要有一个标准的信息交流平台。</p>
<p>LLDP（Link Layer Discovery Protocol，<strong>链路层发现协议</strong>）就是在这样的背景下产生的，它提供了一种标准的链路层发现方式，可以将本端设备的<strong>主要能力</strong>、<strong>管理地址</strong>、<strong>设备标识</strong>、<strong>接口标识</strong>等信息组织成不同的<code>TLV</code>（Type/Length/Value，类型/长度/值），并封装在LLDPDU（LLDP Data Unit，<strong>链路层发现协议数据单元</strong>）中发布给与自己直连的邻居，邻居收到这些信息后将其以标准MIB（Management Information Base，<strong>管理信息库</strong>）的形式保存起来，以供网络管理系统查询及判断链路的通信状况。</p>
<p>类似的还有Cisco Discovery Protocol, Foundry Discovery Protocol, Nortel Discovery Protocol, etc.</p>
<h2 id="Frame-Structure"><a href="#Frame-Structure" class="headerlink" title="Frame Structure"></a>Frame Structure</h2><p>LLDP的以太帧通常有DST MAC, SRC MAC, EtherType(0x88cc). 以及LLDPDU和FCS组成.</p>
<p><strong>Ethernet Frame structure</strong>:</p>
<table>
<thead>
<tr>
<th align="center"><a href="https://en.wikipedia.org/wiki/Preamble_(communication)">Preamble</a></th>
<th align="center">Destination MAC</th>
<th align="center">Source MAC</th>
<th align="center"><a href="https://en.wikipedia.org/wiki/Ethertype">Ethertype</a></th>
<th>LLDPDU</th>
<th align="center"><a href="https://en.wikipedia.org/wiki/Frame_check_sequence">Frame check sequence</a></th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td align="center">01:80:c2:00:00:0e, or 01:80:c2:00:00:03, or 01:80:c2:00:00:00</td>
<td align="center">Station’s address</td>
<td align="center">0x88CC</td>
<td></td>
<td align="center"></td>
</tr>
</tbody></table>
<p><strong>LLDPDU</strong>:</p>
<table>
<thead>
<tr>
<th>Chassis ID TLV</th>
<th>Port ID TLV</th>
<th>Time to live TLV</th>
<th>Optional TLV(s)</th>
<th>End of  LLDPDU TLV</th>
</tr>
</thead>
<tbody><tr>
<td>Type=1</td>
<td>Type=2</td>
<td>Type=3</td>
<td>Optional TLV</td>
<td>…</td>
</tr>
</tbody></table>
<p><strong>TLV structures</strong>:</p>
<table>
<thead>
<tr>
<th align="center">Type</th>
<th align="center">Length</th>
<th align="center">Value</th>
</tr>
</thead>
<tbody><tr>
<td align="center">7 bits</td>
<td align="center">9 bits</td>
<td align="center">0-511 octets</td>
</tr>
</tbody></table>
<p><strong>TLV type values</strong>:</p>
<table>
<thead>
<tr>
<th align="center">TLV type</th>
<th align="center">TLV name</th>
<th align="center">Usage in LLDPDU</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">End of LLDPDU</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">Chassis ID</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">Port ID</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">Time To Live</td>
<td align="center">Mandatory</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">Port description</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">System name</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">System description</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">System capabilities</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">Management address</td>
<td align="center">Optional</td>
</tr>
<tr>
<td align="center">9–126</td>
<td align="center">Reserved</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center">127</td>
<td align="center">Custom TLVs</td>
<td align="center">Optional</td>
</tr>
</tbody></table>
<p>Custom TLVs are supported via a TLV type 127. The value of a custom TLV starts with a 24-bit organizationally unique identifier and a 1 byte organizationally specific subtype followed by data. The basic format for an organizationally specific TLV is shown below:</p>
<table>
<thead>
<tr>
<th align="center">Type</th>
<th align="center">Length</th>
<th align="center">Organizationally unique identifier (OUI)</th>
<th align="center">Organizationally defined subtype</th>
<th align="center">Organizationally defined information string</th>
</tr>
</thead>
<tbody><tr>
<td align="center">7 bits—127</td>
<td align="center">9 bits</td>
<td align="center">24 bits</td>
<td align="center">8 bits</td>
<td align="center">0-507 octets</td>
</tr>
</tbody></table>
<p>According to IEEE Std 802.1AB, §9.6.1.3, “The Organizationally Unique Identifier shall contain the organization’s OUI as defined in IEEE Std 802-2001.” Each organization is responsible for managing their subtypes.</p>
<h2 id="Work-Mechanism"><a href="#Work-Mechanism" class="headerlink" title="Work Mechanism"></a>Work Mechanism</h2><h3 id="LLDP工作模式"><a href="#LLDP工作模式" class="headerlink" title="LLDP工作模式"></a>LLDP工作模式</h3><ul>
<li>  TxRx: 既发送也接收LLDP报文</li>
<li>  Tx: 只发送LLDP报文</li>
<li>  Rx: 只接收LLDP报文</li>
<li>  Disable: 既不发送也不接收LLDP报文</li>
</ul>
<p>当端口的LLDP工作模式发生变化时，端口将对协议状态机进行初始化操作。为了避免端口工作模式频繁改变而导致端口不断执行初始化操作，可配置端口初始化延迟时间，当端口工作模式改变时延迟一段时间再执行初始化操作。</p>
<h3 id="LLDP发送机制"><a href="#LLDP发送机制" class="headerlink" title="LLDP发送机制"></a>LLDP发送机制</h3><blockquote>
<p>  当端口工作在TxRx或Tx模式时，设备会周期性地向邻居设备发送LLDP报文。如果设备的本地配置发生变化则立即发送LLDP报文，以将本地信息的变化情况尽快通知给邻居设备。但为了防止本地信息的频繁变化而引起LLDP报文的大量发送，每发送一个LLDP报文后都需延迟一段时间后再继续发送下一个报文。</p>
<p>  当设备的工作模式由Disable/Rx切换为TxRx/Tx，或者发现了新的邻居设备（即收到一个新的LLDP报文且本地尚未保存发送该报文设备的信息）时，该设备将自动启用快速发送机制，即将LLDP报文的发送周期缩短为1秒，并连续发送指定数量的LLDP报文后再恢复为正常的发送周期。</p>
</blockquote>
<h3 id="LLDP接收机制"><a href="#LLDP接收机制" class="headerlink" title="LLDP接收机制"></a>LLDP接收机制</h3><blockquote>
<p>  当端口工作在TxRx或Rx模式时，设备会对收到的LLDP报文及其携带的TLV进行有效性检查，通过检查后再将邻居信息保存到本地，并根据TTL（Time To Live，生存时间） TLV中TTL的值来设置邻居信息在本地设备上的老化时间，若该值为零，则立刻老化该邻居信息。</p>
</blockquote>
<p><a href="http://www.h3c.com/cn/d_200805/605853_30003_0.htm">H3C LLDP Information</a></p>
<p><a href="https://en.wikipedia.org/wiki/Link_Layer_Discovery_Protocol">LLDP wiki</a></p>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>protocol</tag>
      </tags>
  </entry>
  <entry>
    <title>trunk in switch</title>
    <url>/net-switch-trunk.html</url>
    <content><![CDATA[<h1 id="Trunk"><a href="#Trunk" class="headerlink" title="Trunk"></a>Trunk</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><blockquote>
<p>  <a href="https://wenku.baidu.com/view/6694697d657d27284b73f242336c1eb91a373323.html">https://wenku.baidu.com/view/6694697d657d27284b73f242336c1eb91a373323.html</a></p>
</blockquote>
<h2 id="vlan-between-switches"><a href="#vlan-between-switches" class="headerlink" title="vlan between switches"></a>vlan between switches</h2><p><img src="assets/trunk.png" alt="trunk"></p>
<p>PC1 sends traffic to PC2 after processing its host routing table. These nodes are in the same VLAN but they are connected to different switches. The basic process:</p>
<ol>
<li> The Ethernet frame leaves PC1 and is received by Switch 1.</li>
<li> The Switch 1 SAT indicates that the destination is on the other end of the trunk line.</li>
<li> Switch 1 uses the trunking protocol to modify the Ethernet frame by adding the VLAN id.</li>
<li> The new frame leaves the trunk port on Switch1 and is received by Switch 2.</li>
<li> Switch2 reads the VLAN id and strips off the trunking protocol.</li>
<li> The original frame is forwarded to the destination (port 4) based on the SAT of Switch 2.</li>
</ol>
<h2 id="Openstack-Trunk"><a href="#Openstack-Trunk" class="headerlink" title="Openstack Trunk"></a>Openstack Trunk</h2><p><img src="assets/20200424170120849.png" alt="openstack trunk port"></p>
<p><a href="https://object-storage-ca-ymq-1.vexxhost.net/swift/v1/6e4619c416ff4bd19e1c087f27a43eea/www-assets-prod/presentation-media/Neutron-Trunks.pdf">Reference from here1</a></p>
<p><a href="https://www.oreilly.com/library/view/packet-guide-to/9781449311315/ch04.html">Reference from here2</a></p>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>device</tag>
      </tags>
  </entry>
  <entry>
    <title>Switch</title>
    <url>/net-switch.html</url>
    <content><![CDATA[<h1 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h3 id="Link-Type"><a href="#Link-Type" class="headerlink" title="Link Type"></a>Link Type</h3><blockquote>
<p>  The link type of VLAN can be divided into <strong>access link</strong> and <strong>trunk link</strong>.</p>
</blockquote>
<h4 id="Access-Link"><a href="#Access-Link" class="headerlink" title="Access Link"></a>Access Link</h4><ul>
<li>  Access link is part of only one VLAN, and normally is for end devices.</li>
<li>  Any device attached to an access link is unaware of a VLAN membership.</li>
<li>  An access-link connection can understand only standard Ethernet frames.</li>
<li>  Switches remove any VLAN information from the frame before it is sent to an access-link device.</li>
</ul>
<h4 id="Trunk-Link"><a href="#Trunk-Link" class="headerlink" title="Trunk Link"></a>Trunk Link</h4><ul>
<li>  Trunk link can carry multiple VLAN traffic and normally is used to connect switches to other switches or to routers.</li>
</ul>
<h2 id="Access-Port"><a href="#Access-Port" class="headerlink" title="Access Port"></a>Access Port</h2><p>l Belong to <strong>one</strong> VLAN.</p>
<p>l Commonly used to connect computer ports.</p>
<hr>
<ul>
<li>  Strip the VLAN information in the packet and forward the packet directly.</li>
</ul>
<h2 id="Trunk-Port"><a href="#Trunk-Port" class="headerlink" title="Trunk Port"></a>Trunk Port</h2><p>l Allow <strong>multiple</strong> VLANs through.</p>
<p>l Receive and send <strong>multiple</strong> VLAN packets.</p>
<p>l Typically used for connection between switches.</p>
<hr>
<ol>
<li><p> Compare the PVID of the port and the VLAN information in the packet to be transmitted.</p>
</li>
<li><p> If they are the same, proceed to Step 3, otherwise, proceed to Step 4</p>
</li>
<li><p> Strip the VLAN information in the packet and forward  the packet.</p>
</li>
<li><p> Forward the packet directly.</p>
</li>
</ol>
<h2 id="Hybrid-Port"><a href="#Hybrid-Port" class="headerlink" title="Hybrid Port"></a>Hybrid Port</h2><p>l Allow <strong>multiple</strong> VLANs through.</p>
<p>l Receive and send <strong>multiple</strong> VLAN packets.</p>
<p>l Used for connection between switches, or switch and computer.</p>
<hr>
<ol>
<li><p> Check the VLAN attributes on this port by running the command disp interface to se whether the VLAN attributes is “tagged” or “untagged”</p>
</li>
<li><p> If I is untagged, proceed to Step 3, if it is tagged, proceed to step 4.</p>
</li>
<li><p> Strip the VLAN information in the packet and forward the packet.</p>
</li>
<li><p> Forward the packet directly.</p>
</li>
</ol>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><table>
<thead>
<tr>
<th>Port Type</th>
<th align="left">Support Mode</th>
<th>Common use cases</th>
<th>Comment</th>
</tr>
</thead>
<tbody><tr>
<td>Access</td>
<td align="left">single untagged VLAN</td>
<td>PC/Printer to switch</td>
<td></td>
</tr>
<tr>
<td>Trunk</td>
<td align="left">single untagged VLAN &amp; multiple tagged VLANs</td>
<td>switch/hypervisor to switch</td>
<td>VLAN 1 can be Tagged (Untagged by default)</td>
</tr>
<tr>
<td>Hybrid</td>
<td align="left">Support Untagged VLANs &amp; Tagged VLANs</td>
<td>1. Physical Connection: IP Phone to Network Switch Port &amp; a PC to IP Phone’s Switch port; 2. Logical Connection: Voice VLAN as Tagged &amp; Data VLAN as Untagged &amp; Switch port in Trunk mode</td>
<td>1. Usually the Untagged VLAN number = Native/Default VLAN number; 2. Support for multi-Untagged Frames, usually require the use of protocol-based VLANs; 3. VLAN 1 can be Tagged (Untagged by default)</td>
</tr>
</tbody></table>
<p><img src="assets/switch-egg.jpg" alt="switch-egg"></p>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>device</tag>
      </tags>
  </entry>
  <entry>
    <title>VLAN</title>
    <url>/net-vlan.html</url>
    <content><![CDATA[<h1 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h1><blockquote>
<p>  <a href="https://www.utepo.net/article/detail/255.html">Get to Know Basic Knwoledge of VLAN(Part 1)</a></p>
<p>  <a href="https://www.utepo.net/article/detail/295.html">Get to Know Basic Knwoledge of VLAN(Part 2)</a></p>
</blockquote>
<h2 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h2><ol>
<li><p>reduce broadcast storm</p>
<blockquote>
<p>  The key advantage of VLAN is that it can isolate the conflict domain as well as broadcast domain. If there are hundreds of hosts in a LAN, the network would be completely paralyzed when a broadcast storm happened. Meanwhile, users can divide the broadcast domain through VLAN, limiting the broadcast to each VLAN, and can not be transferred to cross VLAN. Most important, as consideration to improved security, the broadcasts of different VLANS can not communicate without a layer 3 router.</p>
</blockquote>
</li>
<li><p>simplify the administration of the network</p>
<blockquote>
<p>  One of the best things about VLAN is that it simplifies management. By logically grouping users into the same virtual networks, you make it easy to set up and control your policies at a group level. When users physically move workstations, you can keep them on the same network with different equipment. Or if someone changes teams but not workstations, they can easily be given access to whatever new VLANs they need.</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>network</category>
      </categories>
      <tags>
        <tag>device</tag>
      </tags>
  </entry>
  <entry>
    <title>Difference between OOP and POP</title>
    <url>/oop-pop.html</url>
    <content><![CDATA[<h1 id="General-Information"><a href="#General-Information" class="headerlink" title="General Information"></a>General Information</h1><h2 id="Procedure-Oriented-Programming-POP"><a href="#Procedure-Oriented-Programming-POP" class="headerlink" title="Procedure Oriented Programming(POP)"></a>Procedure Oriented Programming(POP)</h2><blockquote>
<p>   <a href="https://www.geeksforgeeks.org/introduction-of-programming-paradigms/">Procedural Programming</a> can be defined as a programming model which is derived from structured programming, based upon the concept of calling procedure. Procedures, also known as routines, subroutines or functions, simply consist of a series of computational steps to be carried out. During a program’s execution, any given procedure might be called at any point, including by other procedures or itself. </p>
</blockquote>
<h2 id="Object-Oriented-Programming-OOP"><a href="#Object-Oriented-Programming-OOP" class="headerlink" title="Object Oriented Programming(OOP)"></a>Object Oriented Programming(OOP)</h2><blockquote>
<p>   <a href="https://www.geeksforgeeks.org/basic-concepts-of-object-oriented-programming-using-c/">Object oriented programming</a> can be defined as a programming model which is based upon the concept of objects. Objects contain data in the form of attributes and code in the form of methods. In object oriented programming, computer programs are designed using the concept of objects that interact with real world. Object oriented programming languages are various but the most popular ones are class-based, meaning that objects are instances of classes, which also determine their types. </p>
</blockquote>
<h2 id="Difference-between-POP-and-OOP"><a href="#Difference-between-POP-and-OOP" class="headerlink" title="Difference between POP and OOP"></a>Difference between POP and OOP</h2><table>
<thead>
<tr>
<th align="center">POP</th>
<th align="center">OOP</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Program is divided into small parts called <strong>functions</strong>.</td>
<td align="center">Program is divided into small parts called <strong>objects</strong>.</td>
</tr>
<tr>
<td align="center">POP follows <strong>top-down approach</strong>.</td>
<td align="center">OOP follows <strong>bottom-up approach</strong>.</td>
</tr>
<tr>
<td align="center">There is no access specifier in procedural programming.</td>
<td align="center">Object oriented programming have access specifiers like private, public, protected etc.</td>
</tr>
<tr>
<td align="center">Adding new data and function is not easy.</td>
<td align="center">Adding new data and function is easy.</td>
</tr>
<tr>
<td align="center">POP does not have any proper way for hiding data so it is <strong>less secure</strong>.</td>
<td align="center">OOP provides data hiding so it is <strong>more secure</strong>.</td>
</tr>
<tr>
<td align="center">Overloading is impossible.</td>
<td align="center">Overloading is possible.</td>
</tr>
<tr>
<td align="center">Function is more important than data.</td>
<td align="center">Data is more important than function.</td>
</tr>
<tr>
<td align="center">POP is based on <strong>unreal world</strong>.</td>
<td align="center">OOP is based on <strong>real world</strong>.</td>
</tr>
<tr>
<td align="center">FORTRAN, ALGOL, COBOL,  BASIC, Pascal and C.</td>
<td align="center">Java, C++, C#, Python,  PHP, JavaScript, Ruby, Perl,  Objective-C, Dart, Swift, Scala.</td>
</tr>
</tbody></table>
<h2 id="Interpreted-Languages"><a href="#Interpreted-Languages" class="headerlink" title="Interpreted Languages"></a>Interpreted Languages</h2><blockquote>
<p>  Interpreters will run through a program line by line and execute each command. Now, if the author decided he wanted to use a different kind of olive oil, he could scratch the old one out and add the new one. Your translator friend can then convey that change to you as it happens.</p>
<p>  Interpreted languages were once known to be significantly slower than compiled languages. But, with the development of <a href="https://guide.freecodecamp.org/computer-science/just-in-time-compilation">just-in-time compilation</a>, that gap is shrinking.</p>
<p>  Examples of common interpreted languages are PHP, Ruby, Python, and JavaScript.</p>
</blockquote>
<h2 id="Compiled-Languages"><a href="#Compiled-Languages" class="headerlink" title="Compiled Languages"></a>Compiled Languages</h2><blockquote>
<p>  Compiled languages are converted directly into machine code that the processor can execute. As a result, they tend to be faster and more efficient to execute than interpreted languages. They also give the developer more control over hardware aspects, like memory management and CPU usage.</p>
<p>  Compiled languages need a “build” step - they need to be manually compiled first. You need to “rebuild” the program every time you need to make a change. In our hummus example, the entire translation is written before it gets to you. If the original author decided he wanted to use a different kind of olive oil, the entire recipe would need to be translated again and then sent to you.</p>
<p>  Examples of pure compiled languages are C, C++, Erlang, Haskell, Rust, and Go.</p>
</blockquote>
<h4 id="Advantages-of-Compiled-Languages"><a href="#Advantages-of-Compiled-Languages" class="headerlink" title="Advantages of Compiled Languages"></a>Advantages of Compiled Languages</h4><p>Programs compiled into native code at compile time usually tend to be faster than those translated at run time, due to the overhead of the translation process.</p>
<h4 id="Disadvantages-of-Compiled-Languages"><a href="#Disadvantages-of-Compiled-Languages" class="headerlink" title="Disadvantages of Compiled Languages"></a>Disadvantages of Compiled Languages</h4><p>The most notable disadvantages are :-</p>
<ul>
<li>  Additional time needed to complete the entire compilation step before testing, and</li>
<li>  Platform dependence of the generated binary code.</li>
</ul>
<h4 id="Advantages-of-Interpreted-Languages"><a href="#Advantages-of-Interpreted-Languages" class="headerlink" title="Advantages of Interpreted Languages"></a>Advantages of Interpreted Languages</h4><p>An Interpreted language gives implementations some additional flexibility over compiled implementations. Because interpreters execute the source program code themselves, the code itself is platform independent (Java’s byte code, for example). Other features include dynamic typing, and smaller executable program size.</p>
<h4 id="Disadvantages-of-Interpreted-Languages"><a href="#Disadvantages-of-Interpreted-Languages" class="headerlink" title="Disadvantages of Interpreted Languages"></a>Disadvantages of Interpreted Languages</h4><p>The most notable disadvantage is typical execution speed compared to compiled languages.</p>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>OOP</tag>
        <tag>POP</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack Volume</title>
    <url>/openstack-volume.html</url>
    <content><![CDATA[<h1 id="OpenStack-Volume"><a href="#OpenStack-Volume" class="headerlink" title="OpenStack Volume"></a>OpenStack Volume</h1><h2 id="FYI"><a href="#FYI" class="headerlink" title="FYI"></a>FYI</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list the compute nodes where the servers locate</span></span><br><span class="line">openstack server list --long -c ID -c Name -c Host -c <span class="string">&#x27;Power State&#x27;</span> -c <span class="string">&#x27;Networks&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list the instance names that are servers&#x27; alias</span></span><br><span class="line">openstack server show vm4qos1 -c id -c name -c <span class="string">&#x27;OS-EXT-SRV-ATTR:host&#x27;</span> -c <span class="string">&#x27;OS-EXT-SRV-ATTR:instance_name&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># merge the above two command</span></span><br><span class="line"><span class="comment"># get some servers&#x27; instance_name, host and so on</span></span><br><span class="line">openstack server list -c ID -c Name | \</span><br><span class="line">	grep vm4qos* | \</span><br><span class="line">	awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span> | \</span><br><span class="line">	sed <span class="string">&#x27;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span> | \</span><br><span class="line">	xargs -n1 openstack server show -c id -c name -c addresses -c <span class="string">&#x27;OS-EXT-SRV-ATTR:host&#x27;</span> -c <span class="string">&#x27;OS-EXT-SRV-ATTR:instance_name&#x27;</span></span><br><span class="line">	</span><br><span class="line"><span class="comment"># or nova list, the same as above</span></span><br><span class="line"><span class="comment"># fields can get from `nova show some-vm`&#x27;s Property </span></span><br><span class="line">nova list --fields name,OS-EXT-SRV-ATTR:instance_name,OS-EXT-SRV-ATTR:host</span><br><span class="line">nova list --fields name,OS-EXT-SRV-ATTR:instance_name,OS-EXT-SRV-ATTR:host --name vm4qos*</span><br></pre></td></tr></table></figure>



<h2 id="Prepare-Environment-for-QoS"><a href="#Prepare-Environment-for-QoS" class="headerlink" title="Prepare Environment for QoS"></a>Prepare Environment for QoS</h2><p><strong>pre_env4qos.sh</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Firstly, create network</span></span><br><span class="line">netw_id=$(openstack network create cc_net_1 -c id | awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $3 &#125;&#x27;</span> | sed <span class="string">&#x27;1,3d;$d;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span></span><br><span class="line"><span class="comment"># neutron subnet-create --name cc_net_1_sub $&#123;netw_id&#125; 192.168.1.0/24</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">openstack subnet create cc_net_1_sub --network <span class="variable">$&#123;netw_id&#125;</span> --subnet-range 192.168.1.0/24</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. create volume type</span></span><br><span class="line">openstack volume <span class="built_in">type</span> create frontend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> create frontend_qos_2</span><br><span class="line"></span><br><span class="line">openstack volume <span class="built_in">type</span> create backend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> create backend_qos_2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.1. create a QoS-1</span></span><br><span class="line">openstack volume qos create qos1 --consumer front-end \</span><br><span class="line">--property read_iops_sec=2000 \</span><br><span class="line">--property write_iops_sec=2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.2. create a QoS-111</span></span><br><span class="line">openstack volume qos create qos111 --consumer back-end \</span><br><span class="line">--property read_iops_sec=2000 \</span><br><span class="line">--property write_iops_sec=2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. associate QoS and volume type</span></span><br><span class="line">openstack volume qos associate qos1 frontend_qos_1</span><br><span class="line">openstack volume qos associate qos1 frontend_qos_2</span><br><span class="line"></span><br><span class="line">openstack volume qos associate qos111 backend_qos_1</span><br><span class="line">openstack volume qos associate qos111 backend_qos_2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. create volumes</span></span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_1 --size 1 volume01</span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_1 --size 1 volume02</span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_2 --size 2 volume03</span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_2 --size 2 volume04</span><br><span class="line"></span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_1 --size 1 volume11</span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_1 --size 1 volume12</span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_2 --size 2 volume13</span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_2 --size 2 volume14</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. create a vm</span></span><br><span class="line">openstack server create vm4qos1 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos2 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos3 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos4 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">openstack server create vm4qos11 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos12 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos13 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos14 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wait for creating VMs</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Creating VMs, please wait for 80s.&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span></span><br><span class="line">sleep 80</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. attach a volume for a vm</span></span><br><span class="line"><span class="comment"># openstack server add volume INSTANCE_ID VOLUME_ID</span></span><br><span class="line">openstack server add volume vm4qos1 volume01</span><br><span class="line">openstack server add volume vm4qos2 volume02</span><br><span class="line">openstack server add volume vm4qos3 volume03</span><br><span class="line">openstack server add volume vm4qos4 volume04</span><br><span class="line"></span><br><span class="line">openstack server add volume vm4qos11 volume11</span><br><span class="line">openstack server add volume vm4qos12 volume12</span><br><span class="line">openstack server add volume vm4qos13 volume13</span><br><span class="line">openstack server add volume vm4qos14 volume14</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Remove-Env-for-QoS"><a href="#Remove-Env-for-QoS" class="headerlink" title="Remove Env for QoS"></a>Remove Env for QoS</h2><p><strong>del_env4qos.sh</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ******** reset env ********</span></span><br><span class="line"><span class="comment"># delete server</span></span><br><span class="line">openstack server delete vm4qos1</span><br><span class="line">openstack server delete vm4qos2</span><br><span class="line">openstack server delete vm4qos3</span><br><span class="line">openstack server delete vm4qos4</span><br><span class="line"></span><br><span class="line">openstack server delete vm4qos11</span><br><span class="line">openstack server delete vm4qos12</span><br><span class="line">openstack server delete vm4qos13</span><br><span class="line">openstack server delete vm4qos14</span><br><span class="line"></span><br><span class="line"><span class="comment"># wait for deleting VMs</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Deleting VMs, please wait for 80s.&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span></span><br><span class="line">sleep 80</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete volume</span></span><br><span class="line">openstack volume delete volume01</span><br><span class="line">openstack volume delete volume02</span><br><span class="line">openstack volume delete volume03</span><br><span class="line">openstack volume delete volume04</span><br><span class="line"></span><br><span class="line">openstack volume delete volume11</span><br><span class="line">openstack volume delete volume12</span><br><span class="line">openstack volume delete volume13</span><br><span class="line">openstack volume delete volume14</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete volume type and qos</span></span><br><span class="line">openstack volume <span class="built_in">type</span> delete frontend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> delete frontend_qos_2</span><br><span class="line">openstack volume <span class="built_in">type</span> delete backend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> delete backend_qos_2</span><br><span class="line">openstack volume qos delete qos1</span><br><span class="line">openstack volume qos delete qos111</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove network</span></span><br><span class="line">openstack subnet list | grep cc_net_1_sub | awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span> | sed <span class="string">&#x27;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span> | xargs -n1 openstack subnet delete</span><br><span class="line"></span><br><span class="line">openstack network list | grep cc_net_1 | awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span> | sed <span class="string">&#x27;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span> | xargs -n1 openstack network delete</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Update-QoS"><a href="#Update-QoS" class="headerlink" title="Update QoS"></a>Update QoS</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openstack volume qos <span class="built_in">set</span> --property <span class="string">&quot;read_iops_sec=10000&quot;</span> --property <span class="string">&quot;write_iops_sec=8000&quot;</span> qos1</span><br><span class="line">openstack volume qos <span class="built_in">set</span> --property <span class="string">&quot;read_bytes_sec=2000&quot;</span> --property <span class="string">&quot;write_bytes_sec=2048&quot;</span> qos1</span><br><span class="line">openstack volume qos <span class="built_in">unset</span> --property <span class="string">&quot;read_iops_sec&quot;</span> --property <span class="string">&quot;write_iops_sec&quot;</span> qos1</span><br><span class="line">openstack volume qos disassociate qos1 --volume-type frontend_qos_2</span><br><span class="line">openstack volume qos disassociate qos1 --all</span><br><span class="line">openstack volume qos associate qos1 frontend_qos_1</span><br><span class="line">openstack volume qos associate qos1 frontend_qos_2</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>openstack</category>
      </categories>
      <tags>
        <tag>storage</tag>
        <tag>cinder</tag>
      </tags>
  </entry>
  <entry>
    <title>Some Info about SUSE</title>
    <url>/opensuse.html</url>
    <content><![CDATA[<h1 id="zypper"><a href="#zypper" class="headerlink" title="zypper"></a>zypper</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># update all packages</span></span><br><span class="line">sudo zypper refresh</span><br><span class="line"><span class="comment"># or sudo zypper ref</span></span><br><span class="line">sudo zypper update</span><br><span class="line"><span class="comment"># or sudo zypper up</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list repos</span></span><br><span class="line">zypper lr</span><br><span class="line"><span class="comment"># add a repo</span></span><br><span class="line">zypper ar https://mirrors.aliyun.com/opensuse/update/leap/15.2/oss/ aliyun-suse-oss</span><br><span class="line"><span class="comment"># remove a repo</span></span><br><span class="line">zypper rr aliyun-suse-oss</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable the first repo</span></span><br><span class="line">zypper mr -e 1</span><br><span class="line"><span class="comment"># disable the second repo</span></span><br><span class="line">zypper mr -d 2</span><br><span class="line"><span class="comment"># enable caching for all repos</span></span><br><span class="line">zypper mr -ka</span><br><span class="line"><span class="comment"># disable caching for all repos</span></span><br><span class="line">zypper mr -Ka</span><br><span class="line"><span class="comment"># disable gpg check for all repos</span></span><br><span class="line">zypper mr -Ga</span><br></pre></td></tr></table></figure>

<h2 id="zypper-some-directories-info"><a href="#zypper-some-directories-info" class="headerlink" title="zypper some directories info"></a>zypper some directories info</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/zypp/zypper.conf</span><br><span class="line">/etc/zypp/locks</span><br><span class="line"></span><br><span class="line"># Directory containing repository definition (*.repo) files.</span><br><span class="line">/etc/zypp/repos.d</span><br><span class="line"></span><br><span class="line"># Directory containing service definition (*.service) files.</span><br><span class="line">/etc/zypp/services.d</span><br><span class="line"></span><br><span class="line"># System directory containing zypper extensions</span><br><span class="line">/usr/lib/zypper/commands</span><br><span class="line"></span><br><span class="line"># Directory for storing raw metadata contained in repositories.</span><br><span class="line">/var/cache/zypp/raw</span><br><span class="line"></span><br><span class="line"># Directory containing preparsed metadata in form of solv files.</span><br><span class="line">/var/cache/zypp/solv</span><br><span class="line"></span><br><span class="line"># If keeppackages property is set for a repository (see the modifyrepo command)</span><br><span class="line"># all the RPM file downloaded during installation will be kept here.</span><br><span class="line">/var/cache/zypp/packages</span><br><span class="line"></span><br><span class="line"># Installation history log.</span><br><span class="line">/var/log/zypp/history</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>opensuse</tag>
      </tags>
  </entry>
  <entry>
    <title>Override&amp;Overload in Java and Python</title>
    <url>/overload-override-in-java-python.html</url>
    <content><![CDATA[<h1 id="Override-amp-Overload-in-Java-amp-Python"><a href="#Override-amp-Overload-in-Java-amp-Python" class="headerlink" title="Override &amp; Overload in Java &amp; Python"></a>Override &amp; Overload in Java &amp; Python</h1><h2 id="In-Java"><a href="#In-Java" class="headerlink" title="In Java"></a>In Java</h2><table>
<thead>
<tr>
<th>Overload</th>
<th>Override</th>
</tr>
</thead>
<tbody><tr>
<td>参数列表: 必须<strong>不同</strong></td>
<td>参数列表: 必须<strong>一致</strong></td>
</tr>
<tr>
<td>返回类型: 可以相同, 也可以不同</td>
<td>返回类型: 相同, 或为派生类型</td>
</tr>
<tr>
<td>一种<strong>编译时多态</strong>例子</td>
<td>一种<strong>运行时多态</strong>的例子</td>
</tr>
<tr>
<td>重载发生在<strong>同一个类</strong></td>
<td>重写发生在两个关系为<strong>is-A</strong>的类中</td>
</tr>
</tbody></table>
<h2 id="In-Python"><a href="#In-Python" class="headerlink" title="In Python"></a>In Python</h2><table>
<thead>
<tr>
<th>Overload</th>
<th>Override</th>
</tr>
</thead>
<tbody><tr>
<td>没有重载(以下列出原因)</td>
<td>基本与java一致</td>
</tr>
<tr>
<td>重载要素: 1. 参数类型; 2. 参数数量</td>
<td>(但是以下代码可运行, 只是不建议这样写)</td>
</tr>
<tr>
<td>Python可以接受任意类型的参数</td>
<td></td>
</tr>
<tr>
<td>Python可以使用缺省参数</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">f</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self, a, b</span>):</span></span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">e</span>(<span class="params">f</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self, a, b, d</span>):</span></span><br><span class="line">        <span class="keyword">return</span> a + b + d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = e()</span><br><span class="line">    <span class="built_in">print</span>(a.add(<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取豆瓣编程书籍</title>
    <url>/pick-douban.html</url>
    <content><![CDATA[<h1 id="Something-needed-before-action"><a href="#Something-needed-before-action" class="headerlink" title="Something needed before action"></a>Something needed before action</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意:</span><br><span class="line">    lombok不仅需要导入包,还需要idea安装lombok插件</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>18.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="mind-mapping"><a href="#mind-mapping" class="headerlink" title="mind mapping"></a>mind mapping</h1><ul>
<li>进行IP代理(未使用代理,<a href="http://www.xicidaili.com/">http://www.xicidaili.com/</a> 找不到稳定可用的代理)</li>
<li>通过HttpClient获取到请求页面的String字符串</li>
<li>通过jsoup解析</li>
<li>(解析需要自己在页面查看源代码,分析DOM结构)</li>
<li>(通过使用jsoup的类似于css选择器的函数,获取元素,元素集,或者文本和属性值)</li>
<li>每一本书的值set进Book实体,并添加进List集合</li>
<li>获取页面底部的总页码数</li>
<li>循环创建线程(一个页面,一个线程)</li>
<li>List集合通过构造方法共享</li>
<li>运行结束后,应该获取到的是一个拥有所有页面的书的集合</li>
<li>根据score属性及num属性,实现Comparator接口,完成排序</li>
<li>遍历当前这个List集合,顺序为每个元素设置id属性</li>
<li>调用poi,遍历List,将每个元素按行写入excel文件</li>
</ul>
<h1 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Book实体以及Comparator实现类</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 8:54</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 书籍名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 书籍评分</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String score;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评价人数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String num;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String press;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出版日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String date;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 价格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 20:06</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Book</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *      降序: 优先评分,人数次之</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Book book2, Book book1)</span> </span>&#123;</span><br><span class="line">        String temp1 = book1.getScore();</span><br><span class="line">        String temp2 = book2.getScore();</span><br><span class="line">        <span class="keyword">if</span> (temp1 == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(temp1)) &#123;</span><br><span class="line">            temp1 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp2 == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(temp2)) &#123;</span><br><span class="line">            temp2 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 评分排序优先</span></span><br><span class="line">        <span class="keyword">double</span> num1 = Double.parseDouble(temp1);</span><br><span class="line">        <span class="keyword">double</span> num2 = Double.parseDouble(temp2);</span><br><span class="line">        <span class="keyword">int</span> result = Double.compare(num1, num2);</span><br><span class="line">        <span class="keyword">if</span> (result == <span class="number">0</span>) &#123;</span><br><span class="line">            String temp3 = book1.getNum();</span><br><span class="line">            String temp4 = book2.getNum();</span><br><span class="line">            <span class="keyword">if</span> (temp3 == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(temp3)) &#123;</span><br><span class="line">                temp3 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp4 == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(temp4)) &#123;</span><br><span class="line">                temp4 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 评分相同,则以评价人数排序</span></span><br><span class="line">            <span class="keyword">double</span> num3 = Double.parseDouble(temp3);</span><br><span class="line">            <span class="keyword">double</span> num4 = Double.parseDouble(temp4);</span><br><span class="line">            result = Double.compare(num3, num4);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Spider,抓取指定url的页面字符串</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ParseException;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 8:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Spider</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">pickData</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (CloseableHttpClient client = HttpClients.createDefault()) &#123;</span><br><span class="line">            HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">            CloseableHttpResponse response = client.execute(httpGet);</span><br><span class="line">            <span class="comment">// 获取响应实体</span></span><br><span class="line">            HttpEntity entity = response.getEntity();</span><br><span class="line">            <span class="comment">// 打印响应状态</span></span><br><span class="line">            <span class="keyword">if</span> (entity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> EntityUtils.toString(entity);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用本机ip进行获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">pick4data</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置超时处理</span></span><br><span class="line">        RequestConfig config = RequestConfig.custom().setConnectTimeout(<span class="number">3000</span>).</span><br><span class="line">                setSocketTimeout(<span class="number">3000</span>).build();</span><br><span class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">        <span class="keyword">return</span> grab(httpGet,config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用代理ip进行获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> port</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">pick4data</span><span class="params">(String url, String ip, String port)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置代理访问和超时处理</span></span><br><span class="line">        System.out.println(<span class="string">&quot;此时线程: &quot;</span> + Thread.currentThread().getName() + <span class="string">&quot; 爬取所使用的代理为: &quot;</span></span><br><span class="line">                + ip + <span class="string">&quot;:&quot;</span> + port);</span><br><span class="line">        HttpHost proxy = <span class="keyword">new</span> HttpHost(ip, Integer.parseInt(port));</span><br><span class="line">        RequestConfig config = RequestConfig.custom().setProxy(proxy).setConnectTimeout(<span class="number">3000</span>).</span><br><span class="line">                setSocketTimeout(<span class="number">3000</span>).build();</span><br><span class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">        <span class="keyword">return</span> grab(httpGet,config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">grab</span><span class="params">(HttpGet httpGet, RequestConfig config)</span></span>&#123;</span><br><span class="line">        httpGet.setConfig(config);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;text/html,application/xhtml+xml,application/xml;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;q=0.9,image/webp,*/*;q=0.8&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Accept-Encoding&quot;</span>, <span class="string">&quot;gzip, deflate, sdch&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Accept-Language&quot;</span>, <span class="string">&quot;zh-CN,zh;q=0.8&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Host&quot;</span>, <span class="string">&quot;www.xicidaili.com&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;User-Agent&quot;</span>, <span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 &quot;</span> +</span><br><span class="line">                <span class="string">&quot;(KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (CloseableHttpClient httpClient = HttpClients.createDefault();</span><br><span class="line">             <span class="comment">//客户端执行httpGet方法，返回响应</span></span><br><span class="line">             CloseableHttpResponse httpResponse = httpClient.execute(httpGet)) &#123;</span><br><span class="line">            <span class="comment">//得到服务响应状态码</span></span><br><span class="line">            <span class="keyword">int</span> status = <span class="number">200</span>;</span><br><span class="line">            <span class="keyword">if</span> (httpResponse.getStatusLine().getStatusCode() == status) &#123;</span><br><span class="line">                HttpEntity entity = httpResponse.getEntity();</span><br><span class="line">                <span class="keyword">if</span> (entity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> EntityUtils.toString(entity, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解析页面数据,并添加至List&lt;Book&gt;集合</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.pojo.Book;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.utils.Spider;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 9:29</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GrabDouban</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Book&gt; books = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">GrabDouban</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GrabDouban</span><span class="params">(List&lt;Book&gt; books)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.books = books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;url = &quot;</span> + url);</span><br><span class="line">        System.out.println(<span class="string">&quot;Thread.currentThread().getName() = &quot;</span> + Thread.currentThread().getName());</span><br><span class="line">        parse(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        String html = Spider.pickData(url);</span><br><span class="line">        <span class="comment">/*String html = Spider.pick4data(url,&quot;220.249.185.178&quot;,&quot;9999&quot;);*/</span></span><br><span class="line">        Document doc = Jsoup.parse(html);</span><br><span class="line">        Elements elements = doc.select(<span class="string">&quot;ul.subject-list li.subject-item div.info&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Element element : elements) &#123;</span><br><span class="line">            String name = element.select(<span class="string">&quot;h2 a&quot;</span>).attr(<span class="string">&quot;title&quot;</span>);</span><br><span class="line">            <span class="comment">// pub和books变量需要被锁</span></span><br><span class="line">            <span class="keyword">synchronized</span> (GrabDouban.class)&#123;</span><br><span class="line">                String[] pub = element.select(<span class="string">&quot;div.pub&quot;</span>).text().split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">                <span class="comment">// 译者或审校,不一定有;所以只能反向获取值</span></span><br><span class="line">                <span class="comment">// 并将作者和审校或译者拼接,都算作author值</span></span><br><span class="line">                String price = pub[pub.length - <span class="number">1</span>];</span><br><span class="line">                String date = pub[pub.length - <span class="number">2</span>];</span><br><span class="line">                String press = pub[pub.length - <span class="number">3</span>];</span><br><span class="line">                StringBuilder author = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">int</span> loop = <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pub.length - loop; i++) &#123;</span><br><span class="line">                    author.append(pub[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                String score = element.select(<span class="string">&quot;div.star span.rating_nums&quot;</span>).text();</span><br><span class="line">                String num = element.select(<span class="string">&quot;div.star span.pl&quot;</span>).text();</span><br><span class="line">                <span class="comment">// 截取评价人数</span></span><br><span class="line">                String regEx = <span class="string">&quot;[^0-9]&quot;</span>;</span><br><span class="line">                Pattern p = Pattern.compile(regEx);</span><br><span class="line">                Matcher m = p.matcher(num);</span><br><span class="line">                num = m.replaceAll(<span class="string">&quot;&quot;</span>).trim();</span><br><span class="line">                Book book = <span class="keyword">new</span> Book(<span class="string">&quot;&quot;</span>, name, score, num, author.toString(), press, date, price);</span><br><span class="line">                books.add(book);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ?start=20&amp;type=T</span></span><br><span class="line">        <span class="comment">// 这里是单线程执行的,结果正常返回,已打印输出</span></span><br><span class="line">        GrabDouban gd = <span class="keyword">new</span> GrabDouban();</span><br><span class="line">        gd.parse(<span class="string">&quot;https://book.douban.com/tag/%E7%BC%96%E7%A8%8B&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;gd.getBooks() = &quot;</span> + gd.getBooks());</span><br><span class="line">        <span class="comment">// 获取总页数</span></span><br><span class="line"><span class="comment">//        String html = Spider.pickData(&quot;https://book.douban.com/tag/%E7%BC%96%E7%A8%8B&quot;);</span></span><br><span class="line"><span class="comment">//        Document doc = Jsoup.parse(html);</span></span><br><span class="line"><span class="comment">//        int totalPage = Integer.parseInt(doc.select(&quot;div.paginator &gt; a&quot;).last().text());</span></span><br><span class="line"><span class="comment">//        StringBuilder sb;</span></span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; totalPage; i++) &#123;</span></span><br><span class="line"><span class="comment">//            sb = new StringBuilder(&quot;https://book.douban.com/tag/%E7%BC%96%E7%A8%8B?start=&quot;);</span></span><br><span class="line"><span class="comment">//            sb.append(i * 20);</span></span><br><span class="line"><span class="comment">//            sb.append(&quot;&amp;type=T&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">多线程抓取多个页面数据,并保存值excel中</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 17:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExportExcel</span> </span>&#123;</span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ExportExcel</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 工作簿</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HSSFWorkbook workbook;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * sheet</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HSSFSheet sheet;</span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 标题行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TITLE_START_POSITION = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 时间行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DATEHEAD_START_POSITION = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 表头行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEAD_START_POSITION = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 文本行开始位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONTENT_START_POSITION = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataList  对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap  表头信息（对象属性名称-&gt;要显示的标题值)[按顺序添加]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetName sheet名称和表头值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">excelExport</span><span class="params">(List&lt;?&gt; dataList, Map&lt;String, String&gt; titleMap, String sheetName)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化workbook</span></span><br><span class="line">        initHSSFWorkbook(sheetName);</span><br><span class="line">        <span class="comment">// 标题行</span></span><br><span class="line">        createTitleRow(titleMap, sheetName);</span><br><span class="line">        <span class="comment">// 时间行</span></span><br><span class="line">        createDateHeadRow(titleMap);</span><br><span class="line">        <span class="comment">// 表头行</span></span><br><span class="line">        createHeadRow(titleMap);</span><br><span class="line">        <span class="comment">// 文本行</span></span><br><span class="line">        createContentRow(dataList, titleMap);</span><br><span class="line">        <span class="comment">//设置自动伸缩</span></span><br><span class="line">        <span class="comment">//autoSizeColumn(titleMap.size());</span></span><br><span class="line">        <span class="comment">// 写入处理结果</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//生成UUID文件名称</span></span><br><span class="line">            UUID uuid = UUID.randomUUID();</span><br><span class="line">            String display = uuid + <span class="string">&quot;.xls&quot;</span>;</span><br><span class="line">            <span class="comment">//如果web项目，1、设置下载框的弹出（设置response相关参数)；2、通过httpservletresponse.getOutputStream()获取</span></span><br><span class="line">            OutputStream out = <span class="keyword">new</span> FileOutputStream(display);</span><br><span class="line">            workbook.write(out);</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetName</span></span><br><span class="line"><span class="comment">     *        sheetName</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initHSSFWorkbook</span><span class="params">(String sheetName)</span> </span>&#123;</span><br><span class="line">        workbook = <span class="keyword">new</span> HSSFWorkbook();</span><br><span class="line">        sheet = workbook.createSheet(sheetName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成标题（第零行创建）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap  对象属性名称-&gt;表头显示名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetName sheet名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createTitleRow</span><span class="params">(Map&lt;String, String&gt; titleMap, String sheetName)</span> </span>&#123;</span><br><span class="line">        CellRangeAddress titleRange = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, titleMap.size() - <span class="number">1</span>);</span><br><span class="line">        sheet.addMergedRegion(titleRange);</span><br><span class="line">        HSSFRow titleRow = sheet.createRow(TITLE_START_POSITION);</span><br><span class="line">        HSSFCell titleCell = titleRow.createCell(<span class="number">0</span>);</span><br><span class="line">        titleCell.setCellValue(sheetName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建时间行（第一行创建）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap 对象属性名称-&gt;表头显示名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createDateHeadRow</span><span class="params">(Map&lt;String, String&gt; titleMap)</span> </span>&#123;</span><br><span class="line">        CellRangeAddress dateRange = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, titleMap.size() - <span class="number">1</span>);</span><br><span class="line">        sheet.addMergedRegion(dateRange);</span><br><span class="line">        HSSFRow dateRow = sheet.createRow(DATEHEAD_START_POSITION);</span><br><span class="line">        HSSFCell dateCell = dateRow.createCell(<span class="number">0</span>);</span><br><span class="line">        dateCell.setCellValue(<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日&quot;</span>).format(<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建表头行（第二行创建）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap 对象属性名称-&gt;表头显示名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createHeadRow</span><span class="params">(Map&lt;String, String&gt; titleMap)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 第1行创建</span></span><br><span class="line">        HSSFRow headRow = sheet.createRow(HEAD_START_POSITION);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String entry : titleMap.keySet()) &#123;</span><br><span class="line">            HSSFCell headCell = headRow.createCell(i);</span><br><span class="line">            headCell.setCellValue(titleMap.get(entry));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataList 对象数据集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleMap 表头信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createContentRow</span><span class="params">(List&lt;?&gt; dataList, Map&lt;String, String&gt; titleMap)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (Object obj : dataList) &#123;</span><br><span class="line">                HSSFRow textRow = sheet.createRow(CONTENT_START_POSITION + i);</span><br><span class="line">                <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (String entry : titleMap.keySet()) &#123;</span><br><span class="line">                    String method = <span class="string">&quot;get&quot;</span> + entry.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + entry.substring(<span class="number">1</span>);</span><br><span class="line">                    Method m = obj.getClass().getMethod(method, <span class="keyword">null</span>);</span><br><span class="line">                    String value = m.invoke(obj, <span class="keyword">null</span>).toString();</span><br><span class="line">                    HSSFCell textcell = textRow.createCell(j);</span><br><span class="line">                    textcell.setCellValue(value);</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动伸缩列（如非必要，请勿打开此方法，耗内存）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size 列数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">autoSizeColumn</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; size; j++) &#123;</span><br><span class="line">            sheet.autoSizeColumn(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.douban.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.util.concurrent.ThreadFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.pojo.Book;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.pojo.BookComparator;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.utils.ExportExcel;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.utils.Spider;</span><br><span class="line"><span class="keyword">import</span> individual.cy.douban.web.GrabDouban;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: mystic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2017/12/21 11:23</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>: JDK1.8.0_144</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: X</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ThreadFactory threadFactory = <span class="keyword">new</span> ThreadFactoryBuilder().setNameFormat(<span class="string">&quot;pool-%d&quot;</span>).build();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ExecutorService executorService = <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">5</span>, <span class="number">200</span>, <span class="number">0L</span>,</span><br><span class="line">            TimeUnit.MILLISECONDS, <span class="keyword">new</span> LinkedBlockingQueue&lt;&gt;(<span class="number">1024</span>), threadFactory, <span class="keyword">new</span> ThreadPoolExecutor.AbortPolicy());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        List&lt;Book&gt; books = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line">        <span class="comment">// 实现每一页一个线程获取数据</span></span><br><span class="line">        <span class="comment">// 获取总页数</span></span><br><span class="line">        String html = Spider.pickData(<span class="string">&quot;https://book.douban.com/tag/%E7%BC%96%E7%A8%8B&quot;</span>);</span><br><span class="line">        <span class="comment">/*String html = Spider.pick4data(&quot;https://book.douban.com/tag/%E7%BC%96%E7%A8%8B&quot;,&quot;220.249.185.178&quot;,&quot;9999&quot;);*/</span></span><br><span class="line">        Document doc = Jsoup.parse(html);</span><br><span class="line">        <span class="keyword">int</span> totalPage = Integer.parseInt(doc.select(<span class="string">&quot;div.paginator &gt; a&quot;</span>).last().text());</span><br><span class="line">        StringBuilder sb;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; totalPage; i++) &#123;</span><br><span class="line">            GrabDouban douban = <span class="keyword">new</span> GrabDouban(books);</span><br><span class="line">            sb = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;https://book.douban.com/tag/%E7%BC%96%E7%A8%8B?start=&quot;</span>);</span><br><span class="line">            sb.append(i * <span class="number">20</span>);</span><br><span class="line">            sb.append(<span class="string">&quot;&amp;type=T&quot;</span>);</span><br><span class="line">            douban.setUrl(sb.toString());</span><br><span class="line">            executorService.execute(douban);</span><br><span class="line">            <span class="comment">// 防止爬取速度太快,IP被封</span></span><br><span class="line">            Thread.sleep(<span class="number">3000L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        executorService.shutdown();</span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        books.sort(<span class="keyword">new</span> BookComparator());</span><br><span class="line">        <span class="comment">// 添加编号</span></span><br><span class="line">        List&lt;Book&gt; noBooks = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Integer no = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Book book : books) &#123;</span><br><span class="line">            book.setId((++no).toString());</span><br><span class="line">            noBooks.add(book);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 截取前40个</span></span><br><span class="line">        noBooks = noBooks.subList(<span class="number">0</span>,<span class="number">40</span>);</span><br><span class="line">        Map&lt;String, String&gt; title = <span class="keyword">new</span> LinkedHashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        title.put(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;序号&quot;</span>);</span><br><span class="line">        title.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;书名&quot;</span>);</span><br><span class="line">        title.put(<span class="string">&quot;score&quot;</span>, <span class="string">&quot;评分&quot;</span>);</span><br><span class="line">        title.put(<span class="string">&quot;num&quot;</span>, <span class="string">&quot;评价人数&quot;</span>);</span><br><span class="line">        title.put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;作者&quot;</span>);</span><br><span class="line">        title.put(<span class="string">&quot;press&quot;</span>, <span class="string">&quot;出版社&quot;</span>);</span><br><span class="line">        title.put(<span class="string">&quot;date&quot;</span>, <span class="string">&quot;出版日期&quot;</span>);</span><br><span class="line">        title.put(<span class="string">&quot;price&quot;</span>, <span class="string">&quot;价格&quot;</span>);</span><br><span class="line">        String sheet = <span class="string">&quot;豆瓣编程书籍排行&quot;</span>;</span><br><span class="line">        ExportExcel.excelExport(noBooks, title, sheet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/pplmx/Spider">Github Source Code</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spider</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ lost user info</title>
    <url>/rabbitmq-lost-user-info.html</url>
    <content><![CDATA[<h1 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h1><h2 id="lost-user-info"><a href="#lost-user-info" class="headerlink" title="lost user info"></a>lost user info</h2><blockquote>
<p>After rebooting, the rabbit user info lost.</p>
</blockquote>
<h3 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h3><blockquote>
<p>Because RabbitMQ stores info by hostname.</p>
<p>Hostname had been changed, so RabbitMQ getting info by the new hostname failed</p>
</blockquote>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><blockquote>
<p>To add fixed node</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;NODENAME=rabbit@info&#x27;</span> | sudo tee -a /etc/rabbitmq/rabbitmq-env.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;127.0.0.1 info&#x27;</span> | sudo tee -a /etc/hosts</span><br><span class="line"></span><br><span class="line">ps axu | grep rabbitmq | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | sudo xargs <span class="built_in">kill</span> -9</span><br><span class="line"></span><br><span class="line">sudo service rabbitmq-server start</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>troubleshooting</tag>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set schedule by github actions?</title>
    <url>/set-schedule4github-repo.html</url>
    <content><![CDATA[<h1 id="Github-Actions-Schedule"><a href="#Github-Actions-Schedule" class="headerlink" title="Github Actions: Schedule"></a>Github Actions: Schedule</h1><p>Here is a trick to record a day the Miliky Way hasn’t collided with the Andromeda Galaxy.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Has</span> <span class="string">the</span> <span class="string">Milky</span> <span class="string">Way</span> <span class="string">collided</span> <span class="string">with</span> <span class="string">the</span> <span class="string">Andromeda</span> <span class="string">Galaxy?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># daily job</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">    <span class="attr">schedule:</span></span><br><span class="line">        <span class="bullet">-</span></span><br><span class="line">            <span class="attr">cron:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">*</span> <span class="string">*</span> <span class="string">*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">    <span class="comment"># This workflow contains a single job called &quot;build&quot;</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">        <span class="comment"># The type of runner that the job will run on</span></span><br><span class="line">        <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Steps represent a sequence of tasks that will be executed as part of the job</span></span><br><span class="line">        <span class="attr">steps:</span></span><br><span class="line">            <span class="comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Setup git</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Git</span> <span class="string">Infomation</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    git config --global user.name &#x27;user&#x27;</span></span><br><span class="line"><span class="string">                    git config --global user.email &#x27;email&#x27;</span></span><br><span class="line"><span class="string"></span>            <span class="comment"># Record (use record.sh or record2.sh)</span></span><br><span class="line">            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Recording</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    sh ./record.sh</span></span><br><span class="line"><span class="string"></span>            <span class="bullet">-</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Pushing</span></span><br><span class="line">                <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    git push https://$&#123;&#123;github.actor&#125;&#125;:$&#123;&#123;secrets.GITHUB_TOKEN&#125;&#125;@github.com/$&#123;&#123;github.repository&#125;&#125;.git HEAD:$&#123;&#123; github.ref &#125;&#125; || echo &quot;No changes to commit&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>

<p>For the complete project, you can follow <a href="https://github.com/pplmx/galaxy">here</a>.</p>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>schedule</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Let&#39;s learn what&#39;s singleton</title>
    <url>/singleton.html</url>
    <content><![CDATA[<h1 id="单例-Singleton"><a href="#单例-Singleton" class="headerlink" title="单例(Singleton)"></a>单例(Singleton)</h1><p>数学与逻辑学中，singleton定义为“有且仅有一个元素的集合”。</p>
<h2 id="什么是单例"><a href="#什么是单例" class="headerlink" title="什么是单例?"></a>什么是单例?</h2><p>一个类有且仅有一个实例, 并提供一个可以访问它的全局访问点.</p>
<h2 id="单例有什么用"><a href="#单例有什么用" class="headerlink" title="单例有什么用?"></a>单例有什么用?</h2><p>解决一个全局使用类的<strong>频繁创建</strong>与<strong>销毁</strong>.</p>
<h2 id="怎么实现单例"><a href="#怎么实现单例" class="headerlink" title="怎么实现单例?"></a>怎么实现单例?</h2><h3 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h3><ul>
<li>  隐藏类的构造方法</li>
<li>  定义一个公有的静态方法, 通过它返回类的唯一实例</li>
</ul>
<h3 id="java实现"><a href="#java实现" class="headerlink" title="java实现"></a>java实现</h3><ol>
<li> DCL(Double Checked Lock)实现</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lazy4SafeDoubleCheck</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Lazy4SafeDoubleCheck singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Lazy4SafeDoubleCheck</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 避免反射创建多个实例</span></span><br><span class="line">        <span class="keyword">if</span>(singleton != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Lazy4SafeDoubleCheck <span class="title">getSingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Lazy4SafeDoubleCheck.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Lazy4SafeDoubleCheck();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 避免反序列化创建多个实例</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Object <span class="title">readResolve</span><span class="params">()</span> <span class="keyword">throws</span> ObjectStreamException </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li> 枚举实现</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">SingletonEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用枚举实现的单例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    INSTANCE;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">otherMethods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Something&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>design pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>spring注入null</title>
    <url>/spring-injection-failed.html</url>
    <content><![CDATA[<h1 id="not-the-injection-failed-but-NPE"><a href="#not-the-injection-failed-but-NPE" class="headerlink" title="not the injection failed,but NPE"></a>not the injection failed,but NPE</h1><p>为什么这么说呢,因为我的错误信息是空指针异常,而不是注入失败的错误信息</p>
<span id="more"></span> 
<p><img src="assets/59e8499fdd607.png" alt="参考图片"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> *</span><br><span class="line"> * @author: mystic</span><br><span class="line"> * @date: 2017/10/19 8:54</span><br><span class="line"> * @since: JDK1.8.0_144</span><br><span class="line"> * @version: X</span><br><span class="line"> * Description: 自定义身份认证验证组件</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">class CustomAuthenticationProvider implements AuthenticationProvider &#123;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    private UserService userService;</span><br><span class="line"></span><br><span class="line">    private static CustomAuthenticationProvider provider;</span><br><span class="line"></span><br><span class="line">    public void setUserService(UserService userService) &#123;</span><br><span class="line">        this.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @PostConstruct</span><br><span class="line">    public void init()&#123;</span><br><span class="line">        provider = this;</span><br><span class="line">        // 初始化时,将已经静态化的userService实例化</span><br><span class="line">        provider.userService = this.userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Authentication authenticate(Authentication authentication) throws AuthenticationException &#123;</span><br><span class="line">        // 获取认证的用户名 &amp; 密码</span><br><span class="line">        String name = authentication.getName();</span><br><span class="line">        String password = authentication.getCredentials().toString();</span><br><span class="line"></span><br><span class="line">        Map&lt;String,Object&gt; condition = new HashMap&lt;&gt;(16);</span><br><span class="line">        condition.put(&quot;userName&quot;,name);</span><br><span class="line">        condition.put(&quot;userPWD&quot;,password);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;userService = &quot; + userService);</span><br><span class="line">        System.out.println(&quot;provider.userService = &quot; + provider.userService);</span><br><span class="line">        // 调用看这里,看这里,一定要看这里喔!!!</span><br><span class="line">        List&lt;Map&lt;String,Object&gt;&gt; userList = provider.userService.findUser(condition);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="yeah"><a href="#yeah" class="headerlink" title="yeah"></a>yeah</h1><p>至于产生这种现象的原因,我也没搞太清,猜测是加载顺序的问题,有懂的小伙伴,<br>可以评论留言告诉我(评论留言功能还没做呢o(╯□╰)o)</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot整合Mail服务</title>
    <url>/springboot-mail.html</url>
    <content><![CDATA[<h1 id="导入mail包"><a href="#导入mail包" class="headerlink" title="导入mail包"></a>导入mail包</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">smtp</span> <span class="comment">#smtp是邮件发送协议，pop3和imap是邮件接收协议。因为我们要发送邮件，因此是smtp</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">smtp.qq.com</span> <span class="comment">#邮件发送服务器的主机,这里采用qq邮箱服务器</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">587</span> <span class="comment">#这个端口是必须设置的,看到好多教程,都没有设置它</span></span><br><span class="line">        <span class="attr">username:</span> <span class="comment">#qq邮箱,</span></span><br><span class="line">        <span class="attr">password:</span> <span class="comment">#qq授权码</span></span><br><span class="line">        <span class="attr">properties:</span></span><br><span class="line">            <span class="attr">mail:</span></span><br><span class="line">                <span class="attr">smtp:</span></span><br><span class="line">                    <span class="attr">auth:</span> <span class="literal">true</span></span><br><span class="line">                    <span class="attr">starttls:</span></span><br><span class="line">                        <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">                        <span class="attr">required:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<p>端口配置信息,仅供参考<br><img src="assets/5a093b5554480.jpg" alt="2017042614212226.jpg"></p>
<h1 id="Tests"><a href="#Tests" class="headerlink" title="Tests"></a>Tests</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setFrom(sender);<span class="comment">//发送者.</span></span><br><span class="line">        message.setTo(<span class="string">&quot;xxx@qq.com&quot;</span>);<span class="comment">//接收者.</span></span><br><span class="line">        message.setSubject(<span class="string">&quot;测试邮件（邮件主题）&quot;</span>);<span class="comment">//邮件主题.</span></span><br><span class="line">        message.setText(<span class="string">&quot;这是邮件内容&quot;</span>);<span class="comment">//邮件内容.</span></span><br><span class="line">        javaMailSender.send(message);<span class="comment">//发送邮件</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="关于QQ授权码"><a href="#关于QQ授权码" class="headerlink" title="关于QQ授权码"></a>关于QQ授权码</h1><p><img src="assets/5a093d7c436f4.png" alt="1.png"><br><img src="assets/5a093d7c48466.png" alt="2.png"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>__str__ and __repr__ in Python</title>
    <url>/str-repr-in-python.html</url>
    <content><![CDATA[<h1 id="str-and-repr"><a href="#str-and-repr" class="headerlink" title="__str__ and __repr__"></a><code>__str__</code> and <code>__repr__</code></h1><h2 id="str"><a href="#str" class="headerlink" title="__str__"></a><code>__str__</code></h2><ul>
<li><code>print(obj)</code> 会调用<code>__str__</code></li>
<li>如果<code>__str__</code>没有被重写, 那么将调用<code>__repr__</code></li>
</ul>
<h2 id="repr"><a href="#repr" class="headerlink" title="__repr__"></a><code>__repr__</code></h2><ul>
<li>在交互式环境下, 直接输入对象, 打印会调用<code>__repr__</code></li>
</ul>
<h2 id="Some-Analysis"><a href="#Some-Analysis" class="headerlink" title="Some Analysis"></a>Some Analysis</h2><h3 id="Condition-1"><a href="#Condition-1" class="headerlink" title="Condition 1"></a>Condition 1</h3><ul>
<li>只重写<code>__str__</code></li>
<li><code>__repr__</code>调用父类</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().__repr__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;This is a <span class="subst">&#123;self.__color&#125;</span> apple.[Print by __str__]&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, color</span>):</span></span><br><span class="line">        self.__color = color</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">λ python</span><br><span class="line">Python <span class="number">3.8</span><span class="number">.2</span> (tags/v3<span class="number">.8</span><span class="number">.2</span>:7b3ab59, Feb <span class="number">25</span> <span class="number">2020</span>, <span class="number">23</span>:03:<span class="number">10</span>) [MSC v<span class="number">.1916</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> base_knowledge <span class="keyword">import</span> Apple</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple = Apple(<span class="string">&quot;red&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple</span><br><span class="line">&lt;base_knowledge.Apple <span class="built_in">object</span> at <span class="number">0x000002BCE2110AF0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(red_apple)</span><br><span class="line">This <span class="keyword">is</span> a red apple.[Print by __str__]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>从以上输出, </p>
<ul>
<li>print调用了<code>__str__</code></li>
<li>交互式环境,直接输出了地址信息</li>
</ul>
<h3 id="Condition-2"><a href="#Condition-2" class="headerlink" title="Condition 2"></a>Condition 2</h3><ul>
<li>只重写<code>__repr__</code></li>
<li><code>__str__</code>调用父类</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;This is a <span class="subst">&#123;self.__color&#125;</span> apple.[Print by __repr__]&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().__str__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, color</span>):</span></span><br><span class="line">        self.__color = color</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">λ python</span><br><span class="line">Python <span class="number">3.8</span><span class="number">.2</span> (tags/v3<span class="number">.8</span><span class="number">.2</span>:7b3ab59, Feb <span class="number">25</span> <span class="number">2020</span>, <span class="number">23</span>:03:<span class="number">10</span>) [MSC v<span class="number">.1916</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> base_knowledge <span class="keyword">import</span> Apple</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple = Apple(<span class="string">&quot;red&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple</span><br><span class="line">This <span class="keyword">is</span> a red apple.[Print by __repr__]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(red_apple)</span><br><span class="line">This <span class="keyword">is</span> a red apple.[Print by __repr__]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>从以上输出, </p>
<ul>
<li>交互式环境, 调用了重写的<code>__repr__</code></li>
<li>print也调用了<code>__repr__</code></li>
</ul>
<h3 id="Condition-3"><a href="#Condition-3" class="headerlink" title="Condition 3"></a>Condition 3</h3><ul>
<li>重写<code>__str__</code></li>
<li>重写<code>__repr__</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;This is a <span class="subst">&#123;self.__color&#125;</span> apple.[Print by __repr__]&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;This is a <span class="subst">&#123;self.__color&#125;</span> apple.[Print by __str__]&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, color</span>):</span></span><br><span class="line">        self.__color = color</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">λ python</span><br><span class="line">Python <span class="number">3.8</span><span class="number">.2</span> (tags/v3<span class="number">.8</span><span class="number">.2</span>:7b3ab59, Feb <span class="number">25</span> <span class="number">2020</span>, <span class="number">23</span>:03:<span class="number">10</span>) [MSC v<span class="number">.1916</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> base_knowledge <span class="keyword">import</span> Apple</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple = Apple(<span class="string">&quot;red&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple</span><br><span class="line">This <span class="keyword">is</span> a red apple.[Print by __repr__]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(red_apple)</span><br><span class="line">This <span class="keyword">is</span> a red apple.[Print by __str__]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>从以上输出, </p>
<ul>
<li>交互式环境, 直接输出, 调用了<code>__repr__</code></li>
<li>print, 调用了<code>__str__</code></li>
</ul>
<h3 id="Condition-4"><a href="#Condition-4" class="headerlink" title="Condition 4"></a>Condition 4</h3><ul>
<li>都没重写</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, color</span>):</span></span><br><span class="line">        self.__color = color</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">λ python</span><br><span class="line">Python <span class="number">3.8</span><span class="number">.2</span> (tags/v3<span class="number">.8</span><span class="number">.2</span>:7b3ab59, Feb <span class="number">25</span> <span class="number">2020</span>, <span class="number">23</span>:03:<span class="number">10</span>) [MSC v<span class="number">.1916</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> base_knowledge <span class="keyword">import</span> Apple</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple = Apple(<span class="string">&quot;red&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>red_apple</span><br><span class="line">&lt;base_knowledge.Apple <span class="built_in">object</span> at <span class="number">0x0000025ABFE10AF0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(red_apple)</span><br><span class="line">&lt;base_knowledge.Apple <span class="built_in">object</span> at <span class="number">0x0000025ABFE10AF0</span>&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>



<p>结合Condition1, 2, 3, 4, 可以得出以下结论</p>
<ul>
<li><code>__str__</code>如果没有被重写, 默认调用<code>__repr__</code></li>
<li>交互式环境下, 直接输出, 一定调用<code>__repr__</code>(重写, 就调用重写的方法; 未重写, 就调用父类的)</li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>general</tag>
      </tags>
  </entry>
  <entry>
    <title>Call to __init__ of super class is missed</title>
    <url>/super-init-in-python.html</url>
    <content><![CDATA[<h1 id="Call-to-init-of-super-class-is-missed"><a href="#Call-to-init-of-super-class-is-missed" class="headerlink" title="Call to __init__ of super class is missed"></a>Call to <code>__init__</code> of super class is missed</h1><h2 id="Origin"><a href="#Origin" class="headerlink" title="Origin"></a>Origin</h2><p>If a parent class declare <code>__init__</code> method explicitly, even if that method is empty</p>
<p>then the sub class’s <code>__init__</code> method need to invoke parent’s <code>__init__</code></p>
<p>if not, a warning <code>Call to __init__ of super class is missed</code> will be thrown by PyCharm.</p>
<h2 id="Tracing"><a href="#Tracing" class="headerlink" title="Tracing"></a>Tracing</h2><p>Why? Please follow me, look at the first demo</p>
<h3 id="Error-Demo"><a href="#Error-Demo" class="headerlink" title="Error Demo"></a>Error Demo</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.color = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.age = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ci = Cat()</span><br><span class="line">    <span class="built_in">print</span>(ci.color, ci.age)</span><br><span class="line"></span><br><span class="line"><span class="comment"># it will throw error: AttributeError: &#x27;Cat&#x27; object has no attribute &#x27;color&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="Fine-1"><a href="#Fine-1" class="headerlink" title="Fine 1"></a>Fine 1</h3><p>If a sub class do not override <code>__init__</code> method, parent’s attributes will be inherited.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.color = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ci = Cat()</span><br><span class="line">    <span class="built_in">print</span>(ci.color) <span class="comment"># black</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># this works fine, Animal&#x27;s attr is be inherited.</span></span><br></pre></td></tr></table></figure>

<h3 id="Fine-2"><a href="#Fine-2" class="headerlink" title="Fine 2"></a>Fine 2</h3><p>If a sub class want to declare its own attributes and inherit its parent’s attributes, do as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.color = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.age = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ci = Cat()</span><br><span class="line">    <span class="built_in">print</span>(ci.color, ci.age) <span class="comment"># black 1</span></span><br></pre></td></tr></table></figure>

<h3 id="Fine-3-Multiple-Inheritance-solution-1"><a href="#Fine-3-Multiple-Inheritance-solution-1" class="headerlink" title="Fine 3: Multiple Inheritance - solution 1"></a>Fine 3: Multiple Inheritance - solution 1</h3><p>If a sub class inherits from multiple parent class, you should do like as follows.</p>
<p>If you do not <strong>explicitly</strong> invoke parent’s <code>__init__</code> for <strong>each</strong> parent class in Subclass’s <code>__init__</code>, it will <strong>only</strong> inherit <strong>the first parent class</strong>‘s attributes.(The first parent class in the following code is <strong>Engine</strong> class.)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Engine</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.performance = <span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Skeleton</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.shape = <span class="string">&#x27;Rectangle&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span>(<span class="params">Engine, Skeleton</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        Engine.__init__(self)</span><br><span class="line">        Skeleton.__init__(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deliver</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(self.performance)</span><br><span class="line">        <span class="built_in">print</span>(self.shape)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    BMW = Car()</span><br><span class="line">    BMW.deliver()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Fine-3-Multiple-Inheritance-solution-2"><a href="#Fine-3-Multiple-Inheritance-solution-2" class="headerlink" title="Fine 3: Multiple Inheritance - solution 2"></a>Fine 3: Multiple Inheritance - solution 2</h3><p>Or like this:</p>
<p>(If you are not sure the parent class’s behavior, Solution 1 is very good.)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Engine</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.performance = <span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Skeleton</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.shape = <span class="string">&#x27;Rectangle&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span>(<span class="params">Engine, Skeleton</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deliver</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(self.performance)</span><br><span class="line">        <span class="built_in">print</span>(self.shape)</span><br></pre></td></tr></table></figure>

<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>At the most time(Or <strong>always</strong>. Unless you know why you need not invoke init), you should invoke parent’s init in every subclass init method.</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>general</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use switch in Python?</title>
    <url>/switch-in-python.html</url>
    <content><![CDATA[<h1 id="To-implement-a-switch-structure-in-Python"><a href="#To-implement-a-switch-structure-in-Python" class="headerlink" title="To implement a switch structure in Python"></a>To implement a switch structure in Python</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">switch = &#123;</span><br><span class="line">    <span class="string">&#x27;add&#x27;</span>: <span class="keyword">lambda</span> x, y: x + y,</span><br><span class="line">    <span class="string">&#x27;sub&#x27;</span>: <span class="keyword">lambda</span> x, y: x - y,</span><br><span class="line">    <span class="string">&#x27;mul&#x27;</span>: <span class="keyword">lambda</span> x, y: x * y,</span><br><span class="line">    <span class="string">&#x27;div&#x27;</span>: <span class="keyword">lambda</span> x, y: x / y,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;add&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;sub&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;mul&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;div&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">-7</span><br><span class="line">8</span><br><span class="line">0.125</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>switch</tag>
      </tags>
  </entry>
  <entry>
    <title>What&#39;s thread in Java?</title>
    <url>/thread-in-java.html</url>
    <content><![CDATA[<h1 id="Lifecycle-of-a-thread-in-Java"><a href="#Lifecycle-of-a-thread-in-Java" class="headerlink" title="Lifecycle of a thread in Java"></a>Lifecycle of a thread in Java</h1><p><img src="assets/thread-life-cycle.png" alt="Life cycle of a thread in Java"></p>
<p><img src="assets/threadLifeCycle.jpg" alt="Lifecycle and States of a Thread in Java"></p>
<h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><h2 id="Thread"><a href="#Thread" class="headerlink" title="Thread()"></a>Thread()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateThreadByThreadClass</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> loopTimes = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopTimes; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Runnable"><a href="#Runnable" class="headerlink" title="Runnable()"></a>Runnable()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateThreadByRunnableInterface</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> loopTimes = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopTimes; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Callable"><a href="#Callable" class="headerlink" title="Callable()"></a>Callable()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateThreadByCallableInterface</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>, loopTimes = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopTimes; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tester</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadFactory threadFactory = <span class="keyword">new</span> ThreadFactoryBuilder().setNameFormat(<span class="string">&quot;pool-%d&quot;</span>).build();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ExecutorService executorService = <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">5</span>, <span class="number">200</span>, <span class="number">0L</span>,</span><br><span class="line">            TimeUnit.MILLISECONDS, <span class="keyword">new</span> LinkedBlockingQueue&lt;&gt;(<span class="number">1024</span>), threadFactory, <span class="keyword">new</span> ThreadPoolExecutor.AbortPolicy());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> loopTimes = <span class="number">100</span>;</span><br><span class="line">        <span class="comment">//testThread(loopTimes);</span></span><br><span class="line">        testRunnable(loopTimes);</span><br><span class="line">        <span class="comment">//testCallable(loopTimes);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testRunnable</span><span class="params">(<span class="keyword">int</span> loopTimes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopTimes; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">30</span>) &#123;</span><br><span class="line">                CreateThreadByRunnableInterface myRunnable = <span class="keyword">new</span> CreateThreadByRunnableInterface();</span><br><span class="line">                <span class="comment">// 不要显示创建线程,通过线程池创建</span></span><br><span class="line">                executorService.execute(myRunnable);</span><br><span class="line">                executorService.execute(myRunnable);</span><br><span class="line">                executorService.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testThread</span><span class="params">(<span class="keyword">int</span> loopTimes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopTimes; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">30</span>) &#123;</span><br><span class="line">                Thread thread1 = <span class="keyword">new</span> CreateThreadByThreadClass();</span><br><span class="line">                Thread thread2 = <span class="keyword">new</span> CreateThreadByThreadClass();</span><br><span class="line">                thread1.start();</span><br><span class="line">                thread2.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testCallable</span><span class="params">(<span class="keyword">int</span> loopTimes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopTimes; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">30</span>) &#123;</span><br><span class="line">                Callable&lt;Integer&gt; myCallable = <span class="keyword">new</span> CreateThreadByCallableInterface();</span><br><span class="line">                FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> FutureTask&lt;&gt;(myCallable);</span><br><span class="line">                executorService.submit(futureTask);</span><br><span class="line">                executorService.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>thread</tag>
      </tags>
  </entry>
  <entry>
    <title>Thread in OS</title>
    <url>/thread-in-os.html</url>
    <content><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><h2 id="What’s-thread"><a href="#What’s-thread" class="headerlink" title="What’s thread?"></a>What’s thread?</h2><blockquote>
<p>  A thread is a path of execution within a process. A process can contain multiple threads.</p>
<p>  <strong>Thread</strong> is an execution unit which consists of its own program counter, a stack, and a set of registers. Threads are also known as Lightweight processes. Threads are popular way to improve application through parallelism. The CPU switches rapidly back and forth among the threads giving illusion that the threads are running in parallel.</p>
<p>  As each thread has its own independent resource for process execution, multpile processes can be executed parallely by increasing number of threads.</p>
<p>  A thread is a flow of execution through the process code, with its own program counter that keeps track of which instruction to execute next, system registers which hold its current working variables, and a stack which contains the execution history.</p>
<p>  A thread shares with its peer threads few information like code segment, data segment and open files. When one thread alters a code segment memory item, all other threads see that.</p>
<p>  A thread is also called a <strong>lightweight process</strong>. Threads provide a way to improve application performance through parallelism. Threads represent a software approach to improving performance of operating system by reducing the overhead thread is equivalent to a classical process.</p>
<p>  Each thread belongs to exactly one process and no thread can exist outside a process. Each thread represents a separate flow of control. Threads have been successfully used in implementing network servers and web server. They also provide a suitable foundation for parallel execution of applications on shared memory multiprocessors. The following figure shows the working of a single-threaded and a multithreaded process.</p>
</blockquote>
<p><img src="assets/single-and-multithreaded-process.png" alt="Single Threaded and Multithreaded Process"></p>
<h2 id="Why-multithreading"><a href="#Why-multithreading" class="headerlink" title="Why multithreading?"></a>Why multithreading?</h2><blockquote>
<p>  A thread is also known as lightweight process. The idea is to achieve parallelism by dividing a process into multiple threads. For example, in a browser, multiple tabs can be different threads. MS Word uses multiple threads: one thread to format the text, another thread to process inputs, etc.</p>
</blockquote>
<h2 id="Difference-between-Process-and-Thread"><a href="#Difference-between-Process-and-Thread" class="headerlink" title="Difference between Process and Thread"></a>Difference between Process and Thread</h2><table>
<thead>
<tr>
<th>S.N.</th>
<th>Process</th>
<th>Thread</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Process is heavy weight or resource intensive.</td>
<td>Thread is light weight, taking lesser resources than a process.</td>
</tr>
<tr>
<td>2</td>
<td>Process switching needs interaction with operating system.</td>
<td>Thread switching does not need to interact with operating system.</td>
</tr>
<tr>
<td>3</td>
<td>In multiple processing environments, each process executes the same code but has its own memory and file resources.</td>
<td>All threads can share same set of open files, child processes.</td>
</tr>
<tr>
<td>4</td>
<td>If one process is blocked, then no other process can execute until the first process is unblocked.</td>
<td>While one thread is blocked and waiting, a second thread in the same task can run.</td>
</tr>
<tr>
<td>5</td>
<td>Multiple processes without using threads use more resources.</td>
<td>Multiple threaded processes use fewer resources.</td>
</tr>
<tr>
<td>6</td>
<td>In multiple processes each process operates independently of the others.</td>
<td>One thread can read, write or change another thread’s data.</td>
</tr>
</tbody></table>
<h2 id="Pros-of-Thread-over-Process"><a href="#Pros-of-Thread-over-Process" class="headerlink" title="Pros of Thread over Process"></a>Pros of Thread over Process</h2><ul>
<li><p><em>Responsiveness</em></p>
<blockquote>
<p>  If the process is divided into multiple threads, if one thread completes its execution, then its output can be immediately returned.</p>
</blockquote>
</li>
<li><p><em>Faster context switch</em></p>
<blockquote>
<p>  Context switch time between threads is lower compared to process context switch. Process context switching requires more overhead from the CPU.</p>
</blockquote>
</li>
<li><p><em>Effective utilization of multiprocessor system</em></p>
<blockquote>
<p>  If we have multiple threads in a single process, then we can schedule multiple threads on multiple processor. This will make process execution faster.</p>
</blockquote>
</li>
<li><p><em>Resource sharing</em></p>
<blockquote>
<p>  Resources like code, data, and files can be shared among all threads within a process.</p>
</blockquote>
</li>
<li><p><em>Communication</em></p>
<blockquote>
<p>  Communication between multiple threads is easier, as the threads shares common address space. while in process we have to follow some specific communication technique for communication between two process.</p>
</blockquote>
</li>
<li><p><em>Enhanced throughput of the system</em></p>
<blockquote>
<p>  If a process is divided into multiple threads, and each thread function is considered as one job, then the number of jobs completed per unit of time is increased, thus increasing the throughput of the system.</p>
</blockquote>
</li>
</ul>
<h1 id="Thread-State"><a href="#Thread-State" class="headerlink" title="Thread State"></a>Thread State</h1><ul>
<li><p>  Creation</p>
</li>
<li><p>  Ready</p>
</li>
<li><p>  Running</p>
</li>
<li><p>  Blocked</p>
</li>
<li><p>Dead</p>
</li>
</ul>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>thread</tag>
        <tag>os</tag>
      </tags>
  </entry>
  <entry>
    <title>A settings.json file for Windows Terminal</title>
    <url>/windows-terminal-settings.html</url>
    <content><![CDATA[<h1 id="Windows-Terminal-Settings"><a href="#Windows-Terminal-Settings" class="headerlink" title="Windows Terminal Settings"></a>Windows Terminal Settings</h1><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// This file was initially generated by Windows Terminal 1.4.3243.0</span></span><br><span class="line"><span class="comment">// It should still be usable in newer versions, but newer versions might have additional</span></span><br><span class="line"><span class="comment">// settings, help text, or changes that you will not see unless you clear this file</span></span><br><span class="line"><span class="comment">// and let us generate a new one for you.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// To view the default settings, hold &quot;alt&quot; while clicking on the &quot;Settings&quot; button.</span></span><br><span class="line"><span class="comment">// For documentation on these settings, see: https://aka.ms/terminal-documentation</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;$schema&quot;</span>: <span class="string">&quot;https://aka.ms/terminal-profiles-schema&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;defaultProfile&quot;</span>: <span class="string">&quot;&#123;1d0ce090-9b1f-59f9-9e57-8ede4dba3071&#125;&quot;</span>,</span><br><span class="line">  <span class="comment">// You can add more global application settings here.</span></span><br><span class="line">  <span class="comment">// To learn more about global settings, visit https://aka.ms/terminal-global-settings</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// If enabled, selections are automatically copied to your clipboard.</span></span><br><span class="line">  <span class="attr">&quot;copyOnSelect&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// If enabled, formatted data is also copied to your clipboard</span></span><br><span class="line">  <span class="attr">&quot;copyFormatting&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class="line">  <span class="comment">// Each one of them will appear in the &#x27;New Tab&#x27; dropdown,</span></span><br><span class="line">  <span class="comment">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class="line">  <span class="comment">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class="line">  <span class="attr">&quot;profiles&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;defaults&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">// Put settings here that you want to apply to all profiles.</span></span><br><span class="line">      <span class="comment">// custome config</span></span><br><span class="line">      <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;acrylicOpacity&quot;</span>: <span class="number">0.85</span>,</span><br><span class="line">      <span class="attr">&quot;colorScheme&quot;</span>: <span class="string">&quot;Tango Dark&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cursorShape&quot;</span>: <span class="string">&quot;filledBox&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cursorColor&quot;</span>: <span class="string">&quot;#b20af5&quot;</span>,</span><br><span class="line">      <span class="comment">// &quot;fontFace&quot; : &quot;Cascadia Code PL&quot;,</span></span><br><span class="line">      <span class="attr">&quot;fontFace&quot;</span>: <span class="string">&quot;MesloLGS NF&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;useAcrylic&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the powershell.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Windows PowerShell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;powershell.exe&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the bash.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;1d0ce090-9b1f-59f9-9e57-8ede4dba3071&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Git Bash&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;%LOCALAPPDATA%/Programs/Git/bin/bash.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;%LOCALAPPDATA%/Programs/Git/mingw64/share/git/git-for-windows.ico&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;startingDirectory&quot;</span>: <span class="string">&quot;%USERPROFILE%&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the cmd.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Command Prompt&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;cmd.exe&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Azure Cloud Shell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;Windows.Terminal.Azure&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;07b52e3e-de2c-5db4-bd2d-ba144ed6c273&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Ubuntu-20.04&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;Windows.Terminal.Wsl&quot;</span>,</span><br><span class="line">        <span class="comment">// this will start from root dir</span></span><br><span class="line">        <span class="attr">&quot;startingDirectory&quot;</span>: <span class="string">&quot;//wsl$/Ubuntu-20.04/&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Add custom color schemes to this array.</span></span><br><span class="line">  <span class="comment">// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes</span></span><br><span class="line">  <span class="attr">&quot;schemes&quot;</span>: [],</span><br><span class="line">  <span class="comment">// Add custom actions and keybindings to this array.</span></span><br><span class="line">  <span class="comment">// To unbind a key combination from your defaults.json, set the command to &quot;unbound&quot;.</span></span><br><span class="line">  <span class="comment">// To learn more about actions and keybindings, visit https://aka.ms/terminal-keybindings</span></span><br><span class="line">  <span class="attr">&quot;actions&quot;</span>: [</span><br><span class="line">    <span class="comment">// Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.</span></span><br><span class="line">    <span class="comment">// These two lines additionally bind them to Ctrl+C and Ctrl+V.</span></span><br><span class="line">    <span class="comment">// To learn more about selection, visit https://aka.ms/terminal-selection</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;action&quot;</span>: <span class="string">&quot;copy&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;singleLine&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+c&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;paste&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+v&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// Press Ctrl+Shift+F to open the search box</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;find&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+shift+f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// Press Alt+Shift+D to open a new pane.</span></span><br><span class="line">    <span class="comment">// - &quot;split&quot;: &quot;auto&quot; makes this pane open in the direction that provides the most surface area.</span></span><br><span class="line">    <span class="comment">// - &quot;splitMode&quot;: &quot;duplicate&quot; makes the new pane use the focused pane&#x27;s profile.</span></span><br><span class="line">    <span class="comment">// To learn more about panes, visit https://aka.ms/terminal-panes</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;action&quot;</span>: <span class="string">&quot;splitPane&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;split&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;splitMode&quot;</span>: <span class="string">&quot;duplicate&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;alt+shift+d&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>win</tag>
      </tags>
  </entry>
  <entry>
    <title>XShell highlights</title>
    <url>/xshell-highlights.html</url>
    <content><![CDATA[<h1 id="highlights"><a href="#highlights" class="headerlink" title="highlights"></a>highlights</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># info</span></span><br><span class="line">(\binfo\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># debug</span></span><br><span class="line">(\bdebug\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># warn, inactive, unknown</span></span><br><span class="line">(\bwarn(ing)?\b)|(\binactive\b)|(\bunknown\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># error, fail, false, down</span></span><br><span class="line">(\berror\b)|(\bfail(ed)?\b)|(\bfalse\b)|(\bdown\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># active, success, true, ok, up</span></span><br><span class="line">(\bactive(d)?\b)|(\bsuccess(ful(ly)?)?\b)|(\btrue\b)|(\bok\b)|(\bup\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># start, begin, enable, create, open</span></span><br><span class="line">(\bstart(ed|ing)?\b)|(\bbegin(ning)?\b)|(\benable(d)?\b)|(\bcreate(d)?\b)|(\bopen\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># stop, end, finish, disable, delete, close</span></span><br><span class="line">(\bstop(ped)?\b)|(\bend\b)|(\bfinish(ed)?\b)|(\bdisable(d)?\b)|(\bdelete(d)?\b)|(\bclose(d)?\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># IPv4</span></span><br><span class="line">(?=(\b|\D))(((\d&#123;1,2&#125;)|(1\d&#123;1,2&#125;)|(2[0-4]\d)|(25[0-5]))\.)&#123;3&#125;((\d&#123;1,2&#125;)|(1\d&#123;1,2&#125;)|(2[0-4]\d)|(25[0-5]))(?=(\b|\D))\s*</span><br><span class="line"></span><br><span class="line"><span class="comment"># IPv6</span></span><br><span class="line">[\[ ]?\s*((([0-9A-Fa-f]&#123;1,4&#125;:)&#123;7&#125;([0-9A-Fa-f]&#123;1,4&#125;|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;(:[0-9A-Fa-f]&#123;1,4&#125;|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;5&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,2&#125;)|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;4&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,3&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;3&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,4&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,2&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;2&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,5&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,3&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;1&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,6&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,4&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(:(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,7&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,5&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:)))(%.+)?\s*\]?</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Create-hls-file"><a href="#Create-hls-file" class="headerlink" title="Create hls file"></a>Create hls file</h2><p>You can also create your custom file in <code>~\Documents\NetSarang Computer\7\Xshell\HighlightSet Files\</code>. Copy the following content to your custom file now.</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[Keyword_0]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=[_a-z0-<span class="number">9</span>-]+(.[_a-z0-<span class="number">9</span>-]+)*@[a-z0-<span class="number">9</span>-]+(.[a-z0-<span class="number">9</span>-]+)*</span><br><span class="line"><span class="attr">Description</span>=Email address</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">286</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">286</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_1]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(?=(\b|\D))(((\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">1</span>\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d)|(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]))\.)&#123;<span class="number">3</span>&#125;((\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">1</span>\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d)|(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]))(?=(\b|\D))\s*</span><br><span class="line"><span class="attr">Description</span>=IPv4</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">295</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_2]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=[\[ ]?\s*((([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">7</span>&#125;([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">6</span>&#125;(:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;|((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;)|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">5</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;)|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">4</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">3</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)?:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">3</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">2</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">2</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">5</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">3</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">6</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">4</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(:(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">7</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">5</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:)))(%.+)?\s*\]?</span><br><span class="line"><span class="attr">Description</span>=IPv6</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">294</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_3]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\berror\b)|(\bfail(ed)?\b)|(\b<span class="literal">false</span>\b)|(\bdown\b)|(\blocked\b)</span><br><span class="line"><span class="attr">Description</span>=error, fail, <span class="literal">false</span>, down</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">290</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_4]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bactive(d)?\b)|(\bsuccess(ful(ly)?)?\b)|(\b<span class="literal">true</span>\b)|(\bok\b)|(\bup\b)|(\brunning\b)|(\bdeployed\b)|(\bunlocked\b)</span><br><span class="line"><span class="attr">Description</span>=active, success, <span class="literal">true</span>, ok, up</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">291</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_5]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bstart(ed|ing)?\b)|(\bbegin(ning)?\b)|(\benable(d)?\b)|(\bcreate(d)?\b)|(\bopen\b)</span><br><span class="line"><span class="attr">Description</span>=start, begin, enable, create, open</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">291</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_6]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bstop(ped)?\b)|(\bend\b)|(\bfinish(ed)?\b)|(\bdisable(d)?\b)|(\bdelete(d)?\b)|(\bclose(d)?\b)</span><br><span class="line"><span class="attr">Description</span>=stop, end, finish, disable, delete</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">293</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_7]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bwarn(ing)?\b)|(\binactive\b)|(\bunknown\b)</span><br><span class="line"><span class="attr">Description</span>=warn, inactive, unknown</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">282</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Colors]</span></span><br><span class="line"><span class="attr">Colors</span>=<span class="number">000000</span>,<span class="number">00</span>E4FF,<span class="number">000040</span>,<span class="number">0080</span>FF,<span class="number">400000</span>,C08080,<span class="number">8080</span>FF,C0C0C0,<span class="number">555555</span>,<span class="number">5555</span>FF,<span class="number">55</span>FF55,<span class="number">55</span>FFFF,FF5555,FF55FF,FFFF55,FFFFFF</span><br><span class="line"><span class="section">[Keyword_8]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\binfo\b)</span><br><span class="line"><span class="attr">Description</span>=info</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">291</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_9]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=\bDEBUG\b</span><br><span class="line"><span class="attr">Description</span>=debug</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">293</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[info]</span></span><br><span class="line"><span class="attr">Version</span>=<span class="number">1.1</span></span><br><span class="line"><span class="attr">Count</span>=<span class="number">12</span></span><br><span class="line"><span class="section">[Keyword_10]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=\/\b(\d|([<span class="number">1</span>-<span class="number">9</span>]\d)|(<span class="number">1</span>[<span class="number">01</span>]\d)|(<span class="number">12</span>[<span class="number">0</span>-<span class="number">8</span>]))\b</span><br><span class="line"><span class="attr">Description</span>=CIDR</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">284</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_11]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=([a-zA-Z0-<span class="number">9</span>._-]+@([a-zA-Z0-<span class="number">9</span>_-]+\.)+[a-zA-Z0-<span class="number">9</span>_-]+)</span><br><span class="line"><span class="attr">Description</span>=Email Regex</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">286</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>general</category>
      </categories>
      <tags>
        <tag>terminal</tag>
      </tags>
  </entry>
</search>
