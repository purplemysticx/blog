<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我还是个宝宝!</title>
  
  <subtitle>宝宝,就是我,耶~</subtitle>
  <link href="https://blog.caoyu.info/atom.xml" rel="self"/>
  
  <link href="https://blog.caoyu.info/"/>
  <updated>2021-03-31T15:31:10.000Z</updated>
  <id>https://blog.caoyu.info/</id>
  
  <author>
    <name>紫玄</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Let&#39;s deeply understand how to run a container</title>
    <link href="https://blog.caoyu.info/docker-world.html"/>
    <id>https://blog.caoyu.info/docker-world.html</id>
    <published>2021-03-31T14:48:04.000Z</published>
    <updated>2021-03-31T15:31:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p><a href="https://www.docker.com/blog/introducing-docker-engine-18-09/">Referenced from here.</a></p><p><img src="assets/DockerEngineDiagram-1.png" alt="Introducing Docker Engine 18.09 - Docker Blog"></p><p><a href="https://mkdev.me/en/posts/the-tool-that-really-runs-your-containers-deep-dive-into-runc-and-oci-specifications">Referenced from here.</a></p><p><img src="assets/differ-container.png" alt="Differ Container"></p><p><a href="https://medium.com/@avijitsarkar123/docker-and-oci-runtimes-a9c23a5646d6">Referenced from here.</a></p><p><img src="assets/docker_oci.png" alt="Docker and OCI Runtimes."></p><h2 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h2><ul><li>dockerd</li><li>containerd</li><li>containerd-shim</li><li>runc</li></ul><h3 id="runc"><a href="#runc" class="headerlink" title="runc"></a>runc</h3><p><code>CLI tool</code> for spawning and running containers according to the <code>OCI specification</code>.</p><h3 id="containerd-shim"><a href="#containerd-shim" class="headerlink" title="containerd-shim"></a>containerd-shim</h3><p>The shim allows for <code>daemonless</code> containers. It basically sits as the parent of the container’s process to facilitate a few things.</p><ul><li>First it allows the runtimes(i.e. <code>runc</code>) to exit after it starts the container. This way we don’t have to have the long running runtime processes for containers. When you start <code>mysql</code> you should only see the <code>mysql</code> process and the shim.</li><li>Second it keeps the STDIO and other fds open for the container incase <code>containerd</code> and/or docker both die. If the shim was not running then the parent side of the pipes or the TTY master would be closed and the container would exit.</li><li>Finally it allows the container’s exit status to be reported back to a higher level tool like docker without having the be the actual parent of the container’s process and do a <code>wait4</code>.</li></ul><h3 id="containerd"><a href="#containerd" class="headerlink" title="containerd"></a>containerd</h3><p><strong>containerd</strong> was introduced in Docker 1.11 and since then took main responsibility of managing containers life-cycle. <code>containerd</code> is the <em>executor for containers</em>, but has a wider scope than <em>just executing</em> containers. So it also take care of:</p><ul><li>Image push and pull</li><li>Managing of storage</li><li>Of course executing of Containers by calling <strong>runc</strong> with the right parameters to run containers…</li><li>Managing of network primitives for interfaces</li><li>Management of network namespaces containers to join existing namespaces</li></ul><h3 id="dockerd"><a href="#dockerd" class="headerlink" title="dockerd"></a>dockerd</h3><p>The Docker daemon - <strong>dockerd</strong> listens for Docker API requests and manages host’s Container life-cycles by utilizing <strong>containerd</strong>.</p><p><code>dockerd</code> can listen for Docker Engine API requests via three different types of Socket: <code>unix</code>, <code>tcp</code>, and <code>fd</code>.</p><p>By default, a <code>unix</code> domain socket is created at <code>/var/run/docker.sock</code>, requiring either root permission, or docker group membership.</p><p>On <a href="http://alexander.holbreich.org/tag/systemd/">Systemd</a> based systems, you can communicate with the daemon via <code>Systemd</code> socket activation, use <code>dockerd -H fd://</code>.</p><h2 id="Workflow-among-the-above-components"><a href="#Workflow-among-the-above-components" class="headerlink" title="Workflow among the above components"></a>Workflow among the above components</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">❯ docker --version</span><br><span class="line">Docker version 20.10.5, build 55c4c88</span><br><span class="line"></span><br><span class="line">❯ sudo docker container ls</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED       STATUS       PORTS     NAMES</span><br><span class="line">05ebb62bc655   nginx     <span class="string">&quot;/docker-entrypoint.…&quot;</span>   13 days ago   Up 13 days   80/tcp    nginx2</span><br><span class="line">7f3fa77ddad8   nginx     <span class="string">&quot;/docker-entrypoint.…&quot;</span>   13 days ago   Up 13 days   80/tcp    nginx1</span><br><span class="line"></span><br><span class="line">❯ ps -ef --forest | grep -v <span class="string">&quot; --color=auto&quot;</span> | grep -A3 -E <span class="string">&quot;dockerd|containerd&quot;</span></span><br><span class="line">root         714       1  0 Mar17 ?        00:17:12 /usr/bin/containerd</span><br><span class="line">root        1931       1  0 Mar17 ?        00:02:53 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">root        2139       1  0 Mar17 ?        00:01:04 /usr/bin/containerd-shim-runc-v2 -namespace moby -id 7f3fa77ddad85e82619b21d6fd9bde8c6fa7cce9e1c063b4f18f258c1206b1e4 -address /run/containerd/containerd.sock</span><br><span class="line">root        2163    2139  0 Mar17 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">systemd+    2217    2163  0 Mar17 ?        00:00:00      \_ nginx: worker process</span><br><span class="line">root        2240       1  0 Mar17 ?        00:01:05 /usr/bin/containerd-shim-runc-v2 -namespace moby -id 05ebb62bc6557c76f9d4494bbd2262e9fa7f91c3a0bad14677455a158e949f75 -address /run/containerd/containerd.sock</span><br><span class="line">root        2261    2240  0 Mar17 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">systemd+    2319    2261  0 Mar17 ?        00:00:00      \_ nginx: worker process</span><br><span class="line"></span><br><span class="line">=================================</span><br><span class="line"></span><br><span class="line">❯ docker --version</span><br><span class="line">Docker version 19.03.15, build 99e3ed8919</span><br><span class="line"></span><br><span class="line">❯ docker container ls</span><br><span class="line">CONTAINER ID    IMAGE    COMMAND                  CREATED           STATUS           PORTS     NAMES</span><br><span class="line">cbb233ea0045    nginx    <span class="string">&quot;/docker-entrypoint.…&quot;</span>   11 minutes ago    Up 11 minutes    80/tcp    nginx2</span><br><span class="line">fa3468d6e89a    nginx    <span class="string">&quot;/docker-entrypoint.…&quot;</span>   11 minutes ago    Up 11 minutes    80/tcp    nginx1</span><br><span class="line"></span><br><span class="line">❯ ps -ef --forest | less</span><br><span class="line">root      184283       1  0 14:10 ?        00:00:00 /usr/bin/containerd</span><br><span class="line">root      184493  184283  0 14:11 ?        00:00:00  \_ containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/fa3468d6e89a7ddcbd67a7049b2fd1771555c445ba6e8795a4634cb4795ecdd6 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc</span><br><span class="line">root      184509  184493  0 14:11 ?        00:00:00  |   \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       184564  184509  0 14:11 ?        00:00:00  |       \_ nginx: worker process</span><br><span class="line">root      184595  184283  0 14:11 ?        00:00:00  \_ containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/cbb233ea004589877970ee3b4bcd08672370c159720617c29c31b943e4a5be3c -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc</span><br><span class="line">root      184611  184595  0 14:11 ?        00:00:00      \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       184663  184611  0 14:11 ?        00:00:00          \_ nginx: worker process</span><br><span class="line">root      184291       1  0 14:10 ?        00:00:01 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line"></span><br><span class="line">=================================</span><br><span class="line"></span><br><span class="line">❯ podman version</span><br><span class="line">Version:      2.2.1</span><br><span class="line">API Version:  2</span><br><span class="line">Go Version:   go1.14.12</span><br><span class="line">Built:        Mon Feb 22 12:51:35 2021</span><br><span class="line">OS/Arch:      linux/amd64</span><br><span class="line"></span><br><span class="line">❯ podman container ls</span><br><span class="line">CONTAINER ID  IMAGE                           COMMAND               CREATED        STATUS            PORTS   NAMES</span><br><span class="line">2fed78dd707e  docker.io/library/nginx:latest  nginx -g daemon o...  2 minutes ago  Up 2 minutes ago          nginx2</span><br><span class="line">75103237f3d5  docker.io/library/nginx:latest  nginx -g daemon o...  2 minutes ago  Up 2 minutes ago          nginx1</span><br><span class="line"></span><br><span class="line">❯ runc list</span><br><span class="line">ID                                                                 PID         STATUS      BUNDLE                                                                                                                     CREATED                          OWNER</span><br><span class="line">2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9   188922      running     /var/lib/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9/userdata   2021-03-31T06:36:31.164181537Z   root</span><br><span class="line">75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832   188806      running     /var/lib/containers/storage/overlay-containers/75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832/userdata   2021-03-31T06:36:25.812499602Z   root</span><br><span class="line"></span><br><span class="line">❯ runc state 2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;ociVersion&quot;</span>: <span class="string">&quot;1.0.2-dev&quot;</span>,</span><br><span class="line">  <span class="string">&quot;id&quot;</span>: <span class="string">&quot;2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9&quot;</span>,</span><br><span class="line">  <span class="string">&quot;pid&quot;</span>: 188922,</span><br><span class="line">  <span class="string">&quot;status&quot;</span>: <span class="string">&quot;running&quot;</span>,</span><br><span class="line">  <span class="string">&quot;bundle&quot;</span>: <span class="string">&quot;/var/lib/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9/userdata&quot;</span>,</span><br><span class="line">  <span class="string">&quot;rootfs&quot;</span>: <span class="string">&quot;/var/lib/containers/storage/overlay/9fde6f2ab9dee9701adce3862803afe893c009269e74c0c77e18c4454c9184d1/merged&quot;</span>,</span><br><span class="line">  <span class="string">&quot;created&quot;</span>: <span class="string">&quot;2021-03-31T06:36:31.164181537Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;annotations&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;io.container.manager&quot;</span>: <span class="string">&quot;libpod&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.kubernetes.cri-o.Created&quot;</span>: <span class="string">&quot;2021-03-31T14:36:30.807867268+08:00&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.kubernetes.cri-o.TTY&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.autoremove&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.init&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.privileged&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;io.podman.annotations.publish-all&quot;</span>: <span class="string">&quot;FALSE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;org.opencontainers.image.stopSignal&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;<span class="comment"># </span></span><br><span class="line"></span><br><span class="line">❯ ps -ef --forest</span><br><span class="line">root      188797       1  0 14:36 ?        00:00:00 /usr/bin/conmon --api-version 1 -c 75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832 -u 75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832 -r /usr/bin/runc -b /var/lib/containers/storage/overlay-containers/75103237f3d5f8d78f1d34cd32747c08/run/containers/storage/overlay-containers/75103237f3d5f8d78f1d34cd32747c083f8d59eb5df4d09e3e68ab8279fcf832/userdata/conmon.pid --exit-command /usr/bin/podman --exit-command-arg --root --exit-command-arg /var/lib/containers/storage --exit-command-arg --runroot --exit-command-arg /var/run/containers/storage --exit-comm</span><br><span class="line">root      188806  188797  0 14:36 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       188842  188806  0 14:36 ?        00:00:00      \_ nginx: worker process</span><br><span class="line">root      188913       1  0 14:36 ?        00:00:00 /usr/bin/conmon --api-version 1 -c 2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9 -u 2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9 -r /usr/bin/runc -b /var/lib/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee78/run/containers/storage/overlay-containers/2fed78dd707e865d4995f2d80dd9ee7830776e8adfe62f2b5b2754fa8b950be9/userdata/conmon.pid --exit-command /usr/bin/podman --exit-command-arg --root --exit-command-arg /var/lib/containers/storage --exit-command-arg --runroot --exit-command-arg /var/run/containers/storage --exit-comm</span><br><span class="line">root      188922  188913  0 14:36 ?        00:00:00  \_ nginx: master process nginx -g daemon off;</span><br><span class="line">101       188955  188922  0 14:36 ?        00:00:00      \_ nginx: worker process</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Docker Architecture</summary>
    
    
    
    <category term="docker" scheme="https://blog.caoyu.info/categories/docker/"/>
    
    
    <category term="docker" scheme="https://blog.caoyu.info/tags/docker/"/>
    
    <category term="container" scheme="https://blog.caoyu.info/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>Install the Latest Packages by Ubuntu PPA</title>
    <link href="https://blog.caoyu.info/install-latest-by-ubuntu-ppa.html"/>
    <id>https://blog.caoyu.info/install-latest-by-ubuntu-ppa.html</id>
    <published>2021-03-18T11:12:08.000Z</published>
    <updated>2021-03-18T11:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="Use-PPA-source-Latest-Version"><a href="#Use-PPA-source-Latest-Version" class="headerlink" title="Use PPA source(Latest Version)"></a>Use PPA source(Latest Version)</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># after this, it will generate a new list in /etc/apt/sources.list.d</span></span><br><span class="line">sudo add-apt-repository ppa:git-core/ppa</span><br><span class="line"></span><br><span class="line"><span class="comment"># change &quot;http://ppa.launchpad.net&quot; to &quot;https://launchpad.proxy.ustclug.org&quot;</span></span><br><span class="line">❯ ll /etc/apt/sources.list.d</span><br><span class="line">.rw-r--r-- root root 137 B Fri Feb  5 17:49:07 2021 git-core-ubuntu-ppa-focal.list</span><br><span class="line">❯ cat /etc/apt/sources.list.d/git-core-ubuntu-ppa-focal.list</span><br><span class="line">deb https://launchpad.proxy.ustclug.org/git-core/ppa/ubuntu focal main</span><br><span class="line"></span><br><span class="line"><span class="comment"># install the latest git</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><h3 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:cwchien/gradle</span><br></pre></td></tr></table></figure><h3 id="OpenJDK"><a href="#OpenJDK" class="headerlink" title="OpenJDK"></a>OpenJDK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:openjdk-r/ppa</span><br></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br></pre></td></tr></table></figure><h2 id="Change-the-Default-PPA-Source"><a href="#Change-the-Default-PPA-Source" class="headerlink" title="Change the Default PPA Source"></a>Change the Default PPA Source</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s@http://ppa.launchpad.net@https://launchpad.proxy.ustclug.org@g&quot;</span> /etc/apt/sources.list.d/*.list</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&quot;s@http://mirrors.aliyun.com@https://mirrors.aliyun.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="line">sed -i <span class="string">&quot;s@http://archive.ubuntu.com@https://mirrors.aliyun.com@g&quot;</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">By PPA, to install the latest</summary>
    
    
    
    <category term="linux" scheme="https://blog.caoyu.info/categories/linux/"/>
    
    
    <category term="ubuntu" scheme="https://blog.caoyu.info/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>How to Copy a List in Python</title>
    <link href="https://blog.caoyu.info/copy-list-python.html"/>
    <id>https://blog.caoyu.info/copy-list-python.html</id>
    <published>2021-01-22T16:35:46.000Z</published>
    <updated>2021-01-22T16:38:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How-to-Copy-a-List-in-Python"><a href="#How-to-Copy-a-List-in-Python" class="headerlink" title="How to Copy a List in Python"></a>How to Copy a List in Python</h1><h2 id="set-a-to-b"><a href="#set-a-to-b" class="headerlink" title="set a to b"></a>set a to b</h2><p>if assgin <code>a</code> to <code>b</code> directly, <code>a</code> and <code>b</code> share one reference.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><h2 id="by-list"><a href="#by-list" class="headerlink" title="by list()"></a>by <code>list()</code></h2><p><code>list()</code> and <code>[:]</code> are the same. Except for the first layer changes, all other layers changes will be transferred.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><h2 id="by"><a href="#by" class="headerlink" title="by [:]"></a>by <code>[:]</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><h2 id="list-and-change-the-other-layers-except-for-the-1st-layer"><a href="#list-and-change-the-other-layers-except-for-the-1st-layer" class="headerlink" title="list() and [:] change the other layers, except for the 1st layer"></a>list() and [:] change the other layers, except for the 1st layer</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># =========== [:] ===========</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>][<span class="number">0</span>] = <span class="number">999</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># =========== list() ===========</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">list</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3.5</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">2</span>][<span class="number">0</span>] = <span class="number">999</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">999</span>, <span class="number">6</span>]], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><h2 id="by-copy"><a href="#by-copy" class="headerlink" title="by copy()"></a>by copy()</h2><p>You will find that <code>copy</code> function is the same as <code>list()</code> and <code>[:]</code>. They are all <code>shallow copy</code>.</p><p>For much more information about <code>shallow copy</code> and <code>deep copy</code>, maybe you can reference <a href="https://docs.python.org/3/library/copy.html">here</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.copy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><h2 id="by-deepcopy"><a href="#by-deepcopy" class="headerlink" title="by deepcopy()"></a>by <code>deepcopy()</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> copy</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.deepcopy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.deepcopy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Let&#39;s understand what are the shallow-copy and deep-copy.</summary>
    
    
    
    <category term="java" scheme="https://blog.caoyu.info/categories/java/"/>
    
    
    <category term="python" scheme="https://blog.caoyu.info/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>A settings.json file for Windows Terminal</title>
    <link href="https://blog.caoyu.info/windows-terminal-settings.html"/>
    <id>https://blog.caoyu.info/windows-terminal-settings.html</id>
    <published>2020-10-08T19:53:32.000Z</published>
    <updated>2021-01-22T16:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows-Terminal-Settings"><a href="#Windows-Terminal-Settings" class="headerlink" title="Windows Terminal Settings"></a>Windows Terminal Settings</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This file was initially generated by Windows Terminal 1.4.3243.0</span></span><br><span class="line"><span class="comment">// It should still be usable in newer versions, but newer versions might have additional</span></span><br><span class="line"><span class="comment">// settings, help text, or changes that you will not see unless you clear this file</span></span><br><span class="line"><span class="comment">// and let us generate a new one for you.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// To view the default settings, hold &quot;alt&quot; while clicking on the &quot;Settings&quot; button.</span></span><br><span class="line"><span class="comment">// For documentation on these settings, see: https://aka.ms/terminal-documentation</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;$schema&quot;</span>: <span class="string">&quot;https://aka.ms/terminal-profiles-schema&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;defaultProfile&quot;</span>: <span class="string">&quot;&#123;1d0ce090-9b1f-59f9-9e57-8ede4dba3071&#125;&quot;</span>,</span><br><span class="line">  <span class="comment">// You can add more global application settings here.</span></span><br><span class="line">  <span class="comment">// To learn more about global settings, visit https://aka.ms/terminal-global-settings</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// If enabled, selections are automatically copied to your clipboard.</span></span><br><span class="line">  <span class="attr">&quot;copyOnSelect&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// If enabled, formatted data is also copied to your clipboard</span></span><br><span class="line">  <span class="attr">&quot;copyFormatting&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class="line">  <span class="comment">// Each one of them will appear in the &#x27;New Tab&#x27; dropdown,</span></span><br><span class="line">  <span class="comment">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class="line">  <span class="comment">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class="line">  <span class="attr">&quot;profiles&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;defaults&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">// Put settings here that you want to apply to all profiles.</span></span><br><span class="line">      <span class="comment">// custome config</span></span><br><span class="line">      <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;acrylicOpacity&quot;</span>: <span class="number">0.85</span>,</span><br><span class="line">      <span class="attr">&quot;colorScheme&quot;</span>: <span class="string">&quot;Tango Dark&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cursorShape&quot;</span>: <span class="string">&quot;filledBox&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cursorColor&quot;</span>: <span class="string">&quot;#b20af5&quot;</span>,</span><br><span class="line">      <span class="comment">// &quot;fontFace&quot; : &quot;Cascadia Code PL&quot;,</span></span><br><span class="line">      <span class="attr">&quot;fontFace&quot;</span>: <span class="string">&quot;MesloLGS NF&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;useAcrylic&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the powershell.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Windows PowerShell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;powershell.exe&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the bash.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;1d0ce090-9b1f-59f9-9e57-8ede4dba3071&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Git Bash&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;%LOCALAPPDATA%/Programs/Git/bin/bash.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;%LOCALAPPDATA%/Programs/Git/mingw64/share/git/git-for-windows.ico&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;startingDirectory&quot;</span>: <span class="string">&quot;%USERPROFILE%&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the cmd.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Command Prompt&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;cmd.exe&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Azure Cloud Shell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;Windows.Terminal.Azure&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;07b52e3e-de2c-5db4-bd2d-ba144ed6c273&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Ubuntu-20.04&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;Windows.Terminal.Wsl&quot;</span>,</span><br><span class="line">        <span class="comment">// this will start from root dir</span></span><br><span class="line">        <span class="attr">&quot;startingDirectory&quot;</span>: <span class="string">&quot;//wsl$/Ubuntu-20.04/&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Add custom color schemes to this array.</span></span><br><span class="line">  <span class="comment">// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes</span></span><br><span class="line">  <span class="attr">&quot;schemes&quot;</span>: [],</span><br><span class="line">  <span class="comment">// Add custom actions and keybindings to this array.</span></span><br><span class="line">  <span class="comment">// To unbind a key combination from your defaults.json, set the command to &quot;unbound&quot;.</span></span><br><span class="line">  <span class="comment">// To learn more about actions and keybindings, visit https://aka.ms/terminal-keybindings</span></span><br><span class="line">  <span class="attr">&quot;actions&quot;</span>: [</span><br><span class="line">    <span class="comment">// Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.</span></span><br><span class="line">    <span class="comment">// These two lines additionally bind them to Ctrl+C and Ctrl+V.</span></span><br><span class="line">    <span class="comment">// To learn more about selection, visit https://aka.ms/terminal-selection</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;action&quot;</span>: <span class="string">&quot;copy&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;singleLine&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+c&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;paste&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+v&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// Press Ctrl+Shift+F to open the search box</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;find&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+shift+f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// Press Alt+Shift+D to open a new pane.</span></span><br><span class="line">    <span class="comment">// - &quot;split&quot;: &quot;auto&quot; makes this pane open in the direction that provides the most surface area.</span></span><br><span class="line">    <span class="comment">// - &quot;splitMode&quot;: &quot;duplicate&quot; makes the new pane use the focused pane&#x27;s profile.</span></span><br><span class="line">    <span class="comment">// To learn more about panes, visit https://aka.ms/terminal-panes</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;action&quot;</span>: <span class="string">&quot;splitPane&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;split&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;splitMode&quot;</span>: <span class="string">&quot;duplicate&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;alt+shift+d&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">A customized settings.json file</summary>
    
    
    
    <category term="general" scheme="https://blog.caoyu.info/categories/general/"/>
    
    
    <category term="win" scheme="https://blog.caoyu.info/tags/win/"/>
    
  </entry>
  
  <entry>
    <title>Install Python from Source Code</title>
    <link href="https://blog.caoyu.info/install-python-optimal.html"/>
    <id>https://blog.caoyu.info/install-python-optimal.html</id>
    <published>2020-09-27T13:32:10.000Z</published>
    <updated>2020-10-28T14:02:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="install-Python-Optimization-Version"><a href="#install-Python-Optimization-Version" class="headerlink" title="install Python(Optimization Version)"></a>install Python(Optimization Version)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">PYTHON_DIR=<span class="string">&quot;/opt/python&quot;</span></span><br><span class="line">DOWNLOAD_PYTHON_DIR=<span class="string">&quot;/home/download/python&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create the dirs</span></span><br><span class="line">install -d <span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span></span><br><span class="line"></span><br><span class="line">PYTHON_DEFAULT_VERSION=<span class="string">&quot;3.8.6&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_python</span></span>() &#123;</span><br><span class="line">    <span class="comment"># please ensure the version you specified lists here</span></span><br><span class="line">    <span class="comment"># https://www.python.org/ftp/python/</span></span><br><span class="line">    python_version=<span class="variable">$&#123;1:-<span class="variable">$PYTHON_DEFAULT_VERSION</span>&#125;</span></span><br><span class="line">    python_home=<span class="string">&quot;<span class="variable">$&#123;PYTHON_DIR&#125;</span>/<span class="variable">$&#123;python_version&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># create the dirs</span></span><br><span class="line">    install -d <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    python_remote_url=<span class="string">&quot;https://www.python.org/ftp/python/<span class="variable">$&#123;python_version&#125;</span>/Python-<span class="variable">$&#123;python_version&#125;</span>.tgz&quot;</span></span><br><span class="line">    python_local_url=<span class="string">&quot;<span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span>/Python-<span class="variable">$&#123;python_version&#125;</span>.tgz&quot;</span></span><br><span class="line"></span><br><span class="line">    [[ ! -f <span class="variable">$&#123;python_local_url&#125;</span> ]] &amp;&amp; wget -P <span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span> <span class="string">&quot;<span class="variable">$&#123;python_remote_url&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    tar -zxvf <span class="string">&quot;<span class="variable">$&#123;python_local_url&#125;</span>&quot;</span> -C <span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span> || <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ************ install dependency packages ************</span></span><br><span class="line">    yum install -y gcc gcc-c++ automake make autoconf libtool diffutils sudo zlib-devel || <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ************ install python ************</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$&#123;DOWNLOAD_PYTHON_DIR&#125;</span>/Python-<span class="variable">$&#123;python_version&#125;</span>&quot;</span> || <span class="built_in">return</span></span><br><span class="line">    <span class="comment"># if need, you can uncomment the following code</span></span><br><span class="line">    <span class="comment"># make clean</span></span><br><span class="line">    ./configure --prefix=<span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>&quot;</span> --enable-optimizations</span><br><span class="line">    make</span><br><span class="line">    sudo make install</span><br><span class="line"></span><br><span class="line">    <span class="comment"># export to path</span></span><br><span class="line">    PY_BIN=<span class="string">&quot;/opt/python/<span class="variable">$&#123;python_version&#125;</span>/bin&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;SHELL&#125;</span> =~ <span class="string">&quot;/bin/zsh&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        [[ ! <span class="variable">$&#123;PATH&#125;</span> =~ <span class="variable">$&#123;PY_BIN&#125;</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;PATH=/opt/python/<span class="variable">$&#123;python_version&#125;</span>/bin/:\$PATH&quot;</span> &gt;&gt;<span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.zshrc&quot;</span></span><br><span class="line">        <span class="comment"># shellcheck source=$HOME</span></span><br><span class="line">        <span class="built_in">source</span> <span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.zshrc&quot;</span></span><br><span class="line">        <span class="built_in">export</span> PATH</span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="variable">$&#123;SHELL&#125;</span> =~ <span class="string">&quot;/bin/bash&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        [[ ! <span class="variable">$&#123;PATH&#125;</span> =~ <span class="variable">$&#123;PY_BIN&#125;</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;PATH=/opt/python/<span class="variable">$&#123;python_version&#125;</span>/bin/:\$PATH&quot;</span> &gt;&gt;<span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.bashrc&quot;</span></span><br><span class="line">        <span class="comment"># shellcheck source=$HOME</span></span><br><span class="line">        <span class="built_in">source</span> <span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.bash_profile&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    manage_python</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">manage_python</span></span>() &#123;</span><br><span class="line">    <span class="comment"># remove old python version management</span></span><br><span class="line">    alternatives --display python | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    alternatives --display pip | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove pip &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">    <span class="comment"># rebuild new python version</span></span><br><span class="line">    py_v=<span class="string">&quot;python<span class="variable">$&#123;python_version&#125;</span>&quot;</span></span><br><span class="line">    pip_v=<span class="string">&quot;pip<span class="variable">$&#123;python_version&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;python_version&#125;</span> == 2* ]]; <span class="keyword">then</span></span><br><span class="line">        alternatives --display python2 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python2 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">        rm -fr /usr/bin/python</span><br><span class="line">        rm -fr /usr/bin/pip</span><br><span class="line">        rm -fr /usr/bin/python2</span><br><span class="line">        rm -fr /usr/bin/pip2</span><br><span class="line"></span><br><span class="line">        <span class="comment"># manage python</span></span><br><span class="line">        alternatives --install <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>/bin/python2&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python2 python2 <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python python /usr/bin/python2 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;python_version&#125;</span> == 3* ]]; <span class="keyword">then</span></span><br><span class="line">        alternatives --display python3 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove python3 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        alternatives --display pip3 | grep priority | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -n1 alternatives --remove pip3 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">        rm -fr /usr/bin/python</span><br><span class="line">        rm -fr /usr/bin/pip</span><br><span class="line">        rm -fr /usr/bin/python3</span><br><span class="line">        rm -fr /usr/bin/pip3</span><br><span class="line"></span><br><span class="line">        <span class="comment"># manage python</span></span><br><span class="line">        alternatives --install <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;py_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>/bin/python3&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python3 python3 <span class="string">&quot;/usr/bin/<span class="variable">$&#123;py_v&#125;</span>&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/python python /usr/bin/python3 9</span><br><span class="line"></span><br><span class="line">        <span class="comment"># manage pip</span></span><br><span class="line">        alternatives --install <span class="string">&quot;/usr/bin/<span class="variable">$&#123;pip_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;pip_v&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;python_home&#125;</span>/bin/pip3&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/pip3 pip3 <span class="string">&quot;/usr/bin/<span class="variable">$&#123;pip_v&#125;</span>&quot;</span> 9</span><br><span class="line">        alternatives --install /usr/bin/pip pip /usr/bin/pip3 9</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage:</span></span><br><span class="line"><span class="comment">#     default install python 3.8.6</span></span><br><span class="line"><span class="comment">#     sh install_python.sh</span></span><br><span class="line"><span class="comment">#     sh install_python.sh 3.9.0</span></span><br><span class="line">install_python <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Automatically install Python, just need to set python version number</summary>
    
    
    
    <category term="python" scheme="https://blog.caoyu.info/categories/python/"/>
    
    
    <category term="python" scheme="https://blog.caoyu.info/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Create a middleware in Flask</title>
    <link href="https://blog.caoyu.info/middleware-in-flask.html"/>
    <id>https://blog.caoyu.info/middleware-in-flask.html</id>
    <published>2020-09-18T11:14:26.000Z</published>
    <updated>2020-11-11T16:31:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Middleware-in-Flask"><a href="#Middleware-in-Flask" class="headerlink" title="Middleware in Flask"></a>Middleware in Flask</h1><p>How to implement middleware in Flask, just like in Django?</p><p>In Flask, we can implement it by <strong>WSGI middleware</strong>.</p><h2 id="WSGI-Middleware"><a href="#WSGI-Middleware" class="headerlink" title="WSGI Middleware"></a>WSGI Middleware</h2><p>A WSGI middleware component is a Python callable that is itself a WSGI application, but may handle requests by delegating to other WSGI applications. These applications can themselves be WSGI middleware components.</p><p>A middleware component can perform such functions as:</p><ul><li>Routing a request to different application objects based on the target URL, after changing the environment variables accordingly.</li><li>Allowing multiple applications or frameworks to run side-by-side in the same process</li><li>Load balancing and remote processing, by forwarding requests and responses over a network</li><li>Performing content post-processing, such as applying XSLT stylesheets</li></ul><h2 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><p>Here is a <a href="https://github.com/pplmx/LearningPython/tree/master/flask">simple demo</a>.</p><h3 id="log-middleware"><a href="#log-middleware" class="headerlink" title="log middleware"></a>log middleware</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> werkzeug <span class="keyword">import</span> Request, Response</span><br><span class="line"></span><br><span class="line">AUDIT_LOG = <span class="string">&#x27;cc.log&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OperationLogMiddleware</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, app</span>):</span></span><br><span class="line">        self._app = app</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, environ, start_response</span>):</span></span><br><span class="line">        req = Request(environ)</span><br><span class="line">        resp = Response(start_response)</span><br><span class="line">        self._process_request(req)</span><br><span class="line">        self._process_response(resp)</span><br><span class="line">        <span class="keyword">return</span> self._app(environ, start_response)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_process_request</span>(<span class="params">request</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(AUDIT_LOG, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;hello request: <span class="subst">&#123;request.method&#125;</span>&#x27;</span>, file=f)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_process_response</span>(<span class="params">response</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(AUDIT_LOG, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;hello response: <span class="subst">&#123;response.status_code&#125;</span>&#x27;</span>, file=f)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="flask-main-py"><a href="#flask-main-py" class="headerlink" title="flask main.py"></a>flask main.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, url_for</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> redirect</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> middleware.operation_log <span class="keyword">import</span> OperationLogMiddleware</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the custom middleware</span></span><br><span class="line">app.wsgi_app = OperationLogMiddleware(app.wsgi_app)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>(<span class="params">name: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;Hello <span class="subst">&#123;name&#125;</span>!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/apply/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_redirect</span>(<span class="params">name: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;hello_admin&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;hello_guest&#x27;</span>, guest=name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_admin</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello Admin&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/guest/&lt;guest&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_guest</span>(<span class="params">guest</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;Hello <span class="subst">&#123;guest&#125;</span> as Guest&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Implement middleware in Flask</summary>
    
    
    
    <category term="python" scheme="https://blog.caoyu.info/categories/python/"/>
    
    
    <category term="flask" scheme="https://blog.caoyu.info/tags/flask/"/>
    
    <category term="wsgi" scheme="https://blog.caoyu.info/tags/wsgi/"/>
    
    <category term="middleware" scheme="https://blog.caoyu.info/tags/middleware/"/>
    
  </entry>
  
  <entry>
    <title>XShell highlights</title>
    <link href="https://blog.caoyu.info/xshell-highlights.html"/>
    <id>https://blog.caoyu.info/xshell-highlights.html</id>
    <published>2020-09-18T11:14:09.000Z</published>
    <updated>2021-03-18T11:17:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="highlights"><a href="#highlights" class="headerlink" title="highlights"></a>highlights</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># info</span></span><br><span class="line">(\binfo\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># debug</span></span><br><span class="line">(\bdebug\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># warn, inactive, unknown</span></span><br><span class="line">(\bwarn(ing)?\b)|(\binactive\b)|(\bunknown\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># error, fail, false, down</span></span><br><span class="line">(\berror\b)|(\bfail(ed)?\b)|(\bfalse\b)|(\bdown\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># active, success, true, ok, up</span></span><br><span class="line">(\bactive(d)?\b)|(\bsuccess(ful(ly)?)?\b)|(\btrue\b)|(\bok\b)|(\bup\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># start, begin, enable, create, open</span></span><br><span class="line">(\bstart(ed|ing)?\b)|(\bbegin(ning)?\b)|(\benable(d)?\b)|(\bcreate(d)?\b)|(\bopen\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># stop, end, finish, disable, delete, close</span></span><br><span class="line">(\bstop(ped)?\b)|(\bend\b)|(\bfinish(ed)?\b)|(\bdisable(d)?\b)|(\bdelete(d)?\b)|(\bclose(d)?\b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># IPv4</span></span><br><span class="line">(?=(\b|\D))(((\d&#123;1,2&#125;)|(1\d&#123;1,2&#125;)|(2[0-4]\d)|(25[0-5]))\.)&#123;3&#125;((\d&#123;1,2&#125;)|(1\d&#123;1,2&#125;)|(2[0-4]\d)|(25[0-5]))(?=(\b|\D))\s*</span><br><span class="line"></span><br><span class="line"><span class="comment"># IPv6</span></span><br><span class="line">[\[ ]?\s*((([0-9A-Fa-f]&#123;1,4&#125;:)&#123;7&#125;([0-9A-Fa-f]&#123;1,4&#125;|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;(:[0-9A-Fa-f]&#123;1,4&#125;|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;5&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,2&#125;)|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;4&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,3&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;3&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,4&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,2&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;2&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,5&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,3&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;1&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,6&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,4&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(:(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,7&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,5&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:)))(%.+)?\s*\]?</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Create-hls-file"><a href="#Create-hls-file" class="headerlink" title="Create hls file"></a>Create hls file</h2><p>You can also create your custom file in <code>~\Documents\NetSarang Computer\7\Xshell\HighlightSet Files\</code>. Copy the following content to your custom file now.</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Keyword_0]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=[_a-z0-<span class="number">9</span>-]+(.[_a-z0-<span class="number">9</span>-]+)*@[a-z0-<span class="number">9</span>-]+(.[a-z0-<span class="number">9</span>-]+)*</span><br><span class="line"><span class="attr">Description</span>=Email address</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">286</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">286</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_1]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(?=(\b|\D))(((\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">1</span>\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d)|(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]))\.)&#123;<span class="number">3</span>&#125;((\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">1</span>\d&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d)|(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]))(?=(\b|\D))\s*</span><br><span class="line"><span class="attr">Description</span>=IPv4</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">295</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_2]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=[\[ ]?\s*((([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">7</span>&#125;([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">6</span>&#125;(:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;|((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;)|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">5</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">2</span>&#125;)|:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;)|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">4</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">3</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)?:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">3</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">2</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">2</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">5</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">3</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(([<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>&#125;(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">6</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">4</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:))|(:(((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">7</span>&#125;)|((:[<span class="number">0</span>-<span class="number">9</span>A-Fa-f]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">5</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d)(\.(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]\d|<span class="number">1</span>\d\d|[<span class="number">1</span>-<span class="number">9</span>]?\d))&#123;<span class="number">3</span>&#125;))|:)))(%.+)?\s*\]?</span><br><span class="line"><span class="attr">Description</span>=IPv6</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">294</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_3]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\berror\b)|(\bfail(ed)?\b)|(\b<span class="literal">false</span>\b)|(\bdown\b)|(\blocked\b)</span><br><span class="line"><span class="attr">Description</span>=error, fail, <span class="literal">false</span>, down</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">290</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_4]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bactive(d)?\b)|(\bsuccess(ful(ly)?)?\b)|(\b<span class="literal">true</span>\b)|(\bok\b)|(\bup\b)|(\brunning\b)|(\bdeployed\b)|(\bunlocked\b)</span><br><span class="line"><span class="attr">Description</span>=active, success, <span class="literal">true</span>, ok, up</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">291</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_5]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bstart(ed|ing)?\b)|(\bbegin(ning)?\b)|(\benable(d)?\b)|(\bcreate(d)?\b)|(\bopen\b)</span><br><span class="line"><span class="attr">Description</span>=start, begin, enable, create, open</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">291</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_6]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bstop(ped)?\b)|(\bend\b)|(\bfinish(ed)?\b)|(\bdisable(d)?\b)|(\bdelete(d)?\b)|(\bclose(d)?\b)</span><br><span class="line"><span class="attr">Description</span>=stop, end, finish, disable, delete</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">293</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_7]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\bwarn(ing)?\b)|(\binactive\b)|(\bunknown\b)</span><br><span class="line"><span class="attr">Description</span>=warn, inactive, unknown</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">282</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Colors]</span></span><br><span class="line"><span class="attr">Colors</span>=<span class="number">000000</span>,<span class="number">00</span>E4FF,<span class="number">000040</span>,<span class="number">0080</span>FF,<span class="number">400000</span>,C08080,<span class="number">8080</span>FF,C0C0C0,<span class="number">555555</span>,<span class="number">5555</span>FF,<span class="number">55</span>FF55,<span class="number">55</span>FFFF,FF5555,FF55FF,FFFF55,FFFFFF</span><br><span class="line"><span class="section">[Keyword_8]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=(\binfo\b)</span><br><span class="line"><span class="attr">Description</span>=info</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">291</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_9]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=\bDEBUG\b</span><br><span class="line"><span class="attr">Description</span>=debug</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">293</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[info]</span></span><br><span class="line"><span class="attr">Version</span>=<span class="number">1.1</span></span><br><span class="line"><span class="attr">Count</span>=<span class="number">12</span></span><br><span class="line"><span class="section">[Keyword_10]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=\/\b(\d|([<span class="number">1</span>-<span class="number">9</span>]\d)|(<span class="number">1</span>[<span class="number">01</span>]\d)|(<span class="number">12</span>[<span class="number">0</span>-<span class="number">8</span>]))\b</span><br><span class="line"><span class="attr">Description</span>=CIDR</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">284</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"><span class="section">[Keyword_11]</span></span><br><span class="line"><span class="attr">TermBackColor</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Underline</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Bold</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Strikeout</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Keyword</span>=([a-zA-Z0-<span class="number">9</span>._-]+@([a-zA-Z0-<span class="number">9</span>_-]+\.)+[a-zA-Z0-<span class="number">9</span>_-]+)</span><br><span class="line"><span class="attr">Description</span>=Email Regex</span><br><span class="line"><span class="attr">BackColorIndex</span>=<span class="number">292</span></span><br><span class="line"><span class="attr">UseRegex</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">Italic</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">Enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">TextColorIndex</span>=<span class="number">286</span></span><br><span class="line"><span class="attr">CaseSens</span>=<span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Make your terminal more clear</summary>
    
    
    
    <category term="general" scheme="https://blog.caoyu.info/categories/general/"/>
    
    
    <category term="terminal" scheme="https://blog.caoyu.info/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>Http Version Comparison</title>
    <link href="https://blog.caoyu.info/http-version.html"/>
    <id>https://blog.caoyu.info/http-version.html</id>
    <published>2020-09-16T10:53:10.000Z</published>
    <updated>2020-09-16T11:02:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h2><table><thead><tr><th align="center">Year</th><th align="center">HTTP Version</th></tr></thead><tbody><tr><td align="center">1996</td><td align="center"><a href="https://tools.ietf.org/html/rfc1945">1.0</a></td></tr><tr><td align="center">1997</td><td align="center"><a href="https://tools.ietf.org/html/rfc2616">1.1</a></td></tr><tr><td align="center">2000</td><td align="center"><a href="https://tools.ietf.org/html/rfc2818">HTTPS</a></td></tr><tr><td align="center">2015</td><td align="center"><a href="https://tools.ietf.org/html/rfc7540">2.0</a></td></tr><tr><td align="center">???</td><td align="center"><a href="https://tools.ietf.org/html/draft-ietf-quic-http">3.0 Draft</a></td></tr></tbody></table><p><img src="assets/HTTP-v1-v2-v3-stacks.png" alt="HTTP_Version"></p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><img src="assets/http1-265x300.png" alt="HTTP1 Protocol"></td><td><img src="assets/http1.1-265x300.png" alt="HTTP1.1 Protocol"></td><td><img src="assets/http2-283x300.png" alt="HTTP2 Protocol"></td></tr></tbody></table><ul><li><p>HTTP/1.0</p><blockquote><p>For every TCP connection there is only one request and one response.</p></blockquote></li><li><p>HTTP/1.1</p><blockquote><p>It supports connection reuse i.e. for every TCP connection there could be multiple requests and responses, and pipelining where the client can request several resources from the server at once.</p><p>However, pipelining was hard to implement due to issues such as head-of-line blocking and was not a feasible solution.</p></blockquote></li><li><p>HTTP/2</p><blockquote><p>Uses multiplexing, where over a single TCP connection resources to be delivered are interleaved and arrive at the client almost at the same time.</p><p>It is done using streams which can be prioritized, can have dependencies and individual flow control.</p><p>It also provides a feature called server push that allows the server to send data that the client will need but has not yet requested.</p></blockquote></li></ul><p><img src="assets/Comparison-of-HTTP-versions.jpg" alt="Comparison of HTTP versions"></p><h2 id="http-1-0"><a href="#http-1-0" class="headerlink" title="http 1.0"></a>http 1.0</h2><ul><li><p>No Connection</p><p>  Each request from the browser need build a connection with the server, once the server has handled the request and it will stop the tcp connection immediately.</p></li><li><p>No State</p><p>  The server do not trace every client, and record the past requests too.</p></li></ul><h2 id="http-1-1"><a href="#http-1-1" class="headerlink" title="http 1.1"></a>http 1.1</h2><ul><li>persistent connection</li><li>Host header is required</li><li>pipelining</li><li>cache-control</li><li>content negotiation</li></ul><h2 id="https"><a href="#https" class="headerlink" title="https"></a>https</h2><p>https ==&gt; HTTP + SSL</p><h2 id="http-2-0"><a href="#http-2-0" class="headerlink" title="http 2.0"></a>http 2.0</h2><ul><li>Binary Protocol<ul><li>Low overhead in parsing data — <strong>a critical value proposition in HTTP/2 vs HTTP1</strong>.</li><li>Less prone to errors.</li><li>Lighter network footprint.</li><li>Effective network resource utilization.</li><li>Reduced network latency and improved throughput.</li><li>Eliminating security concerns associated with the textual nature of HTTP1.x such as response  splitting attacks.</li><li>Efficient and robust in terms of processing of data between client and server.</li><li>Compact representation of commands for easier processing and implementation.</li><li>Enables other capabilities of the HTTP/2 including compression, multiplexing, prioritization, flow control and effective handling of TLS.</li></ul></li><li>Request Multiplexing<ul><li>Allows you to download web files asynchronously from one server.</li></ul></li><li>Header Compression</li><li>Server Push<ul><li>The client saves pushed resources in the cache.</li><li>The client can reuse these cached resources across different pages.</li><li>The server can multiplex pushed resources along with originally requested information within the  same TCP connection.</li><li>The server can prioritize pushed resources — <strong>a key performance differentiator in HTTP/2 vs HTTP1</strong>.</li><li>The client can decline pushed resources to maintain an effective repository of cached resources or  disable Server Push entirely.</li><li>The client can also limit the number of pushed streams multiplexed concurrently.</li></ul></li></ul><h2 id="http-3-0"><a href="#http-3-0" class="headerlink" title="http 3.0"></a>http 3.0</h2>]]></content>
    
    
    <summary type="html">HTTP Evolution in 1.0, 2.0, 3.0</summary>
    
    
    
    <category term="network" scheme="https://blog.caoyu.info/categories/network/"/>
    
    
    <category term="http" scheme="https://blog.caoyu.info/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>Call to __init__ of super class is missed</title>
    <link href="https://blog.caoyu.info/super-init-in-python.html"/>
    <id>https://blog.caoyu.info/super-init-in-python.html</id>
    <published>2020-09-03T09:06:03.000Z</published>
    <updated>2020-09-04T16:24:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Call-to-init-of-super-class-is-missed"><a href="#Call-to-init-of-super-class-is-missed" class="headerlink" title="Call to __init__ of super class is missed"></a>Call to <code>__init__</code> of super class is missed</h1><h2 id="Origin"><a href="#Origin" class="headerlink" title="Origin"></a>Origin</h2><p>If a parent class declare <code>__init__</code> method explicitly, even if that method is empty</p><p>then the sub class’s <code>__init__</code> method need to invoke parent’s <code>__init__</code></p><p>if not, a warning <code>Call to __init__ of super class is missed</code> will be thrown by PyCharm.</p><h2 id="Tracing"><a href="#Tracing" class="headerlink" title="Tracing"></a>Tracing</h2><p>Why? Please follow me, look at the first demo</p><h3 id="Error-Demo"><a href="#Error-Demo" class="headerlink" title="Error Demo"></a>Error Demo</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.color = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.age = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ci = Cat()</span><br><span class="line">    <span class="built_in">print</span>(ci.color, ci.age)</span><br><span class="line"></span><br><span class="line"><span class="comment"># it will throw error: AttributeError: &#x27;Cat&#x27; object has no attribute &#x27;color&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Fine-1"><a href="#Fine-1" class="headerlink" title="Fine 1"></a>Fine 1</h3><p>If a sub class do not override <code>__init__</code> method, parent’s attributes will be inherited.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.color = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ci = Cat()</span><br><span class="line">    <span class="built_in">print</span>(ci.color) <span class="comment"># black</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># this works fine, Animal&#x27;s attr is be inherited.</span></span><br></pre></td></tr></table></figure><h3 id="Fine-2"><a href="#Fine-2" class="headerlink" title="Fine 2"></a>Fine 2</h3><p>If a sub class want to declare its own attributes and inherit its parent’s attributes, do as follows:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.color = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.age = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ci = Cat()</span><br><span class="line">    <span class="built_in">print</span>(ci.color, ci.age) <span class="comment"># black 1</span></span><br></pre></td></tr></table></figure><h3 id="Fine-3-Multiple-Inheritance-solution-1"><a href="#Fine-3-Multiple-Inheritance-solution-1" class="headerlink" title="Fine 3: Multiple Inheritance - solution 1"></a>Fine 3: Multiple Inheritance - solution 1</h3><p>If a sub class inherits from multiple parent class, you should do like as follows.</p><p>If you do not <strong>explicitly</strong> invoke parent’s <code>__init__</code> for <strong>each</strong> parent class in Subclass’s <code>__init__</code>, it will <strong>only</strong> inherit <strong>the first parent class</strong>‘s attributes.(The first parent class in the following code is <strong>Engine</strong> class.)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Engine</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.performance = <span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Skeleton</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.shape = <span class="string">&#x27;Rectangle&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span>(<span class="params">Engine, Skeleton</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        Engine.__init__(self)</span><br><span class="line">        Skeleton.__init__(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deliver</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(self.performance)</span><br><span class="line">        <span class="built_in">print</span>(self.shape)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    BMW = Car()</span><br><span class="line">    BMW.deliver()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Fine-3-Multiple-Inheritance-solution-2"><a href="#Fine-3-Multiple-Inheritance-solution-2" class="headerlink" title="Fine 3: Multiple Inheritance - solution 2"></a>Fine 3: Multiple Inheritance - solution 2</h3><p>Or like this:</p><p>(If you are not sure the parent class’s behavior, Solution 1 is very good.)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Engine</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.performance = <span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Skeleton</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.shape = <span class="string">&#x27;Rectangle&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span>(<span class="params">Engine, Skeleton</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deliver</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(self.performance)</span><br><span class="line">        <span class="built_in">print</span>(self.shape)</span><br></pre></td></tr></table></figure><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>At the most time(Or <strong>always</strong>. Unless you know why you need not invoke init), you should invoke parent’s init in every subclass init method.</p>]]></content>
    
    
    <summary type="html">You should invoke super().__init__() for every class.</summary>
    
    
    
    <category term="python" scheme="https://blog.caoyu.info/categories/python/"/>
    
    
    <category term="general" scheme="https://blog.caoyu.info/tags/general/"/>
    
  </entry>
  
  <entry>
    <title>Horizon Image Based on Mitaka</title>
    <link href="https://blog.caoyu.info/docker-horizon.html"/>
    <id>https://blog.caoyu.info/docker-horizon.html</id>
    <published>2020-08-27T17:06:35.000Z</published>
    <updated>2020-08-27T17:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Horizon"><a href="#Horizon" class="headerlink" title="Horizon"></a>Horizon</h1><p><strong>All accounts’ password is <code>root</code>.</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create container and expose some ports</span></span><br><span class="line">docker container run -d --privileged --name ho \</span><br><span class="line">    -p 80:80 -p 5000:5000 -p 35357:35357 \</span><br><span class="line">    --add-host info:127.0.0.1 --add-host controller:127.0.0.1 \</span><br><span class="line">    purplemystic/mitaka_horizon init</span><br><span class="line"></span><br><span class="line"><span class="comment"># restart rabbitmq and apache2</span></span><br><span class="line"><span class="comment"># mysql and apache2 use domain: controller</span></span><br><span class="line"><span class="comment"># rabbitmq use domain: info(For more information: https://blog.caoyu.info/rabbitmq-lost-user-info.html)</span></span><br><span class="line">docker container <span class="built_in">exec</span> -it ho bash -c <span class="string">&quot;service mysql restart; service rabbitmq-server restart; service memcached restart; service apache2 restart&quot;</span></span><br><span class="line"></span><br><span class="line">docker container <span class="built_in">exec</span> -it ho bash</span><br><span class="line"><span class="comment"># login to ho, and source openrc</span></span><br><span class="line"><span class="built_in">source</span> ~/admin-openrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># access by browser</span></span><br><span class="line"><span class="comment"># configure your /etc/hosts</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;127.0.0.1 info controller&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"><span class="comment"># Finally, you can login by browser</span></span><br><span class="line">http://127.0.0.1/horizon</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">A simple horizon docker demo. FYI.</summary>
    
    
    
    <category term="openstack" scheme="https://blog.caoyu.info/categories/openstack/"/>
    
    
    <category term="horizon" scheme="https://blog.caoyu.info/tags/horizon/"/>
    
    <category term="dashboard" scheme="https://blog.caoyu.info/tags/dashboard/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack Volume</title>
    <link href="https://blog.caoyu.info/openstack-volume.html"/>
    <id>https://blog.caoyu.info/openstack-volume.html</id>
    <published>2020-07-24T15:18:53.000Z</published>
    <updated>2020-10-23T10:37:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OpenStack-Volume"><a href="#OpenStack-Volume" class="headerlink" title="OpenStack Volume"></a>OpenStack Volume</h1><h2 id="FYI"><a href="#FYI" class="headerlink" title="FYI"></a>FYI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># list the compute nodes where the servers locate</span></span><br><span class="line">openstack server list --long -c ID -c Name -c Host -c <span class="string">&#x27;Power State&#x27;</span> -c <span class="string">&#x27;Networks&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list the instance names that are servers&#x27; alias</span></span><br><span class="line">openstack server show vm4qos1 -c id -c name -c <span class="string">&#x27;OS-EXT-SRV-ATTR:host&#x27;</span> -c <span class="string">&#x27;OS-EXT-SRV-ATTR:instance_name&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># merge the above two command</span></span><br><span class="line"><span class="comment"># get some servers&#x27; instance_name, host and so on</span></span><br><span class="line">openstack server list -c ID -c Name | \</span><br><span class="line">grep vm4qos* | \</span><br><span class="line">awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span> | \</span><br><span class="line">sed <span class="string">&#x27;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span> | \</span><br><span class="line">xargs -n1 openstack server show -c id -c name -c addresses -c <span class="string">&#x27;OS-EXT-SRV-ATTR:host&#x27;</span> -c <span class="string">&#x27;OS-EXT-SRV-ATTR:instance_name&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or nova list, the same as above</span></span><br><span class="line"><span class="comment"># fields can get from `nova show some-vm`&#x27;s Property </span></span><br><span class="line">nova list --fields name,OS-EXT-SRV-ATTR:instance_name,OS-EXT-SRV-ATTR:host</span><br><span class="line">nova list --fields name,OS-EXT-SRV-ATTR:instance_name,OS-EXT-SRV-ATTR:host --name vm4qos*</span><br></pre></td></tr></table></figure><h2 id="Prepare-Environment-for-QoS"><a href="#Prepare-Environment-for-QoS" class="headerlink" title="Prepare Environment for QoS"></a>Prepare Environment for QoS</h2><p><strong>pre_env4qos.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Firstly, create network</span></span><br><span class="line">netw_id=$(openstack network create cc_net_1 -c id | awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $3 &#125;&#x27;</span> | sed <span class="string">&#x27;1,3d;$d;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span></span><br><span class="line"><span class="comment"># neutron subnet-create --name cc_net_1_sub $&#123;netw_id&#125; 192.168.1.0/24</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">openstack subnet create cc_net_1_sub --network <span class="variable">$&#123;netw_id&#125;</span> --subnet-range 192.168.1.0/24</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. create volume type</span></span><br><span class="line">openstack volume <span class="built_in">type</span> create frontend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> create frontend_qos_2</span><br><span class="line"></span><br><span class="line">openstack volume <span class="built_in">type</span> create backend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> create backend_qos_2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.1. create a QoS-1</span></span><br><span class="line">openstack volume qos create qos1 --consumer front-end \</span><br><span class="line">--property read_iops_sec=2000 \</span><br><span class="line">--property write_iops_sec=2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.2. create a QoS-111</span></span><br><span class="line">openstack volume qos create qos111 --consumer back-end \</span><br><span class="line">--property read_iops_sec=2000 \</span><br><span class="line">--property write_iops_sec=2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. associate QoS and volume type</span></span><br><span class="line">openstack volume qos associate qos1 frontend_qos_1</span><br><span class="line">openstack volume qos associate qos1 frontend_qos_2</span><br><span class="line"></span><br><span class="line">openstack volume qos associate qos111 backend_qos_1</span><br><span class="line">openstack volume qos associate qos111 backend_qos_2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. create volumes</span></span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_1 --size 1 volume01</span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_1 --size 1 volume02</span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_2 --size 2 volume03</span><br><span class="line">openstack volume create --<span class="built_in">type</span> frontend_qos_2 --size 2 volume04</span><br><span class="line"></span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_1 --size 1 volume11</span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_1 --size 1 volume12</span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_2 --size 2 volume13</span><br><span class="line">openstack volume create --<span class="built_in">type</span> backend_qos_2 --size 2 volume14</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. create a vm</span></span><br><span class="line">openstack server create vm4qos1 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos2 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos3 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos4 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">openstack server create vm4qos11 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos12 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos13 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line">openstack server create vm4qos14 --flavor 3 --image BAT-image --nic net-id=<span class="string">&quot;<span class="variable">$&#123;netw_id&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wait for creating VMs</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Creating VMs, please wait for 80s.&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span></span><br><span class="line">sleep 80</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. attach a volume for a vm</span></span><br><span class="line"><span class="comment"># openstack server add volume INSTANCE_ID VOLUME_ID</span></span><br><span class="line">openstack server add volume vm4qos1 volume01</span><br><span class="line">openstack server add volume vm4qos2 volume02</span><br><span class="line">openstack server add volume vm4qos3 volume03</span><br><span class="line">openstack server add volume vm4qos4 volume04</span><br><span class="line"></span><br><span class="line">openstack server add volume vm4qos11 volume11</span><br><span class="line">openstack server add volume vm4qos12 volume12</span><br><span class="line">openstack server add volume vm4qos13 volume13</span><br><span class="line">openstack server add volume vm4qos14 volume14</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Remove-Env-for-QoS"><a href="#Remove-Env-for-QoS" class="headerlink" title="Remove Env for QoS"></a>Remove Env for QoS</h2><p><strong>del_env4qos.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ******** reset env ********</span></span><br><span class="line"><span class="comment"># delete server</span></span><br><span class="line">openstack server delete vm4qos1</span><br><span class="line">openstack server delete vm4qos2</span><br><span class="line">openstack server delete vm4qos3</span><br><span class="line">openstack server delete vm4qos4</span><br><span class="line"></span><br><span class="line">openstack server delete vm4qos11</span><br><span class="line">openstack server delete vm4qos12</span><br><span class="line">openstack server delete vm4qos13</span><br><span class="line">openstack server delete vm4qos14</span><br><span class="line"></span><br><span class="line"><span class="comment"># wait for deleting VMs</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Deleting VMs, please wait for 80s.&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span></span><br><span class="line">sleep 80</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete volume</span></span><br><span class="line">openstack volume delete volume01</span><br><span class="line">openstack volume delete volume02</span><br><span class="line">openstack volume delete volume03</span><br><span class="line">openstack volume delete volume04</span><br><span class="line"></span><br><span class="line">openstack volume delete volume11</span><br><span class="line">openstack volume delete volume12</span><br><span class="line">openstack volume delete volume13</span><br><span class="line">openstack volume delete volume14</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete volume type and qos</span></span><br><span class="line">openstack volume <span class="built_in">type</span> delete frontend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> delete frontend_qos_2</span><br><span class="line">openstack volume <span class="built_in">type</span> delete backend_qos_1</span><br><span class="line">openstack volume <span class="built_in">type</span> delete backend_qos_2</span><br><span class="line">openstack volume qos delete qos1</span><br><span class="line">openstack volume qos delete qos111</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove network</span></span><br><span class="line">openstack subnet list | grep cc_net_1_sub | awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span> | sed <span class="string">&#x27;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span> | xargs -n1 openstack subnet delete</span><br><span class="line"></span><br><span class="line">openstack network list | grep cc_net_1 | awk -F<span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span> | sed <span class="string">&#x27;s@^[[:space:]]*@@g;s@[[:space:]]*$@@g&#x27;</span> | xargs -n1 openstack network delete</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Update-QoS"><a href="#Update-QoS" class="headerlink" title="Update QoS"></a>Update QoS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">openstack volume qos <span class="built_in">set</span> --property <span class="string">&quot;read_iops_sec=10000&quot;</span> --property <span class="string">&quot;write_iops_sec=8000&quot;</span> qos1</span><br><span class="line">openstack volume qos <span class="built_in">set</span> --property <span class="string">&quot;read_bytes_sec=2000&quot;</span> --property <span class="string">&quot;write_bytes_sec=2048&quot;</span> qos1</span><br><span class="line">openstack volume qos <span class="built_in">unset</span> --property <span class="string">&quot;read_iops_sec&quot;</span> --property <span class="string">&quot;write_iops_sec&quot;</span> qos1</span><br><span class="line">openstack volume qos disassociate qos1 --volume-type frontend_qos_2</span><br><span class="line">openstack volume qos disassociate qos1 --all</span><br><span class="line">openstack volume qos associate qos1 frontend_qos_1</span><br><span class="line">openstack volume qos associate qos1 frontend_qos_2</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Update QoS by OpenStack CLi</summary>
    
    
    
    <category term="openstack" scheme="https://blog.caoyu.info/categories/openstack/"/>
    
    
    <category term="storage" scheme="https://blog.caoyu.info/tags/storage/"/>
    
    <category term="cinder" scheme="https://blog.caoyu.info/tags/cinder/"/>
    
  </entry>
  
  <entry>
    <title>Modifiers Order in Java</title>
    <link href="https://blog.caoyu.info/modifiers-order-in-java.html"/>
    <id>https://blog.caoyu.info/modifiers-order-in-java.html</id>
    <published>2020-06-23T15:42:07.000Z</published>
    <updated>2020-06-23T15:44:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Modifiers-Order"><a href="#Modifiers-Order" class="headerlink" title="Modifiers Order"></a>Modifiers Order</h1><p>The Java Language Specification recommends listing modifiers in the following order:</p><ol><li>Annotations</li><li>public/protected/private</li><li>abstract</li><li>static</li><li>final</li><li>transient</li><li>volatile</li><li>synchronized</li><li>native</li><li>strictfp</li></ol>]]></content>
    
    
    <summary type="html">Modifiers Order in Java</summary>
    
    
    
    <category term="java" scheme="https://blog.caoyu.info/categories/java/"/>
    
    
    <category term="notes" scheme="https://blog.caoyu.info/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Deepcopy by Serializable in Java</title>
    <link href="https://blog.caoyu.info/deep-copy-in-java.html"/>
    <id>https://blog.caoyu.info/deep-copy-in-java.html</id>
    <published>2020-06-23T15:00:41.000Z</published>
    <updated>2020-06-23T15:04:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Deep-Copy-in-Java"><a href="#Deep-Copy-in-Java" class="headerlink" title="Deep Copy in Java"></a>Deep Copy in Java</h1><h2 id="By-Serializable"><a href="#By-Serializable" class="headerlink" title="By Serializable"></a>By Serializable</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.mess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InvalidClassException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectStreamClass;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeepCopyUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Serializable&gt; <span class="function">T <span class="title">clone</span><span class="params">(T obj)</span> </span>&#123;</span><br><span class="line">        T cloneObj = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// write byte stream</span></span><br><span class="line">            <span class="keyword">try</span> (ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream()) &#123;</span><br><span class="line">                <span class="keyword">try</span> (ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(baos)) &#123;</span><br><span class="line">                    oos.writeObject(obj);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// assign memory, write raw object, generate new object</span></span><br><span class="line">                <span class="keyword">try</span> (ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(baos.toByteArray())) &#123;</span><br><span class="line">                    <span class="keyword">try</span> (ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(bais)) &#123;</span><br><span class="line">                        <span class="comment">// return new object</span></span><br><span class="line">                        <span class="comment">// noinspection unchecked</span></span><br><span class="line">                        cloneObj = (T) ois.readObject();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Some errors occurred during cloning.&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cloneObj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Serializable&gt; <span class="function">T <span class="title">cloneWithLimited</span><span class="params">(T obj)</span> </span>&#123;</span><br><span class="line">        T cloneObj = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// write byte stream</span></span><br><span class="line">            <span class="keyword">try</span> (ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream()) &#123;</span><br><span class="line">                <span class="keyword">try</span> (ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(baos)) &#123;</span><br><span class="line">                    oos.writeObject(obj);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// assign memory, write raw object, generate new object</span></span><br><span class="line">                <span class="keyword">try</span> (ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(baos.toByteArray())) &#123;</span><br><span class="line">                    <span class="comment">// FIXME maybe read file is much better</span></span><br><span class="line">                    Set&lt;Object&gt; whitelist = <span class="keyword">new</span> HashSet&lt;&gt;(Arrays.asList(<span class="string">&quot;GoodClass1&quot;</span>, <span class="string">&quot;GoodClass2&quot;</span>));</span><br><span class="line">                    <span class="keyword">try</span> (WhitelistedObjectInputStream ois = <span class="keyword">new</span> WhitelistedObjectInputStream(bais, whitelist)) &#123;</span><br><span class="line">                        <span class="comment">// return new object</span></span><br><span class="line">                        <span class="comment">// noinspection unchecked</span></span><br><span class="line">                        cloneObj = (T) ois.readObject();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Some errors occurred during cloning.&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cloneObj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WhitelistedObjectInputStream</span> <span class="keyword">extends</span> <span class="title">ObjectInputStream</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;Object&gt; whitelist;</span><br><span class="line"></span><br><span class="line">    WhitelistedObjectInputStream(InputStream inputStream, Set&lt;Object&gt; wl) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">super</span>(inputStream);</span><br><span class="line">        whitelist = Collections.unmodifiableSet(wl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt; resolveClass(ObjectStreamClass cls) <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!whitelist.contains(cls.getName())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidClassException(<span class="string">&quot;Unexpected serialized class&quot;</span>, cls.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.resolveClass(cls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Deepcopy by Serializable</summary>
    
    
    
    <category term="java" scheme="https://blog.caoyu.info/categories/java/"/>
    
    
    <category term="notes" scheme="https://blog.caoyu.info/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>How to use switch in Python?</title>
    <link href="https://blog.caoyu.info/switch-in-python.html"/>
    <id>https://blog.caoyu.info/switch-in-python.html</id>
    <published>2020-06-23T10:43:33.000Z</published>
    <updated>2020-06-23T10:45:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="To-implement-a-switch-structure-in-Python"><a href="#To-implement-a-switch-structure-in-Python" class="headerlink" title="To implement a switch structure in Python"></a>To implement a switch structure in Python</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">switch = &#123;</span><br><span class="line">    <span class="string">&#x27;add&#x27;</span>: <span class="keyword">lambda</span> x, y: x + y,</span><br><span class="line">    <span class="string">&#x27;sub&#x27;</span>: <span class="keyword">lambda</span> x, y: x - y,</span><br><span class="line">    <span class="string">&#x27;mul&#x27;</span>: <span class="keyword">lambda</span> x, y: x * y,</span><br><span class="line">    <span class="string">&#x27;div&#x27;</span>: <span class="keyword">lambda</span> x, y: x / y,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;add&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;sub&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;mul&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line">    <span class="built_in">print</span>(switch[<span class="string">&#x27;div&#x27;</span>](<span class="number">1</span>, <span class="number">8</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">-7</span><br><span class="line">8</span><br><span class="line">0.125</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Let&#39;s use switch in Python.</summary>
    
    
    
    <category term="python" scheme="https://blog.caoyu.info/categories/python/"/>
    
    
    <category term="switch" scheme="https://blog.caoyu.info/tags/switch/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ lost user info</title>
    <link href="https://blog.caoyu.info/rabbitmq-lost-user-info.html"/>
    <id>https://blog.caoyu.info/rabbitmq-lost-user-info.html</id>
    <published>2020-06-23T10:02:28.000Z</published>
    <updated>2020-06-23T10:45:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h1><h2 id="lost-user-info"><a href="#lost-user-info" class="headerlink" title="lost user info"></a>lost user info</h2><blockquote><p>After rebooting, the rabbit user info lost.</p></blockquote><h3 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h3><blockquote><p>Because RabbitMQ stores info by hostname.</p><p>Hostname had been changed, so RabbitMQ getting info by the new hostname failed</p></blockquote><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><blockquote><p>To add fixed node</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;NODENAME=rabbit@info&#x27;</span> | sudo tee -a /etc/rabbitmq/rabbitmq-env.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;127.0.0.1 info&#x27;</span> | sudo tee -a /etc/hosts</span><br><span class="line"></span><br><span class="line">ps axu | grep rabbitmq | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | sudo xargs <span class="built_in">kill</span> -9</span><br><span class="line"></span><br><span class="line">sudo service rabbitmq-server start</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">How to fix rabbit lost user info after a reboot?</summary>
    
    
    
    <category term="troubleshooting" scheme="https://blog.caoyu.info/categories/troubleshooting/"/>
    
    
    <category term="troubleshooting" scheme="https://blog.caoyu.info/tags/troubleshooting/"/>
    
    <category term="rabbitmq" scheme="https://blog.caoyu.info/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>delete, truncate and drop</title>
    <link href="https://blog.caoyu.info/db-del-trunc-drop.html"/>
    <id>https://blog.caoyu.info/db-del-trunc-drop.html</id>
    <published>2020-06-23T08:57:45.000Z</published>
    <updated>2020-06-23T09:17:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="delete-truncate-drop"><a href="#delete-truncate-drop" class="headerlink" title="delete truncate drop"></a>delete truncate drop</h1><h2 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h2><ol><li><p>delete是 <code>DML</code> ，执行delete操作时，每次从表中删除一行，并且同时将该行的的删除操作记录在redo和undo表空间中以便进行回滚（rollback）和重做操作，但要注意表空间要足够大，需要手动提交（commit）操作才能生效，可以通过rollback撤消操作。</p></li><li><p>delete可根据条件删除表中满足条件的数据，如果不指定where子句，那么删除表中所有记录。</p></li><li><p>delete语句不影响表所占用的extent，高水线(high watermark)保持原位置不变。</p></li></ol><h2 id="truncate"><a href="#truncate" class="headerlink" title="truncate"></a>truncate</h2><ol><li><p>truncate是 <code>DDL</code> ，会隐式提交，所以，不能回滚，不会触发触发器。</p></li><li><p>truncate会删除表中所有记录，并且将重新设置高水线和所有的索引，缺省情况下将空间释放到minextents个extent，除非使用reuse storage，。不会记录日志，所以执行速度很快，但不能通过rollback撤消操作（如果一不小心把一个表truncate掉，也是可以恢复的，只是不能通过rollback来恢复）。</p></li><li><p>对于外键（foreignkey ）约束引用的表，不能使用 truncate table，而应使用不带 where 子句的 delete 语句。</p></li><li><p>truncate table不能用于参与了索引视图的表。</p></li></ol><h2 id="drop"><a href="#drop" class="headerlink" title="drop"></a>drop</h2><ol><li><p>drop是 <code>DDL</code> ，会隐式提交，所以，不能回滚，不会触发触发器。</p></li><li><p>drop语句删除表结构及所有数据，并将表所占用的空间全部释放。</p></li><li><p>drop语句将删除表的结构所依赖的约束，触发器，索引，依赖于该表的存储过程/函数将保留,但是变为invalid状态。</p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>在速度上，一般来说，drop&gt; truncate &gt; delete。</p></li><li><p>在使用drop和truncate时一定要注意，虽然可以恢复，但为了减少麻烦，还是要慎重。</p></li><li><p>如果想删除部分数据用delete，注意带上where子句，回滚段要足够大；</p></li></ol><ul><li><p>如果想删除表，当然用drop；  </p></li><li><p>如果想保留表而将所有数据删除，如果和事务无关，用truncate即可；</p></li><li><p>如果和事务有关，或者想触发trigger，还是用delete；</p></li><li><p>如果是整理表内部的碎片，可以用truncate跟上reuse stroage，再重新导入/插入数据。</p></li></ul>]]></content>
    
    
    <summary type="html">What are the difference among delete, truncate and drop?</summary>
    
    
    
    <category term="database" scheme="https://blog.caoyu.info/categories/database/"/>
    
    
    <category term="sql" scheme="https://blog.caoyu.info/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Composite Pattern in Design Pattern</title>
    <link href="https://blog.caoyu.info/design-pattern-composite.html"/>
    <id>https://blog.caoyu.info/design-pattern-composite.html</id>
    <published>2020-06-17T18:08:39.000Z</published>
    <updated>2020-06-17T18:10:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组合模式"><a href="#组合模式" class="headerlink" title="组合模式"></a>组合模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>组合模式（Composite Pattern），又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。</p><p>组合模式依据树形结构来组合对象，用来表示部分以及整体层次。</p><p>这种类型的设计模式属于结构型模式，它创建了对象组的树形结构。</p><p>这种模式创建了一个包含自己对象组的类。该类提供了修改相同对象组的方式。</p><h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>它在我们树型结构的问题中，模糊了简单元素和复杂元素的概念，客户程序可以像处理简单元素一样来处理复杂元素，从而使得客户程序与复杂元素的内部结构解耦。</p><h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><ul><li>您想表示对象的部分-整体层次结构（树形结构）</li><li>您希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象</li></ul><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul><li>算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作符也可以是操作数、操作符和另一个操作数</li></ul><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>高层模块调用简单</li><li>节点自由增加</li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/composite-pattern.png" alt="Composite Pattern"></p><h3 id="Employee"><a href="#Employee" class="headerlink" title="Employee"></a>Employee</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.composite;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String dept;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> salary;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Employee&gt; subordinateList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(<span class="keyword">int</span> id, String name, String dept, <span class="keyword">int</span> salary)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.dept = dept;</span><br><span class="line">        <span class="keyword">this</span>.salary = salary;</span><br><span class="line">        <span class="keyword">this</span>.subordinateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Employee employee)</span> </span>&#123;</span><br><span class="line">        subordinateList.add(employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Employee employee)</span> </span>&#123;</span><br><span class="line">        subordinateList.remove(employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDept</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dept;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDept</span><span class="params">(String dept)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dept = dept;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(<span class="keyword">int</span> salary)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getSubordinateList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> subordinateList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Employee&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, dept=&#x27;&quot;</span> + dept + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, salary=&quot;</span> + salary +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.structural.composite;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompositePatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Employee ceo = <span class="keyword">new</span> Employee(<span class="number">10000</span>, <span class="string">&quot;Adam&quot;</span>, <span class="string">&quot;CEO&quot;</span>, <span class="number">70000</span>);</span><br><span class="line"></span><br><span class="line">        Employee headSales = <span class="keyword">new</span> Employee(<span class="number">20000</span>, <span class="string">&quot;Robert&quot;</span>, <span class="string">&quot;Head Sales&quot;</span>, <span class="number">20000</span>);</span><br><span class="line">        Employee headMarketing = <span class="keyword">new</span> Employee(<span class="number">30000</span>, <span class="string">&quot;Michel&quot;</span>, <span class="string">&quot;Head Marketing&quot;</span>, <span class="number">20000</span>);</span><br><span class="line"></span><br><span class="line">        Employee salesExecutive1 = <span class="keyword">new</span> Employee(<span class="number">20001</span>, <span class="string">&quot;Richard&quot;</span>, <span class="string">&quot;Sales&quot;</span>, <span class="number">10000</span>);</span><br><span class="line">        Employee salesExecutive2 = <span class="keyword">new</span> Employee(<span class="number">20002</span>, <span class="string">&quot;Rob&quot;</span>, <span class="string">&quot;Sales&quot;</span>, <span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">        Employee clerk1 = <span class="keyword">new</span> Employee(<span class="number">30001</span>, <span class="string">&quot;Laura&quot;</span>, <span class="string">&quot;Marketing&quot;</span>, <span class="number">10000</span>);</span><br><span class="line">        Employee clerk2 = <span class="keyword">new</span> Employee(<span class="number">30002</span>, <span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;Marketing&quot;</span>, <span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">        ceo.add(headSales);</span><br><span class="line">        ceo.add(headMarketing);</span><br><span class="line"></span><br><span class="line">        headSales.add(salesExecutive1);</span><br><span class="line">        headSales.add(salesExecutive2);</span><br><span class="line"></span><br><span class="line">        headMarketing.add(clerk1);</span><br><span class="line">        headMarketing.add(clerk2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;ceo = &quot;</span> + ceo);</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// print ceo immediate subordinate</span></span><br><span class="line">        ceo.getSubordinateList().forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// print ceo immediate subordinate&#x27;s immediate subordinate</span></span><br><span class="line">        ceo.getSubordinateList().stream()</span><br><span class="line">                .flatMap(ceoSubordinate -&gt; ceoSubordinate.getSubordinateList().stream())</span><br><span class="line">                .forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ceo = Employee&#123;id=10000, name=&#x27;Adam&#x27;, dept=&#x27;CEO&#x27;, salary=70000&#125;</span><br><span class="line"></span><br><span class="line">Employee&#123;id=20000, name=&#x27;Robert&#x27;, dept=&#x27;Head Sales&#x27;, salary=20000&#125;</span><br><span class="line">Employee&#123;id=30000, name=&#x27;Michel&#x27;, dept=&#x27;Head Marketing&#x27;, salary=20000&#125;</span><br><span class="line"></span><br><span class="line">Employee&#123;id=20001, name=&#x27;Richard&#x27;, dept=&#x27;Sales&#x27;, salary=10000&#125;</span><br><span class="line">Employee&#123;id=20002, name=&#x27;Rob&#x27;, dept=&#x27;Sales&#x27;, salary=10000&#125;</span><br><span class="line">Employee&#123;id=30001, name=&#x27;Laura&#x27;, dept=&#x27;Marketing&#x27;, salary=10000&#125;</span><br><span class="line">Employee&#123;id=30002, name=&#x27;Bob&#x27;, dept=&#x27;Marketing&#x27;, salary=10000&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Let&#39;s begin to learn what&#39;s Composite Pattern.</summary>
    
    
    
    <category term="java" scheme="https://blog.caoyu.info/categories/java/"/>
    
    
    <category term="general" scheme="https://blog.caoyu.info/tags/general/"/>
    
    <category term="design pattern" scheme="https://blog.caoyu.info/tags/design-pattern/"/>
    
  </entry>
  
  <entry>
    <title>Interpreter Pattern in Design Pattern</title>
    <link href="https://blog.caoyu.info/design-pattern-interpreter.html"/>
    <id>https://blog.caoyu.info/design-pattern-interpreter.html</id>
    <published>2020-06-16T15:51:51.000Z</published>
    <updated>2020-06-16T15:54:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解释器模式"><a href="#解释器模式" class="headerlink" title="解释器模式"></a>解释器模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>解释器模式（Interpreter Pattern）提供了评估语言的语法或表达式的方式，它属于行为型模式。</p><p>这种模式实现了一个表达式接口，该接口解释一个特定的上下文。</p><p>这种模式被用在 SQL 解析、符号处理引擎等。</p><h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>对于一些固定文法构建一个解释句子的解释器</p><h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>如果一种特定类型的问题发生的频率足够高，那么可能就值得将该问题的各个实例表述为一个简单语言中的句子。</p><p>这样就可以构建一个解释器，该解释器通过解释这些句子来解决该问题。</p><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul><li>编译器</li><li>运算表达式计算</li></ul><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>可扩展性比较好，灵活</li><li>增加了新的解释表达式的方式</li><li>易于实现简单文法</li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/interpreter-pattern.png" alt="Interpreter Pattern"></p><h3 id="Expression"><a href="#Expression" class="headerlink" title="Expression"></a>Expression</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * interpret</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true or false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="TerminalExpression"><a href="#TerminalExpression" class="headerlink" title="TerminalExpression"></a>TerminalExpression</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TerminalExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TerminalExpression</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> context.contains(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="AndExpression"><a href="#AndExpression" class="headerlink" title="AndExpression"></a>AndExpression</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AndExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AndExpression</span><span class="params">(Expression exp1, Expression exp2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.exp1 = exp1;</span><br><span class="line">        <span class="keyword">this</span>.exp2 = exp2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> exp1.interpret(context) &amp;&amp; exp2.interpret(context);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="OrExpression"><a href="#OrExpression" class="headerlink" title="OrExpression"></a>OrExpression</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Expression exp2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">OrExpression</span><span class="params">(Expression exp1, Expression exp2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.exp1 = exp1;</span><br><span class="line">        <span class="keyword">this</span>.exp2 = exp2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">interpret</span><span class="params">(String context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> exp1.interpret(context) || exp2.interpret(context);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.interpreter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterpreterPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// rule: Kushagra and Lokesh are both male.</span></span><br><span class="line">        Expression person1 = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Kushagra&quot;</span>);</span><br><span class="line">        Expression person2 = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Lokesh&quot;</span>);</span><br><span class="line">        Expression isSingle = <span class="keyword">new</span> OrExpression(person1, person2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// rule: Vikram is committed.</span></span><br><span class="line">        Expression vikram = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Vikram&quot;</span>);</span><br><span class="line">        Expression committed = <span class="keyword">new</span> TerminalExpression(<span class="string">&quot;Committed&quot;</span>);</span><br><span class="line">        Expression isCommitted = <span class="keyword">new</span> AndExpression(vikram, committed);</span><br><span class="line"></span><br><span class="line">        System.out.println(isSingle.interpret(<span class="string">&quot;Kushagra&quot;</span>));</span><br><span class="line">        System.out.println(isSingle.interpret(<span class="string">&quot;Lokesh&quot;</span>));</span><br><span class="line">        System.out.println(isSingle.interpret(<span class="string">&quot;Achint&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(isCommitted.interpret(<span class="string">&quot;Committed, Vikram&quot;</span>));</span><br><span class="line">        System.out.println(isCommitted.interpret(<span class="string">&quot;Single, Vikram&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">true</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">true</span><br><span class="line">false</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Let&#39;s begin to learn what&#39;s Interpreter Pattern.</summary>
    
    
    
    <category term="java" scheme="https://blog.caoyu.info/categories/java/"/>
    
    
    <category term="general" scheme="https://blog.caoyu.info/tags/general/"/>
    
    <category term="design pattern" scheme="https://blog.caoyu.info/tags/design-pattern/"/>
    
  </entry>
  
  <entry>
    <title>Command Pattern in Design Pattern</title>
    <link href="https://blog.caoyu.info/design-pattern-command.html"/>
    <id>https://blog.caoyu.info/design-pattern-command.html</id>
    <published>2020-06-15T13:57:46.000Z</published>
    <updated>2020-06-15T14:00:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>命令模式（Command Pattern）是一种数据驱动的设计模式，它属于行为型模式。</p><p>请求以命令的形式包裹在对象中，并传给调用对象。</p><p>调用对象寻找可以处理该命令的合适的对象，并把该命令传给相应的对象，该对象执行命令。</p><h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>在软件系统中，行为请求者与行为实现者通常是一种紧耦合的关系，但某些场合，比如需要对行为进行记录、撤销或重做、事务等处理时，这种无法抵御变化的紧耦合的设计就不太合适。</p><h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>在某些场合，比如要对行为进行”记录、撤销/重做、事务”等处理，这种无法抵御变化的紧耦合是不合适的。</p><p>在这种情况下，如何将”行为请求者”与”行为实现者”解耦？将一组行为抽象为对象，可以实现二者之间的松耦合。</p><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul><li>struts中的action核心控制器ActionServlet</li></ul><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>降低了系统耦合度</li><li>新的命令可以很容易添加到系统中去</li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/command-pattern.png" alt="Command Pattern"></p><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * execute a action</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Light"><a href="#Light" class="headerlink" title="Light"></a>Light</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Light</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">on</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Light.on&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">off</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Light.off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="LightOnCommand"><a href="#LightOnCommand" class="headerlink" title="LightOnCommand"></a>LightOnCommand</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LightOnCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Light light;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LightOnCommand</span><span class="params">(Light light)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.light = light;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        light.on();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="LightOffCommand"><a href="#LightOffCommand" class="headerlink" title="LightOffCommand"></a>LightOffCommand</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LightOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Light light;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LightOffCommand</span><span class="params">(Light light)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.light = light;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        light.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Stereo"><a href="#Stereo" class="headerlink" title="Stereo"></a>Stereo</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stereo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">on</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.on&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">off</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setCD&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDVD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setDVD&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadio</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setRadio&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVolume</span><span class="params">(<span class="keyword">int</span> volume)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Stereo.setVolume: volume = &quot;</span> + volume);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="StereoOnWithCdCommand"><a href="#StereoOnWithCdCommand" class="headerlink" title="StereoOnWithCdCommand"></a>StereoOnWithCdCommand</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StereoOnWithCdCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Stereo stereo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StereoOnWithCdCommand</span><span class="params">(Stereo stereo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.stereo = stereo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stereo.on();</span><br><span class="line">        stereo.setCD();</span><br><span class="line">        stereo.setVolume(<span class="number">11</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="StereoOffCommand"><a href="#StereoOffCommand" class="headerlink" title="StereoOffCommand"></a>StereoOffCommand</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StereoOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Stereo stereo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StereoOffCommand</span><span class="params">(Stereo stereo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.stereo = stereo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stereo.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SimpleRemoteControl"><a href="#SimpleRemoteControl" class="headerlink" title="SimpleRemoteControl"></a>SimpleRemoteControl</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleRemoteControl</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Command slot;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCommand</span><span class="params">(Command command)</span> </span>&#123;</span><br><span class="line">        slot = command;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buttonWasPressed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        slot.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommandPatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SimpleRemoteControl remote = <span class="keyword">new</span> SimpleRemoteControl();</span><br><span class="line">        Light light = <span class="keyword">new</span> Light();</span><br><span class="line">        Stereo stereo = <span class="keyword">new</span> Stereo();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// change command dynamically</span></span><br><span class="line">        remote.setCommand(<span class="keyword">new</span> LightOnCommand(light));</span><br><span class="line">        remote.buttonWasPressed();</span><br><span class="line"></span><br><span class="line">        remote.setCommand(<span class="keyword">new</span> StereoOnWithCdCommand(stereo));</span><br><span class="line">        remote.buttonWasPressed();</span><br><span class="line"></span><br><span class="line">        remote.setCommand(<span class="keyword">new</span> StereoOffCommand(stereo));</span><br><span class="line">        remote.buttonWasPressed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Light.on</span><br><span class="line">Stereo.on</span><br><span class="line">Stereo.setCD</span><br><span class="line">Stereo.setVolume: volume = 11</span><br><span class="line">Stereo.off</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Let&#39;s begin to learn what&#39;s Command Pattern.</summary>
    
    
    
    <category term="java" scheme="https://blog.caoyu.info/categories/java/"/>
    
    
    <category term="general" scheme="https://blog.caoyu.info/tags/general/"/>
    
    <category term="design pattern" scheme="https://blog.caoyu.info/tags/design-pattern/"/>
    
  </entry>
  
  <entry>
    <title>State Pattern in Design Pattern</title>
    <link href="https://blog.caoyu.info/design-pattern-state.html"/>
    <id>https://blog.caoyu.info/design-pattern-state.html</id>
    <published>2020-06-12T16:49:39.000Z</published>
    <updated>2020-06-12T16:55:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="状态模式"><a href="#状态模式" class="headerlink" title="状态模式"></a>状态模式</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>在状态模式（State Pattern）中，类的行为是基于它的状态改变的。</p><p>这种类型的设计模式属于行为型模式。</p><p>在状态模式中，我们创建表示各种状态的对象和一个行为随着状态对象改变而改变的 context 对象。</p><h2 id="主要解决"><a href="#主要解决" class="headerlink" title="主要解决"></a>主要解决</h2><p>对象的行为依赖于它的状态（属性），并且可以根据它的状态改变而改变它的相关行为</p><h2 id="何时使用"><a href="#何时使用" class="headerlink" title="何时使用"></a>何时使用</h2><p>代码中包含大量与对象状态有关的条件语句</p><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul><li>购物订单的状态改变(未付款, 付款, 确认收货…)</li></ul><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>封装了转换规则</li><li>枚举可能的状态，在枚举状态之前需要确定状态种类</li><li>将所有与某个状态有关的行为放到一个类中，并且可以方便地增加新的状态，只需要改变对象状态即可改变对象的行为</li><li>允许状态转换逻辑与状态对象合成一体，而不是某一个巨大的条件语句块</li><li>可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数</li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="assets/state-pattern.png" alt="State Pattern"></p><h3 id="Package-State"><a href="#Package-State" class="headerlink" title="Package State"></a>Package State</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * update package state</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ctx context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Acknowledged"><a href="#Acknowledged" class="headerlink" title="Acknowledged"></a>Acknowledged</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Acknowledged</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Acknowledged singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Acknowledged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Acknowledged <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Acknowledged.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Acknowledged();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is acknowledged !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(Shipped.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Shipped"><a href="#Shipped" class="headerlink" title="Shipped"></a>Shipped</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shipped</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Shipped singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Shipped</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Shipped <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Shipped.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Shipped();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is shipped !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(InTransition.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="In-Transition"><a href="#In-Transition" class="headerlink" title="In Transition"></a>In Transition</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InTransition</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> InTransition singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InTransition</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InTransition <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (InTransition.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> InTransition();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is in transition !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(OutForDelivery.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Out-of-Delivery"><a href="#Out-of-Delivery" class="headerlink" title="Out of Delivery"></a>Out of Delivery</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutForDelivery</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> OutForDelivery singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">OutForDelivery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> OutForDelivery <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (OutForDelivery.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> OutForDelivery();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is out of delivery !!&quot;</span>);</span><br><span class="line">        ctx.setCurrentState(Delivered.instance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Delivered"><a href="#Delivered" class="headerlink" title="Delivered"></a>Delivered</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Delivered</span> <span class="keyword">implements</span> <span class="title">PackageState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Delivered singleton = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Delivered</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Delivered <span class="title">instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Delivered.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Delivered();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(DeliveryContext ctx)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Package is delivered!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DeliveryContext"><a href="#DeliveryContext" class="headerlink" title="DeliveryContext"></a>DeliveryContext</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeliveryContext</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> PackageState currentState;</span><br><span class="line">    <span class="keyword">private</span> String packageId;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DeliveryContext</span><span class="params">(PackageState currentState, String packageId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.currentState = currentState != <span class="keyword">null</span> ? currentState : Acknowledged.instance();</span><br><span class="line">        <span class="keyword">this</span>.packageId = packageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        currentState.updateState(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PackageState <span class="title">getCurrentState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> currentState;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCurrentState</span><span class="params">(PackageState currentState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.currentState = currentState;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPackageId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> packageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPackageId</span><span class="params">(String packageId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.packageId = packageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Tester"><a href="#Tester" class="headerlink" title="Tester"></a>Tester</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> individual.cy.learn.pattern.behavioral.state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mystic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StatePatternTester</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        DeliveryContext ctx = <span class="keyword">new</span> DeliveryContext(<span class="keyword">null</span>, <span class="string">&quot;Test1&quot;</span>);</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">        ctx.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Package is acknowledged !!</span><br><span class="line">Package is shipped !!</span><br><span class="line">Package is in transition !!</span><br><span class="line">Package is out of delivery !!</span><br><span class="line">Package is delivered !!</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Let&#39;s begin to learn what&#39;s State Pattern.</summary>
    
    
    
    <category term="java" scheme="https://blog.caoyu.info/categories/java/"/>
    
    
    <category term="general" scheme="https://blog.caoyu.info/tags/general/"/>
    
    <category term="design pattern" scheme="https://blog.caoyu.info/tags/design-pattern/"/>
    
  </entry>
  
</feed>
